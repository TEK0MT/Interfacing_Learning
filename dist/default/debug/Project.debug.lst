

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jun 13 21:37:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 17/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4620 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     
    50                           	psect	idataCOMRAM
    51   00106C                     __pidataCOMRAM:
    52                           	callstack 0
    53                           
    54                           ;initializer for _port_registers
    55   00106C  80                 	db	128
    56   00106D  0F                 	db	15
    57   00106E  81                 	db	129
    58   00106F  0F                 	db	15
    59   001070  82                 	db	130
    60   001071  0F                 	db	15
    61   001072  83                 	db	131
    62   001073  0F                 	db	15
    63   001074  84                 	db	132
    64   001075  0F                 	db	15
    65                           
    66                           ;initializer for _lat_registers
    67   001076  89                 	db	137
    68   001077  0F                 	db	15
    69   001078  8A                 	db	138
    70   001079  0F                 	db	15
    71   00107A  8B                 	db	139
    72   00107B  0F                 	db	15
    73   00107C  8C                 	db	140
    74   00107D  0F                 	db	15
    75   00107E  8D                 	db	141
    76   00107F  0F                 	db	15
    77                           
    78                           ;initializer for _tris_registers
    79   001080  92                 	db	146
    80   001081  0F                 	db	15
    81   001082  93                 	db	147
    82   001083  0F                 	db	15
    83   001084  94                 	db	148
    84   001085  0F                 	db	15
    85   001086  95                 	db	149
    86   001087  0F                 	db	15
    87   001088  96                 	db	150
    88   001089  0F                 	db	15
    89   000000                     _PORTE	set	3972
    90   000000                     _PORTD	set	3971
    91   000000                     _PORTC	set	3970
    92   000000                     _PORTB	set	3969
    93   000000                     _PORTA	set	3968
    94   000000                     _LATA	set	3977
    95   000000                     _TRISA	set	3986
    96   000000                     _TRISE	set	3990
    97   000000                     _TRISD	set	3989
    98   000000                     _TRISC	set	3988
    99   000000                     _TRISB	set	3987
   100   000000                     _LATE	set	3981
   101   000000                     _LATD	set	3980
   102   000000                     _LATC	set	3979
   103   000000                     _LATB	set	3978
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   001042                     __pcinit:
   109                           	callstack 0
   110   001042                     start_initialization:
   111                           	callstack 0
   112   001042                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (30 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117   001042  0E6C               	movlw	low __pidataCOMRAM
   118   001044  6EF6               	movwf	tblptrl,c
   119   001046  0E10               	movlw	high __pidataCOMRAM
   120   001048  6EF7               	movwf	tblptrh,c
   121   00104A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122   00104C  6EF8               	movwf	tblptru,c
   123   00104E  EE00  F001         	lfsr	0,__pdataCOMRAM
   124   001052  EE10 F01E          	lfsr	1,30
   125   001056                     copy_data0:
   126   001056  0009               	tblrd		*+
   127   001058  CFF5 FFEE          	movff	tablat,postinc0
   128   00105C  50E5               	movf	postdec1,w,c
   129   00105E  50E1               	movf	fsr1l,w,c
   130   001060  E1FA               	bnz	copy_data0
   131   001062                     end_of_initialization:
   132                           	callstack 0
   133   001062                     __end_of__initialization:
   134                           	callstack 0
   135   001062  0E00               	movlw	low (__Lmediumconst shr (0+16))
   136   001064  6EF8               	movwf	tblptru,c
   137   001066  0100               	movlb	0
   138   001068  EF01  F008         	goto	_main	;jump to C main() function
   139                           
   140                           	psect	dataCOMRAM
   141   000001                     __pdataCOMRAM:
   142                           	callstack 0
   143   000001                     _port_registers:
   144                           	callstack 0
   145   000001                     	ds	10
   146   00000B                     _lat_registers:
   147                           	callstack 0
   148   00000B                     	ds	10
   149   000015                     _tris_registers:
   150                           	callstack 0
   151   000015                     	ds	10
   152                           
   153                           	psect	cstackCOMRAM
   154   00001F                     __pcstackCOMRAM:
   155                           	callstack 0
   156   00001F                     ??_main:
   157   00001F                     
   158                           ; 2 bytes @ 0x0
   159   00001F                     	ds	2
   160                           
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 34 in file "application.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  2   97[None  ] int 
   173 ;; Registers used:
   174 ;;		wreg, status,2
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;Total ram usage:        2 bytes
   185 ;; This function calls:
   186 ;;		Nothing
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text0
   193   001002                     __ptext0:
   194                           	callstack 0
   195   001002                     _main:
   196                           	callstack 31
   197   001002                     
   198                           ;application.c: 35:     TRISC = 0x00;
   199   001002  0E00               	movlw	0
   200   001004  6E94               	movwf	148,c	;volatile
   201                           
   202                           ;application.c: 36:     ((volatile SELF_LATC *)(0xF8B))->LATC_REGISTER = 0x55;
   203   001006  0E55               	movlw	85
   204   001008  6E8B               	movwf	139,c	;volatile
   205   00100A                     l845:
   206                           
   207                           ;application.c: 40:     {;application.c: 41:     _delay((unsigned long)((2000)*(4000000/
      +                          4000.0)));
   208   00100A  0E0B               	movlw	11
   209   00100C  6E20               	movwf	(??_main+1)^0,c
   210   00100E  0E26               	movlw	38
   211   001010  6E1F               	movwf	??_main^0,c
   212   001012  0E5E               	movlw	94
   213   001014                     u147:
   214   001014  2EE8               	decfsz	wreg,f,c
   215   001016  D7FE               	bra	u147
   216   001018  2E1F               	decfsz	??_main^0,f,c
   217   00101A  D7FC               	bra	u147
   218   00101C  2E20               	decfsz	(??_main+1)^0,f,c
   219   00101E  D7FA               	bra	u147
   220   001020                     
   221                           ;application.c: 42:     ((volatile SELF_LATC *)(0xF8B))->SELF_LATC5 = 1;
   222   001020  8A8B               	bsf	139,5,c	;volatile
   223   001022                     
   224                           ;application.c: 43:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   225   001022  0E0B               	movlw	11
   226   001024  6E20               	movwf	(??_main+1)^0,c
   227   001026  0E26               	movlw	38
   228   001028  6E1F               	movwf	??_main^0,c
   229   00102A  0E5E               	movlw	94
   230   00102C                     u157:
   231   00102C  2EE8               	decfsz	wreg,f,c
   232   00102E  D7FE               	bra	u157
   233   001030  2E1F               	decfsz	??_main^0,f,c
   234   001032  D7FC               	bra	u157
   235   001034  2E20               	decfsz	(??_main+1)^0,f,c
   236   001036  D7FA               	bra	u157
   237   001038                     
   238                           ;application.c: 44:     ((volatile SELF_LATC *)(0xF8B))->SELF_LATC5 = 0;
   239   001038  9A8B               	bcf	139,5,c	;volatile
   240   00103A  EF05  F008         	goto	l845
   241   00103E  EF00  F000         	goto	start
   242   001042                     __end_of_main:
   243                           	callstack 0
   244                           
   245                           	psect	smallconst
   246   001000                     __psmallconst:
   247                           	callstack 0
   248   001000  00                 	db	0
   249   001001  00                 	db	0	; dummy byte at the end
   250   000000                     
   251                           	psect	rparam
   252   000000                     
   253                           	psect	config
   254                           
   255                           ; Padding undefined space
   256   300000                     	org	3145728
   257   300000  FF                 	db	255
   258                           
   259                           ;Config register CONFIG1H @ 0x300001
   260                           ;	Oscillator Selection bits
   261                           ;	OSC = HS, HS oscillator
   262                           ;	Fail-Safe Clock Monitor Enable bit
   263                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   264                           ;	Internal/External Oscillator Switchover bit
   265                           ;	IESO = OFF, Oscillator Switchover mode disabled
   266   300001                     	org	3145729
   267   300001  02                 	db	2
   268                           
   269                           ;Config register CONFIG2L @ 0x300002
   270                           ;	Power-up Timer Enable bit
   271                           ;	PWRT = OFF, PWRT disabled
   272                           ;	Brown-out Reset Enable bits
   273                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   274                           ;	Brown Out Reset Voltage bits
   275                           ;	BORV = 1, 
   276   300002                     	org	3145730
   277   300002  09                 	db	9
   278                           
   279                           ;Config register CONFIG2H @ 0x300003
   280                           ;	Watchdog Timer Enable bit
   281                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   282                           ;	Watchdog Timer Postscale Select bits
   283                           ;	WDTPS = 32768, 1:32768
   284   300003                     	org	3145731
   285   300003  1E                 	db	30
   286                           
   287                           ; Padding undefined space
   288   300004                     	org	3145732
   289   300004  FF                 	db	255
   290                           
   291                           ;Config register CONFIG3H @ 0x300005
   292                           ;	CCP2 MUX bit
   293                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   294                           ;	PORTB A/D Enable bit
   295                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   296                           ;	Low-Power Timer1 Oscillator Enable bit
   297                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   298                           ;	MCLR Pin Enable bit
   299                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   300   300005                     	org	3145733
   301   300005  81                 	db	129
   302                           
   303                           ;Config register CONFIG4L @ 0x300006
   304                           ;	Stack Full/Underflow Reset Enable bit
   305                           ;	STVREN = ON, Stack full/underflow will cause Reset
   306                           ;	Single-Supply ICSP Enable bit
   307                           ;	LVP = OFF, Single-Supply ICSP disabled
   308                           ;	Extended Instruction Set Enable bit
   309                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   310                           ;	Background Debugger Enable bit
   311                           ;	DEBUG = 0x1, unprogrammed default
   312   300006                     	org	3145734
   313   300006  81                 	db	129
   314                           
   315                           ; Padding undefined space
   316   300007                     	org	3145735
   317   300007  FF                 	db	255
   318                           
   319                           ;Config register CONFIG5L @ 0x300008
   320                           ;	Code Protection bit
   321                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   322                           ;	Code Protection bit
   323                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   324                           ;	Code Protection bit
   325                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   326                           ;	Code Protection bit
   327                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   328   300008                     	org	3145736
   329   300008  0F                 	db	15
   330                           
   331                           ;Config register CONFIG5H @ 0x300009
   332                           ;	Boot Block Code Protection bit
   333                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   334                           ;	Data EEPROM Code Protection bit
   335                           ;	CPD = OFF, Data EEPROM not code-protected
   336   300009                     	org	3145737
   337   300009  C0                 	db	192
   338                           
   339                           ;Config register CONFIG6L @ 0x30000A
   340                           ;	Write Protection bit
   341                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   342                           ;	Write Protection bit
   343                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   344                           ;	Write Protection bit
   345                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   346                           ;	Write Protection bit
   347                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   348   30000A                     	org	3145738
   349   30000A  0F                 	db	15
   350                           
   351                           ;Config register CONFIG6H @ 0x30000B
   352                           ;	Configuration Register Write Protection bit
   353                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   354                           ;	Boot Block Write Protection bit
   355                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   356                           ;	Data EEPROM Write Protection bit
   357                           ;	WRTD = OFF, Data EEPROM not write-protected
   358   30000B                     	org	3145739
   359   30000B  E0                 	db	224
   360                           
   361                           ;Config register CONFIG7L @ 0x30000C
   362                           ;	Table Read Protection bit
   363                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   364                           ;	Table Read Protection bit
   365                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   366                           ;	Table Read Protection bit
   367                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   368                           ;	Table Read Protection bit
   369                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   370   30000C                     	org	3145740
   371   30000C  0F                 	db	15
   372                           
   373                           ;Config register CONFIG7H @ 0x30000D
   374                           ;	Boot Block Table Read Protection bit
   375                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   376   30000D                     	org	3145741
   377   30000D  40                 	db	64
   378                           tosu	equ	0xFFF
   379                           tosh	equ	0xFFE
   380                           tosl	equ	0xFFD
   381                           stkptr	equ	0xFFC
   382                           pclatu	equ	0xFFB
   383                           pclath	equ	0xFFA
   384                           pcl	equ	0xFF9
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           prodh	equ	0xFF4
   390                           prodl	equ	0xFF3
   391                           indf0	equ	0xFEF
   392                           postinc0	equ	0xFEE
   393                           postdec0	equ	0xFED
   394                           preinc0	equ	0xFEC
   395                           plusw0	equ	0xFEB
   396                           fsr0h	equ	0xFEA
   397                           fsr0l	equ	0xFE9
   398                           wreg	equ	0xFE8
   399                           indf1	equ	0xFE7
   400                           postinc1	equ	0xFE6
   401                           postdec1	equ	0xFE5
   402                           preinc1	equ	0xFE4
   403                           plusw1	equ	0xFE3
   404                           fsr1h	equ	0xFE2
   405                           fsr1l	equ	0xFE1
   406                           bsr	equ	0xFE0
   407                           indf2	equ	0xFDF
   408                           postinc2	equ	0xFDE
   409                           postdec2	equ	0xFDD
   410                           preinc2	equ	0xFDC
   411                           plusw2	equ	0xFDB
   412                           fsr2h	equ	0xFDA
   413                           fsr2l	equ	0xFD9
   414                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2      32
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      2      20       1       25.2%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      39        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jun 13 21:37:20 2024

                    l851 1038                      l843 1002                      l845 100A  
                    l847 1020                      l849 1022                      u147 1014  
                    u157 102C                      wreg 0FE8                     _LATA 0F89  
                   _LATB 0F8A                     _LATC 0F8B                     _LATD 0F8C  
                   _LATE 0F8D                     _main 1002                     fsr1l 0FE1  
                   start 0000             ___param_bank 0000                    ?_main 001F  
                  _PORTA 0F80                    _PORTB 0F81                    _PORTC 0F82  
                  _PORTD 0F83                    _PORTE 0F84                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
                  _TRISE 0F96                    tablat 0FF5          __initialization 1042  
           __end_of_main 1042            _lat_registers 000B                   ??_main 001F  
          __activetblptr 0002                   isa$std 0001             __pdataCOMRAM 0001  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0080  __end_of__initialization 1062  
          ___rparam_used 0001           __pcstackCOMRAM 001F           _tris_registers 0015  
                __Hparam 0000                  __Lparam 0000             __psmallconst 1000  
                __pcinit 1042                  __ramtop 1000                  __ptext0 1002  
   end_of_initialization 1062            __Lmediumconst 0000                  postdec1 0FE5  
                postinc0 0FEE            __pidataCOMRAM 106C      start_initialization 1042  
            __smallconst 1000                copy_data0 1056                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000           _port_registers 0001  
