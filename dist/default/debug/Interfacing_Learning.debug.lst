

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jul 06 06:54:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 17/10/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4620 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     
    75                           	psect	idataCOMRAM
    76   001796                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _keypad_values
    80   001796  37                 	db	55
    81   001797  38                 	db	56
    82   001798  39                 	db	57
    83   001799  2F                 	db	47
    84   00179A  34                 	db	52
    85   00179B  35                 	db	53
    86   00179C  36                 	db	54
    87   00179D  2A                 	db	42
    88   00179E  31                 	db	49
    89   00179F  32                 	db	50
    90   0017A0  33                 	db	51
    91   0017A1  2D                 	db	45
    92   0017A2  23                 	db	35
    93   0017A3  30                 	db	48
    94   0017A4  3D                 	db	61
    95   0017A5  2B                 	db	43
    96                           
    97                           ;initializer for _port_registers
    98   0017A6  80                 	db	128
    99   0017A7  0F                 	db	15
   100   0017A8  81                 	db	129
   101   0017A9  0F                 	db	15
   102   0017AA  82                 	db	130
   103   0017AB  0F                 	db	15
   104   0017AC  83                 	db	131
   105   0017AD  0F                 	db	15
   106   0017AE  84                 	db	132
   107   0017AF  0F                 	db	15
   108                           
   109                           ;initializer for _lat_registers
   110   0017B0  89                 	db	137
   111   0017B1  0F                 	db	15
   112   0017B2  8A                 	db	138
   113   0017B3  0F                 	db	15
   114   0017B4  8B                 	db	139
   115   0017B5  0F                 	db	15
   116   0017B6  8C                 	db	140
   117   0017B7  0F                 	db	15
   118   0017B8  8D                 	db	141
   119   0017B9  0F                 	db	15
   120                           
   121                           ;initializer for _tris_registers
   122   0017BA  92                 	db	146
   123   0017BB  0F                 	db	15
   124   0017BC  93                 	db	147
   125   0017BD  0F                 	db	15
   126   0017BE  94                 	db	148
   127   0017BF  0F                 	db	15
   128   0017C0  95                 	db	149
   129   0017C1  0F                 	db	15
   130   0017C2  96                 	db	150
   131   0017C3  0F                 	db	15
   132                           
   133                           ;initializer for _lcd1
   134   0017C4  32                 	db	50
   135   0017C5  3A                 	db	58
   136   0017C6  03                 	db	3
   137   0017C7  0B                 	db	11
   138   0017C8  13                 	db	19
   139   0017C9  1B                 	db	27
   140   0017CA  23                 	db	35
   141   0017CB  2B                 	db	43
   142   0017CC  33                 	db	51
   143   0017CD  3B                 	db	59
   144                           
   145                           ;initializer for _keypad1
   146   0017CE  02                 	db	2
   147   0017CF  0A                 	db	10
   148   0017D0  12                 	db	18
   149   0017D1  1A                 	db	26
   150   0017D2  62                 	db	98
   151   0017D3  6A                 	db	106
   152   0017D4  72                 	db	114
   153   0017D5  7A                 	db	122
   154                           
   155                           ;initializer for _lcd2
   156   0017D6  02                 	db	2
   157   0017D7  0A                 	db	10
   158   0017D8  12                 	db	18
   159   0017D9  1A                 	db	26
   160   0017DA  22                 	db	34
   161   0017DB  2A                 	db	42
   162                           
   163                           ;initializer for _led1
   164   0017DC  03                 	db	3
   165                           
   166                           	psect	nvCOMRAM
   167   000068                     __pnvCOMRAM:
   168                           	callstack 0
   169   000068                     _ret:
   170                           	callstack 0
   171   000068                     	ds	1
   172   000000                     _PORTE	set	3972
   173   000000                     _PORTD	set	3971
   174   000000                     _PORTC	set	3970
   175   000000                     _PORTB	set	3969
   176   000000                     _PORTA	set	3968
   177   000000                     _LATA	set	3977
   178   000000                     _TRISA	set	3986
   179   000000                     _TRISE	set	3990
   180   000000                     _TRISD	set	3989
   181   000000                     _TRISC	set	3988
   182   000000                     _TRISB	set	3987
   183   000000                     _LATE	set	3981
   184   000000                     _LATD	set	3980
   185   000000                     _LATC	set	3979
   186   000000                     _LATB	set	3978
   187                           
   188                           	psect	smallconst
   189   001000                     __psmallconst:
   190                           	callstack 0
   191   001000  00                 	db	0
   192   001001                     STR_2:
   193   001001  54                 	db	84	;'T'
   194   001002  45                 	db	69	;'E'
   195   001003  4B                 	db	75	;'K'
   196   001004  4F                 	db	79	;'O'
   197   001005  4F                 	db	79	;'O'
   198   001006  4F                 	db	79	;'O'
   199   001007  4F                 	db	79	;'O'
   200   001008  00                 	db	0
   201   001009                     STR_1:
   202   001009  54                 	db	84	;'T'
   203   00100A  65                 	db	101	;'e'
   204   00100B  6B                 	db	107	;'k'
   205   00100C  6F                 	db	111	;'o'
   206   00100D  00                 	db	0
   207   00100E  00                 	db	0	; dummy byte at the end
   208   000000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212   001898                     __pcinit:
   213                           	callstack 0
   214   001898                     start_initialization:
   215                           	callstack 0
   216   001898                     __initialization:
   217                           	callstack 0
   218                           
   219                           ; Initialize objects allocated to COMRAM (71 bytes)
   220                           ; load TBLPTR registers with __pidataCOMRAM
   221   001898  0E96               	movlw	low __pidataCOMRAM
   222   00189A  6EF6               	movwf	tblptrl,c
   223   00189C  0E17               	movlw	high __pidataCOMRAM
   224   00189E  6EF7               	movwf	tblptrh,c
   225   0018A0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   226   0018A2  6EF8               	movwf	tblptru,c
   227   0018A4  EE00  F001         	lfsr	0,__pdataCOMRAM
   228   0018A8  EE10 F047          	lfsr	1,71
   229   0018AC                     copy_data0:
   230   0018AC  0009               	tblrd		*+
   231   0018AE  CFF5 FFEE          	movff	tablat,postinc0
   232   0018B2  50E5               	movf	postdec1,w,c
   233   0018B4  50E1               	movf	fsr1l,w,c
   234   0018B6  E1FA               	bnz	copy_data0
   235                           
   236                           ; Clear objects allocated to COMRAM (8 bytes)
   237   0018B8  EE00  F060         	lfsr	0,__pbssCOMRAM
   238   0018BC  0E08               	movlw	8
   239   0018BE                     clear_0:
   240   0018BE  6AEE               	clrf	postinc0,c
   241   0018C0  06E8               	decf	wreg,f,c
   242   0018C2  E1FD               	bnz	clear_0
   243   0018C4                     end_of_initialization:
   244                           	callstack 0
   245   0018C4                     __end_of__initialization:
   246                           	callstack 0
   247   0018C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   248   0018C6  6EF8               	movwf	tblptru,c
   249   0018C8  0100               	movlb	0
   250   0018CA  EF9D  F00C         	goto	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMRAM
   253   000060                     __pbssCOMRAM:
   254                           	callstack 0
   255   000060                     _value:
   256                           	callstack 0
   257   000060                     	ds	1
   258   000061                     relay_turn_off@F2898:
   259                           	callstack 0
   260   000061                     	ds	1
   261   000062                     relay_turn_on@F2893:
   262                           	callstack 0
   263   000062                     	ds	1
   264   000063                     relay_initialization@F2888:
   265                           	callstack 0
   266   000063                     	ds	1
   267   000064                     led_turn_toggle@F2910:
   268                           	callstack 0
   269   000064                     	ds	1
   270   000065                     led_turn_off@F2905:
   271                           	callstack 0
   272   000065                     	ds	1
   273   000066                     led_turn_on@F2900:
   274                           	callstack 0
   275   000066                     	ds	1
   276   000067                     led_initialize@F2895:
   277                           	callstack 0
   278   000067                     	ds	1
   279                           
   280                           	psect	dataCOMRAM
   281   000001                     __pdataCOMRAM:
   282                           	callstack 0
   283   000001                     _keypad_values:
   284                           	callstack 0
   285   000001                     	ds	16
   286   000011                     _port_registers:
   287                           	callstack 0
   288   000011                     	ds	10
   289   00001B                     _lat_registers:
   290                           	callstack 0
   291   00001B                     	ds	10
   292   000025                     _tris_registers:
   293                           	callstack 0
   294   000025                     	ds	10
   295   00002F                     _lcd1:
   296                           	callstack 0
   297   00002F                     	ds	10
   298   000039                     _keypad1:
   299                           	callstack 0
   300   000039                     	ds	8
   301   000041                     _lcd2:
   302                           	callstack 0
   303   000041                     	ds	6
   304   000047                     _led1:
   305                           	callstack 0
   306   000047                     	ds	1
   307                           
   308                           	psect	cstackCOMRAM
   309   000048                     __pcstackCOMRAM:
   310                           	callstack 0
   311   000048                     gpio_pin_direction_intialize@_pin_config:
   312                           	callstack 0
   313   000048                     gpio_pin_write_logic@_pin_config:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x0
   317   000048                     	ds	1
   318   000049                     ??_gpio_pin_direction_intialize:
   319   000049                     gpio_pin_write_logic@logic:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x1
   323   000049                     	ds	1
   324   00004A                     ??_gpio_pin_write_logic:
   325                           
   326                           ; 1 bytes @ 0x2
   327   00004A                     	ds	4
   328   00004E                     gpio_pin_direction_intialize@ret:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x6
   332   00004E                     	ds	1
   333   00004F                     gpio_pin_write_logic@ret:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x7
   337   00004F                     	ds	1
   338   000050                     gpio_pin_initialize@_pin_config:
   339                           	callstack 0
   340   000050                     lcd_send_8bits@lcd:
   341                           	callstack 0
   342   000050                     lcd_send_4bits@lcd:
   343                           	callstack 0
   344   000050                     enable_signal_8bits@lcd:
   345                           	callstack 0
   346   000050                     enable_signal_4bits@lcd:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x8
   350   000050                     	ds	1
   351   000051                     gpio_pin_initialize@ret:
   352                           	callstack 0
   353   000051                     lcd_send_8bits@command:
   354                           	callstack 0
   355   000051                     lcd_send_4bits@command:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x9
   359   000051                     	ds	1
   360   000052                     ??_lcd_send_8bits:
   361   000052                     ??_lcd_send_4bits:
   362   000052                     keypad_initialize@_keypad_obj:
   363                           	callstack 0
   364   000052                     led_initialize@led:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0xA
   368   000052                     	ds	1
   369   000053                     ??_led_initialize:
   370   000053                     keypad_initialize@coloumns_conter:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0xB
   374   000053                     	ds	1
   375   000054                     keypad_initialize@row_counter:
   376                           	callstack 0
   377   000054                     led_initialize@pin_obj:
   378                           	callstack 0
   379   000054                     lcd_send_8bits@counter:
   380                           	callstack 0
   381   000054                     lcd_send_4bits@ret:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0xC
   385   000054                     	ds	1
   386   000055                     lcd_8bit_send_command@lcd:
   387                           	callstack 0
   388   000055                     lcd_8bit_send_char@lcd:
   389                           	callstack 0
   390   000055                     lcd_send_4bits@counter:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0xD
   394   000055                     	ds	1
   395   000056                     lcd_8bit_send_command@command:
   396                           	callstack 0
   397   000056                     lcd_8bit_send_char@_char:
   398                           	callstack 0
   399   000056                     lcd_4bit_send_command@lcd:
   400                           	callstack 0
   401   000056                     lcd_4bit_send_char@lcd:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xE
   405   000056                     	ds	1
   406   000057                     lcd_8bit_send_command@counter:
   407                           	callstack 0
   408   000057                     lcd_8bit_send_char@counter:
   409                           	callstack 0
   410   000057                     lcd_4bit_send_command@command:
   411                           	callstack 0
   412   000057                     lcd_4bit_send_char@_char:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xF
   416   000057                     	ds	1
   417   000058                     lcd_8bit_initialize@lcd:
   418                           	callstack 0
   419   000058                     lcd_8bit_send_char@ret:
   420                           	callstack 0
   421   000058                     lcd_4bit_send_command@ret:
   422                           	callstack 0
   423   000058                     lcd_4bit_send_char@ret:
   424                           	callstack 0
   425   000058                     lcd_8bits_set_cursor@lcd:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x10
   429   000058                     	ds	1
   430   000059                     ??_lcd_8bit_initialize:
   431   000059                     lcd_8bit_send_string@lcd:
   432                           	callstack 0
   433   000059                     lcd_4bit_initialize@lcd:
   434                           	callstack 0
   435   000059                     lcd_4bit_send_string@lcd:
   436                           	callstack 0
   437   000059                     lcd_8bits_set_cursor@Rows:
   438                           	callstack 0
   439   000059                     lcd_4bits_set_cursor@lcd:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x11
   443   000059                     	ds	1
   444   00005A                     ??_lcd_4bit_initialize:
   445   00005A                     lcd_8bit_initialize@ret:
   446                           	callstack 0
   447   00005A                     lcd_8bit_send_string@str:
   448                           	callstack 0
   449   00005A                     lcd_4bit_send_string@str:
   450                           	callstack 0
   451   00005A                     lcd_8bits_set_cursor@coloumns:
   452                           	callstack 0
   453   00005A                     lcd_4bits_set_cursor@Rows:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x12
   457   00005A                     	ds	1
   458   00005B                     lcd_8bit_initialize@counter:
   459                           	callstack 0
   460   00005B                     lcd_8bit_send_string@ret:
   461                           	callstack 0
   462   00005B                     lcd_4bit_initialize@ret:
   463                           	callstack 0
   464   00005B                     lcd_4bit_send_string@ret:
   465                           	callstack 0
   466   00005B                     lcd_4bits_set_cursor@coloumns:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x13
   470   00005B                     	ds	1
   471   00005C                     lcd_8bit_send_string_pos@lcd:
   472                           	callstack 0
   473   00005C                     lcd_4bit_initialize@counter:
   474                           	callstack 0
   475   00005C                     lcd_4bit_send_string_pos@lcd:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x14
   479   00005C                     	ds	1
   480   00005D                     lcd_8bit_send_string_pos@Row:
   481                           	callstack 0
   482   00005D                     lcd_4bit_send_string_pos@Row:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x15
   486   00005D                     	ds	1
   487   00005E                     lcd_8bit_send_string_pos@coloumns:
   488                           	callstack 0
   489   00005E                     lcd_4bit_send_string_pos@coloumn:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x16
   493   00005E                     	ds	1
   494   00005F                     lcd_8bit_send_string_pos@str:
   495                           	callstack 0
   496   00005F                     lcd_4bit_send_string_pos@str:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x17
   500   00005F                     	ds	1
   501   000060                     
   502                           ; 1 bytes @ 0x18
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 13 in file "application.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  2  304[None  ] int 
   515 ;; Registers used:
   516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels required when called: 6
   528 ;; This function calls:
   529 ;;		_application_initialize
   530 ;;		_lcd_4bit_send_string_pos
   531 ;;		_lcd_8bit_send_string_pos
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538   00193A                     __ptext0:
   539                           	callstack 0
   540   00193A                     _main:
   541                           	callstack 25
   542   00193A                     
   543                           ;application.c: 14:     application_initialize();
   544   00193A  ECFA  F00C         	call	_application_initialize	;wreg free
   545   00193E                     
   546                           ;application.c: 15:     lcd_8bit_send_string_pos(&lcd1,3,5,"Teko");
   547   00193E  0E2F               	movlw	low _lcd1
   548   001940  6E5C               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   549   001942  0E03               	movlw	3
   550   001944  6E5D               	movwf	lcd_8bit_send_string_pos@Row^0,c
   551   001946  0E05               	movlw	5
   552   001948  6E5E               	movwf	lcd_8bit_send_string_pos@coloumns^0,c
   553   00194A  0E09               	movlw	low STR_1
   554   00194C  6E5F               	movwf	lcd_8bit_send_string_pos@str^0,c
   555   00194E  ECB7  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   556   001952                     
   557                           ;application.c: 16:     lcd_4bit_send_string_pos(&lcd2,2,15,"TEKOOOO");
   558   001952  0E41               	movlw	low _lcd2
   559   001954  6E5C               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   560   001956  0E02               	movlw	2
   561   001958  6E5D               	movwf	lcd_4bit_send_string_pos@Row^0,c
   562   00195A  0E0F               	movlw	15
   563   00195C  6E5E               	movwf	lcd_4bit_send_string_pos@coloumn^0,c
   564   00195E  0E01               	movlw	low STR_2
   565   001960  6E5F               	movwf	lcd_4bit_send_string_pos@str^0,c
   566   001962  ECD0  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
   567   001966                     l305:
   568   001966  EFB3  F00C         	goto	l305
   569   00196A  EF00  F000         	goto	start
   570   00196E                     __end_of_main:
   571                           	callstack 0
   572                           
   573 ;; *************** function _lcd_8bit_send_string_pos *****************
   574 ;; Defined at:
   575 ;;		line 94 in file "ECU_Layer/LCD/ecu_lcd.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  lcd             1   20[COMRAM] PTR const struct .
   578 ;;		 -> lcd1(10), 
   579 ;;  Row             1   21[COMRAM] unsigned char 
   580 ;;  coloumns        1   22[COMRAM] unsigned char 
   581 ;;  str             1   23[COMRAM] PTR unsigned char 
   582 ;;		 -> STR_1(5), 
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  ret             1    0        unsigned char 
   585 ;;  value           1    0        unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      unsigned char 
   588 ;; Registers used:
   589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;Total ram usage:        4 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; Hardware stack levels required when called: 4
   602 ;; This function calls:
   603 ;;		_lcd_8bit_send_string
   604 ;;		_lcd_8bits_set_cursor
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text1
   611   00196E                     __ptext1:
   612                           	callstack 0
   613   00196E                     _lcd_8bit_send_string_pos:
   614                           	callstack 26
   615   00196E                     
   616                           ;ECU_Layer/LCD/ecu_lcd.c: 97:     if(((void*)0) == lcd){
   617   00196E  505C               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   618   001970  A4D8               	btfss	status,2,c
   619   001972  EFBD  F00C         	goto	u1191
   620   001976  EFBF  F00C         	goto	u1190
   621   00197A                     u1191:
   622   00197A  EFC1  F00C         	goto	l2199
   623   00197E                     u1190:
   624   00197E                     
   625                           ;ECU_Layer/LCD/ecu_lcd.c: 99:     }
   626   00197E  EFCF  F00C         	goto	l368
   627   001982                     l2199:
   628   001982  C05C  F058         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bits_set_cursor@lcd
   629   001986  C05D  F059         	movff	lcd_8bit_send_string_pos@Row,lcd_8bits_set_cursor@Rows
   630   00198A  C05E  F05A         	movff	lcd_8bit_send_string_pos@coloumns,lcd_8bits_set_cursor@coloumns
   631   00198E  ECE1  F009         	call	_lcd_8bits_set_cursor	;wreg free
   632   001992  C05C  F059         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
   633   001996  C05F  F05A         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
   634   00199A  EC4C  F00B         	call	_lcd_8bit_send_string	;wreg free
   635   00199E                     l368:
   636   00199E  0012               	return		;funcret
   637   0019A0                     __end_of_lcd_8bit_send_string_pos:
   638                           	callstack 0
   639                           
   640 ;; *************** function _lcd_8bits_set_cursor *****************
   641 ;; Defined at:
   642 ;;		line 270 in file "ECU_Layer/LCD/ecu_lcd.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  lcd             1   16[COMRAM] PTR const struct .
   645 ;;		 -> lcd1(10), 
   646 ;;  Rows            1   17[COMRAM] unsigned char 
   647 ;;  coloumns        1   18[COMRAM] unsigned char 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  ret             1    0        unsigned char 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      unsigned char 
   652 ;; Registers used:
   653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   659 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; Hardware stack levels required when called: 3
   666 ;; This function calls:
   667 ;;		_lcd_8bit_send_command
   668 ;; This function is called by:
   669 ;;		_lcd_8bit_send_string_pos
   670 ;;		_lcd_8bit_send_char_pos
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text2
   675   0013C2                     __ptext2:
   676                           	callstack 0
   677   0013C2                     _lcd_8bits_set_cursor:
   678                           	callstack 26
   679   0013C2                     
   680                           ;ECU_Layer/LCD/ecu_lcd.c: 272:     coloumns--;
   681   0013C2  065A               	decf	lcd_8bits_set_cursor@coloumns^0,f,c
   682                           
   683                           ;ECU_Layer/LCD/ecu_lcd.c: 274:         switch(Rows){
   684   0013C4  EF08  F00A         	goto	l2135
   685   0013C8                     l2125:
   686   0013C8  C058  F055         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   687   0013CC  505A               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
   688   0013CE  0F80               	addlw	128
   689   0013D0  6E56               	movwf	lcd_8bit_send_command@command^0,c
   690   0013D2  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
   691   0013D6  EF1B  F00A         	goto	l2137
   692   0013DA                     l2127:
   693   0013DA  C058  F055         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   694   0013DE  505A               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
   695   0013E0  0FC0               	addlw	192
   696   0013E2  6E56               	movwf	lcd_8bit_send_command@command^0,c
   697   0013E4  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
   698   0013E8  EF1B  F00A         	goto	l2137
   699   0013EC                     l2129:
   700   0013EC  C058  F055         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   701   0013F0  505A               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
   702   0013F2  0F94               	addlw	148
   703   0013F4  6E56               	movwf	lcd_8bit_send_command@command^0,c
   704   0013F6  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
   705   0013FA  EF1B  F00A         	goto	l2137
   706   0013FE                     l2131:
   707   0013FE  C058  F055         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   708   001402  505A               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
   709   001404  0FD4               	addlw	212
   710   001406  6E56               	movwf	lcd_8bit_send_command@command^0,c
   711   001408  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
   712   00140C  EF1B  F00A         	goto	l2137
   713   001410                     l2135:
   714   001410  5059               	movf	lcd_8bits_set_cursor@Rows^0,w,c
   715                           
   716                           ; Switch size 1, requested type "simple"
   717                           ; Number of cases is 4, Range of values is 1 to 4
   718                           ; switch strategies available:
   719                           ; Name         Instructions Cycles
   720                           ; simple_byte           13     7 (average)
   721                           ;	Chosen strategy is simple_byte
   722   001412  0A01               	xorlw	1	; case 1
   723   001414  B4D8               	btfsc	status,2,c
   724   001416  EFE4  F009         	goto	l2125
   725   00141A  0A03               	xorlw	3	; case 2
   726   00141C  B4D8               	btfsc	status,2,c
   727   00141E  EFED  F009         	goto	l2127
   728   001422  0A01               	xorlw	1	; case 3
   729   001424  B4D8               	btfsc	status,2,c
   730   001426  EFF6  F009         	goto	l2129
   731   00142A  0A07               	xorlw	7	; case 4
   732   00142C  B4D8               	btfsc	status,2,c
   733   00142E  EFFF  F009         	goto	l2131
   734   001432  EF1B  F00A         	goto	l2137
   735   001436                     l2137:
   736                           
   737                           ;ECU_Layer/LCD/ecu_lcd.c: 283:     return ret;
   738   001436  0E01               	movlw	1
   739   001438  0012               	return		;funcret
   740   00143A                     __end_of_lcd_8bits_set_cursor:
   741                           	callstack 0
   742                           
   743 ;; *************** function _lcd_8bit_send_string *****************
   744 ;; Defined at:
   745 ;;		line 82 in file "ECU_Layer/LCD/ecu_lcd.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  lcd             1   17[COMRAM] PTR const struct .
   748 ;;		 -> lcd1(10), 
   749 ;;  str             1   18[COMRAM] PTR unsigned char 
   750 ;;		 -> STR_1(5), 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  ret             1   19[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      unsigned char 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        3 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 3
   769 ;; This function calls:
   770 ;;		_lcd_8bit_send_char
   771 ;; This function is called by:
   772 ;;		_lcd_8bit_send_string_pos
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text3
   777   001698                     __ptext3:
   778                           	callstack 0
   779   001698                     _lcd_8bit_send_string:
   780                           	callstack 26
   781   001698                     
   782                           ;ECU_Layer/LCD/ecu_lcd.c: 83:     std_ReturnType ret = (std_ReturnType)0x01;
   783   001698  0E01               	movlw	1
   784   00169A  6E5B               	movwf	lcd_8bit_send_string@ret^0,c
   785                           
   786                           ;ECU_Layer/LCD/ecu_lcd.c: 84:     if(((void*)0) == lcd){
   787   00169C  5059               	movf	lcd_8bit_send_string@lcd^0,w,c
   788   00169E  A4D8               	btfss	status,2,c
   789   0016A0  EF54  F00B         	goto	u1151
   790   0016A4  EF56  F00B         	goto	u1150
   791   0016A8                     u1151:
   792   0016A8  EF67  F00B         	goto	l2149
   793   0016AC                     u1150:
   794   0016AC                     
   795                           ;ECU_Layer/LCD/ecu_lcd.c: 85:         ret = (std_ReturnType)0x00;
   796   0016AC  0E00               	movlw	0
   797   0016AE  6E5B               	movwf	lcd_8bit_send_string@ret^0,c
   798                           
   799                           ;ECU_Layer/LCD/ecu_lcd.c: 86:     }
   800   0016B0  EF75  F00B         	goto	l2151
   801   0016B4                     l2145:
   802                           
   803                           ;ECU_Layer/LCD/ecu_lcd.c: 89:             ret = lcd_8bit_send_char(lcd,*str++);
   804   0016B4  C059  F055         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char@lcd
   805   0016B8  C05A  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   806   0016BC                     	if	1	;There is more than 1 active tblptr byte
   807   0016BC  0E10               	movlw	high __smallconst
   808   0016BE  6EF7               	movwf	tblptrh,c
   809   0016C0                     	endif
   810   0016C0                     	if	0	;tblptru may be non-zero
   811   0016C0                     	endif
   812   0016C0                     	if	0	;tblptru may be non-zero
   813   0016C0                     	endif
   814   0016C0  0008               	tblrd		*
   815   0016C2  CFF5 F056          	movff	tablat,lcd_8bit_send_char@_char
   816   0016C6  ECEF  F00B         	call	_lcd_8bit_send_char	;wreg free
   817   0016CA  6E5B               	movwf	lcd_8bit_send_string@ret^0,c
   818   0016CC  2A5A               	incf	lcd_8bit_send_string@str^0,f,c
   819   0016CE                     l2149:
   820                           
   821                           ;ECU_Layer/LCD/ecu_lcd.c: 88:         while(*str){
   822   0016CE  C05A  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   823   0016D2                     	if	1	;There is more than 1 active tblptr byte
   824   0016D2  0E10               	movlw	high __smallconst
   825   0016D4  6EF7               	movwf	tblptrh,c
   826   0016D6                     	endif
   827   0016D6                     	if	0	;tblptru may be non-zero
   828   0016D6                     	endif
   829   0016D6                     	if	0	;tblptru may be non-zero
   830   0016D6                     	endif
   831   0016D6  0008               	tblrd		*
   832   0016D8  50F5               	movf	tablat,w,c
   833   0016DA  0900               	iorlw	0
   834   0016DC  A4D8               	btfss	status,2,c
   835   0016DE  EF73  F00B         	goto	u1161
   836   0016E2  EF75  F00B         	goto	u1160
   837   0016E6                     u1161:
   838   0016E6  EF5A  F00B         	goto	l2145
   839   0016EA                     u1160:
   840   0016EA                     l2151:
   841                           
   842                           ;ECU_Layer/LCD/ecu_lcd.c: 92:     return ret;
   843   0016EA  505B               	movf	lcd_8bit_send_string@ret^0,w,c
   844   0016EC  0012               	return		;funcret
   845   0016EE                     __end_of_lcd_8bit_send_string:
   846                           	callstack 0
   847                           
   848 ;; *************** function _lcd_8bit_send_char *****************
   849 ;; Defined at:
   850 ;;		line 57 in file "ECU_Layer/LCD/ecu_lcd.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  lcd             1   13[COMRAM] PTR const struct .
   853 ;;		 -> lcd1(10), 
   854 ;;  _char           1   14[COMRAM] unsigned char 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  ret             1   16[COMRAM] unsigned char 
   857 ;;  counter         1   15[COMRAM] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      unsigned char 
   860 ;; Registers used:
   861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;Total ram usage:        4 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; Hardware stack levels required when called: 2
   874 ;; This function calls:
   875 ;;		_enable_signal_8bits
   876 ;;		_gpio_pin_write_logic
   877 ;;		_lcd_send_8bits
   878 ;; This function is called by:
   879 ;;		_lcd_8bit_send_string
   880 ;;		_lcd_8bit_send_char_pos
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text4
   885   0017DE                     __ptext4:
   886                           	callstack 0
   887   0017DE                     _lcd_8bit_send_char:
   888                           	callstack 26
   889   0017DE                     
   890                           ;ECU_Layer/LCD/ecu_lcd.c: 59:     uint8 counter = 0;
   891   0017DE  0E00               	movlw	0
   892   0017E0  6E57               	movwf	lcd_8bit_send_char@counter^0,c
   893                           
   894                           ;ECU_Layer/LCD/ecu_lcd.c: 60:     if(((void*)0) == lcd){
   895   0017E2  5055               	movf	lcd_8bit_send_char@lcd^0,w,c
   896   0017E4  A4D8               	btfss	status,2,c
   897   0017E6  EFF7  F00B         	goto	u1131
   898   0017EA  EFF9  F00B         	goto	u1130
   899   0017EE                     u1131:
   900   0017EE  EFFD  F00B         	goto	l2103
   901   0017F2                     u1130:
   902   0017F2                     
   903                           ;ECU_Layer/LCD/ecu_lcd.c: 61:         ret = (std_ReturnType)0x00;
   904   0017F2  0E00               	movlw	0
   905   0017F4  6E58               	movwf	lcd_8bit_send_char@ret^0,c
   906                           
   907                           ;ECU_Layer/LCD/ecu_lcd.c: 62:     }
   908   0017F6  EF0E  F00C         	goto	l2105
   909   0017FA                     l2103:
   910                           
   911                           ;ECU_Layer/LCD/ecu_lcd.c: 64:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
   912   0017FA  C055  F048         	movff	lcd_8bit_send_char@lcd,gpio_pin_write_logic@_pin_config
   913   0017FE  0E01               	movlw	1
   914   001800  6E49               	movwf	gpio_pin_write_logic@logic^0,c
   915   001802  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
   916   001806  6E58               	movwf	lcd_8bit_send_char@ret^0,c
   917                           
   918                           ;ECU_Layer/LCD/ecu_lcd.c: 65:         lcd_send_8bits(lcd,_char);
   919   001808  C055  F050         	movff	lcd_8bit_send_char@lcd,lcd_send_8bits@lcd
   920   00180C  C056  F051         	movff	lcd_8bit_send_char@_char,lcd_send_8bits@command
   921   001810  ECF3  F00A         	call	_lcd_send_8bits	;wreg free
   922                           
   923                           ;ECU_Layer/LCD/ecu_lcd.c: 66:         enable_signal_8bits(lcd);
   924   001814  C055  F050         	movff	lcd_8bit_send_char@lcd,enable_signal_8bits@lcd
   925   001818  EC67  F00C         	call	_enable_signal_8bits	;wreg free
   926   00181C                     l2105:
   927                           
   928                           ;ECU_Layer/LCD/ecu_lcd.c: 68:     return ret;
   929   00181C  5058               	movf	lcd_8bit_send_char@ret^0,w,c
   930   00181E  0012               	return		;funcret
   931   001820                     __end_of_lcd_8bit_send_char:
   932                           	callstack 0
   933                           
   934 ;; *************** function _lcd_4bit_send_string_pos *****************
   935 ;; Defined at:
   936 ;;		line 198 in file "ECU_Layer/LCD/ecu_lcd.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  lcd             1   20[COMRAM] PTR const struct .
   939 ;;		 -> lcd2(6), 
   940 ;;  Row             1   21[COMRAM] unsigned char 
   941 ;;  coloumn         1   22[COMRAM] unsigned char 
   942 ;;  str             1   23[COMRAM] PTR unsigned char 
   943 ;;		 -> STR_2(8), 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  ret             1    0        unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;Total ram usage:        4 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 4
   962 ;; This function calls:
   963 ;;		_lcd_4bit_send_string
   964 ;;		_lcd_4bits_set_cursor
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text5
   971   0019A0                     __ptext5:
   972                           	callstack 0
   973   0019A0                     _lcd_4bit_send_string_pos:
   974                           	callstack 26
   975   0019A0                     
   976                           ;ECU_Layer/LCD/ecu_lcd.c: 200:     if(((void*)0) == lcd){
   977   0019A0  505C               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
   978   0019A2  A4D8               	btfss	status,2,c
   979   0019A4  EFD6  F00C         	goto	u1201
   980   0019A8  EFD8  F00C         	goto	u1200
   981   0019AC                     u1201:
   982   0019AC  EFDA  F00C         	goto	l2209
   983   0019B0                     u1200:
   984   0019B0                     
   985                           ;ECU_Layer/LCD/ecu_lcd.c: 202:     }
   986   0019B0  EFE8  F00C         	goto	l403
   987   0019B4                     l2209:
   988   0019B4  C05C  F059         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bits_set_cursor@lcd
   989   0019B8  C05D  F05A         	movff	lcd_4bit_send_string_pos@Row,lcd_4bits_set_cursor@Rows
   990   0019BC  C05E  F05B         	movff	lcd_4bit_send_string_pos@coloumn,lcd_4bits_set_cursor@coloumns
   991   0019C0  EC1D  F00A         	call	_lcd_4bits_set_cursor	;wreg free
   992   0019C4  C05C  F059         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
   993   0019C8  C05F  F05A         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
   994   0019CC  EC77  F00B         	call	_lcd_4bit_send_string	;wreg free
   995   0019D0                     l403:
   996   0019D0  0012               	return		;funcret
   997   0019D2                     __end_of_lcd_4bit_send_string_pos:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _lcd_4bits_set_cursor *****************
  1001 ;; Defined at:
  1002 ;;		line 285 in file "ECU_Layer/LCD/ecu_lcd.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  lcd             1   17[COMRAM] PTR const struct .
  1005 ;;		 -> lcd2(6), 
  1006 ;;  Rows            1   18[COMRAM] unsigned char 
  1007 ;;  coloumns        1   19[COMRAM] unsigned char 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  ret             1    0        unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      unsigned char 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;Total ram usage:        3 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 3
  1026 ;; This function calls:
  1027 ;;		_lcd_4bit_send_command
  1028 ;; This function is called by:
  1029 ;;		_lcd_4bit_send_string_pos
  1030 ;;		_lcd_4bit_send_char_pos
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text6
  1035   00143A                     __ptext6:
  1036                           	callstack 0
  1037   00143A                     _lcd_4bits_set_cursor:
  1038                           	callstack 26
  1039   00143A                     
  1040                           ;ECU_Layer/LCD/ecu_lcd.c: 287:     coloumns--;
  1041   00143A  065B               	decf	lcd_4bits_set_cursor@coloumns^0,f,c
  1042                           
  1043                           ;ECU_Layer/LCD/ecu_lcd.c: 289:         switch(Rows){
  1044   00143C  EF44  F00A         	goto	l2169
  1045   001440                     l2159:
  1046   001440  C059  F056         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1047   001444  505B               	movf	lcd_4bits_set_cursor@coloumns^0,w,c
  1048   001446  0F80               	addlw	128
  1049   001448  6E57               	movwf	lcd_4bit_send_command@command^0,c
  1050   00144A  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  1051   00144E  EF57  F00A         	goto	l2171
  1052   001452                     l2161:
  1053   001452  C059  F056         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1054   001456  505B               	movf	lcd_4bits_set_cursor@coloumns^0,w,c
  1055   001458  0FC0               	addlw	192
  1056   00145A  6E57               	movwf	lcd_4bit_send_command@command^0,c
  1057   00145C  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  1058   001460  EF57  F00A         	goto	l2171
  1059   001464                     l2163:
  1060   001464  C059  F056         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1061   001468  505B               	movf	lcd_4bits_set_cursor@coloumns^0,w,c
  1062   00146A  0F94               	addlw	148
  1063   00146C  6E57               	movwf	lcd_4bit_send_command@command^0,c
  1064   00146E  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  1065   001472  EF57  F00A         	goto	l2171
  1066   001476                     l2165:
  1067   001476  C059  F056         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1068   00147A  505B               	movf	lcd_4bits_set_cursor@coloumns^0,w,c
  1069   00147C  0FD4               	addlw	212
  1070   00147E  6E57               	movwf	lcd_4bit_send_command@command^0,c
  1071   001480  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  1072   001484  EF57  F00A         	goto	l2171
  1073   001488                     l2169:
  1074   001488  505A               	movf	lcd_4bits_set_cursor@Rows^0,w,c
  1075                           
  1076                           ; Switch size 1, requested type "simple"
  1077                           ; Number of cases is 4, Range of values is 1 to 4
  1078                           ; switch strategies available:
  1079                           ; Name         Instructions Cycles
  1080                           ; simple_byte           13     7 (average)
  1081                           ;	Chosen strategy is simple_byte
  1082   00148A  0A01               	xorlw	1	; case 1
  1083   00148C  B4D8               	btfsc	status,2,c
  1084   00148E  EF20  F00A         	goto	l2159
  1085   001492  0A03               	xorlw	3	; case 2
  1086   001494  B4D8               	btfsc	status,2,c
  1087   001496  EF29  F00A         	goto	l2161
  1088   00149A  0A01               	xorlw	1	; case 3
  1089   00149C  B4D8               	btfsc	status,2,c
  1090   00149E  EF32  F00A         	goto	l2163
  1091   0014A2  0A07               	xorlw	7	; case 4
  1092   0014A4  B4D8               	btfsc	status,2,c
  1093   0014A6  EF3B  F00A         	goto	l2165
  1094   0014AA  EF57  F00A         	goto	l2171
  1095   0014AE                     l2171:
  1096                           
  1097                           ;ECU_Layer/LCD/ecu_lcd.c: 298:     return ret;
  1098   0014AE  0E01               	movlw	1
  1099   0014B0  0012               	return		;funcret
  1100   0014B2                     __end_of_lcd_4bits_set_cursor:
  1101                           	callstack 0
  1102                           
  1103 ;; *************** function _lcd_4bit_send_string *****************
  1104 ;; Defined at:
  1105 ;;		line 186 in file "ECU_Layer/LCD/ecu_lcd.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  lcd             1   17[COMRAM] PTR const struct .
  1108 ;;		 -> lcd2(6), 
  1109 ;;  str             1   18[COMRAM] PTR unsigned char 
  1110 ;;		 -> STR_2(8), 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  ret             1   19[COMRAM] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      unsigned char 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;Total ram usage:        3 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 3
  1129 ;; This function calls:
  1130 ;;		_lcd_4bit_send_char
  1131 ;; This function is called by:
  1132 ;;		_lcd_4bit_send_string_pos
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text7
  1137   0016EE                     __ptext7:
  1138                           	callstack 0
  1139   0016EE                     _lcd_4bit_send_string:
  1140                           	callstack 26
  1141   0016EE                     
  1142                           ;ECU_Layer/LCD/ecu_lcd.c: 187:     std_ReturnType ret = (std_ReturnType)0x01;
  1143   0016EE  0E01               	movlw	1
  1144   0016F0  6E5B               	movwf	lcd_4bit_send_string@ret^0,c
  1145                           
  1146                           ;ECU_Layer/LCD/ecu_lcd.c: 188:     if(((void*)0) == lcd){
  1147   0016F2  5059               	movf	lcd_4bit_send_string@lcd^0,w,c
  1148   0016F4  A4D8               	btfss	status,2,c
  1149   0016F6  EF7F  F00B         	goto	u1171
  1150   0016FA  EF81  F00B         	goto	u1170
  1151   0016FE                     u1171:
  1152   0016FE  EF92  F00B         	goto	l2183
  1153   001702                     u1170:
  1154   001702                     
  1155                           ;ECU_Layer/LCD/ecu_lcd.c: 189:         ret = (std_ReturnType)0x00;
  1156   001702  0E00               	movlw	0
  1157   001704  6E5B               	movwf	lcd_4bit_send_string@ret^0,c
  1158                           
  1159                           ;ECU_Layer/LCD/ecu_lcd.c: 190:     }
  1160   001706  EFA0  F00B         	goto	l2185
  1161   00170A                     l2179:
  1162                           
  1163                           ;ECU_Layer/LCD/ecu_lcd.c: 193:             ret = lcd_4bit_send_char(lcd,*str++);
  1164   00170A  C059  F056         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char@lcd
  1165   00170E  C05A  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1166   001712                     	if	1	;There is more than 1 active tblptr byte
  1167   001712  0E10               	movlw	high __smallconst
  1168   001714  6EF7               	movwf	tblptrh,c
  1169   001716                     	endif
  1170   001716                     	if	0	;tblptru may be non-zero
  1171   001716                     	endif
  1172   001716                     	if	0	;tblptru may be non-zero
  1173   001716                     	endif
  1174   001716  0008               	tblrd		*
  1175   001718  CFF5 F057          	movff	tablat,lcd_4bit_send_char@_char
  1176   00171C  EC20  F00B         	call	_lcd_4bit_send_char	;wreg free
  1177   001720  6E5B               	movwf	lcd_4bit_send_string@ret^0,c
  1178   001722  2A5A               	incf	lcd_4bit_send_string@str^0,f,c
  1179   001724                     l2183:
  1180                           
  1181                           ;ECU_Layer/LCD/ecu_lcd.c: 192:         while(*str){
  1182   001724  C05A  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1183   001728                     	if	1	;There is more than 1 active tblptr byte
  1184   001728  0E10               	movlw	high __smallconst
  1185   00172A  6EF7               	movwf	tblptrh,c
  1186   00172C                     	endif
  1187   00172C                     	if	0	;tblptru may be non-zero
  1188   00172C                     	endif
  1189   00172C                     	if	0	;tblptru may be non-zero
  1190   00172C                     	endif
  1191   00172C  0008               	tblrd		*
  1192   00172E  50F5               	movf	tablat,w,c
  1193   001730  0900               	iorlw	0
  1194   001732  A4D8               	btfss	status,2,c
  1195   001734  EF9E  F00B         	goto	u1181
  1196   001738  EFA0  F00B         	goto	u1180
  1197   00173C                     u1181:
  1198   00173C  EF85  F00B         	goto	l2179
  1199   001740                     u1180:
  1200   001740                     l2185:
  1201                           
  1202                           ;ECU_Layer/LCD/ecu_lcd.c: 196:     return ret;
  1203   001740  505B               	movf	lcd_4bit_send_string@ret^0,w,c
  1204   001742  0012               	return		;funcret
  1205   001744                     __end_of_lcd_4bit_send_string:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _lcd_4bit_send_char *****************
  1209 ;; Defined at:
  1210 ;;		line 159 in file "ECU_Layer/LCD/ecu_lcd.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  lcd             1   14[COMRAM] PTR const struct .
  1213 ;;		 -> lcd2(6), 
  1214 ;;  _char           1   15[COMRAM] unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  ret             1   16[COMRAM] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      unsigned char 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;Total ram usage:        3 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 2
  1233 ;; This function calls:
  1234 ;;		_enable_signal_4bits
  1235 ;;		_gpio_pin_write_logic
  1236 ;;		_lcd_send_4bits
  1237 ;; This function is called by:
  1238 ;;		_lcd_4bit_send_string
  1239 ;;		_lcd_4bit_send_char_pos
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text8
  1244   001640                     __ptext8:
  1245                           	callstack 0
  1246   001640                     _lcd_4bit_send_char:
  1247                           	callstack 26
  1248   001640                     
  1249                           ;ECU_Layer/LCD/ecu_lcd.c: 161:     if(((void*)0) == lcd){
  1250   001640  5056               	movf	lcd_4bit_send_char@lcd^0,w,c
  1251   001642  A4D8               	btfss	status,2,c
  1252   001644  EF26  F00B         	goto	u1141
  1253   001648  EF28  F00B         	goto	u1140
  1254   00164C                     u1141:
  1255   00164C  EF2C  F00B         	goto	l2113
  1256   001650                     u1140:
  1257   001650                     
  1258                           ;ECU_Layer/LCD/ecu_lcd.c: 162:         ret = (std_ReturnType)0x00;
  1259   001650  0E00               	movlw	0
  1260   001652  6E58               	movwf	lcd_4bit_send_char@ret^0,c
  1261                           
  1262                           ;ECU_Layer/LCD/ecu_lcd.c: 163:     }
  1263   001654  EF4A  F00B         	goto	l2115
  1264   001658                     l2113:
  1265                           
  1266                           ;ECU_Layer/LCD/ecu_lcd.c: 165:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_HIGH);
  1267   001658  C056  F048         	movff	lcd_4bit_send_char@lcd,gpio_pin_write_logic@_pin_config
  1268   00165C  0E01               	movlw	1
  1269   00165E  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  1270   001660  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  1271   001664  6E58               	movwf	lcd_4bit_send_char@ret^0,c
  1272                           
  1273                           ;ECU_Layer/LCD/ecu_lcd.c: 166:         ret = lcd_send_4bits(lcd,(_char >> 4));
  1274   001666  C056  F050         	movff	lcd_4bit_send_char@lcd,lcd_send_4bits@lcd
  1275   00166A  3857               	swapf	lcd_4bit_send_char@_char^0,w,c
  1276   00166C  0B0F               	andlw	15
  1277   00166E  6E51               	movwf	lcd_send_4bits@command^0,c
  1278   001670  ECC2  F00A         	call	_lcd_send_4bits	;wreg free
  1279   001674  6E58               	movwf	lcd_4bit_send_char@ret^0,c
  1280                           
  1281                           ;ECU_Layer/LCD/ecu_lcd.c: 167:         enable_signal_4bits(lcd);
  1282   001676  C056  F050         	movff	lcd_4bit_send_char@lcd,enable_signal_4bits@lcd
  1283   00167A  EC82  F00C         	call	_enable_signal_4bits	;wreg free
  1284                           
  1285                           ;ECU_Layer/LCD/ecu_lcd.c: 168:         ret = lcd_send_4bits(lcd,_char);
  1286   00167E  C056  F050         	movff	lcd_4bit_send_char@lcd,lcd_send_4bits@lcd
  1287   001682  C057  F051         	movff	lcd_4bit_send_char@_char,lcd_send_4bits@command
  1288   001686  ECC2  F00A         	call	_lcd_send_4bits	;wreg free
  1289   00168A  6E58               	movwf	lcd_4bit_send_char@ret^0,c
  1290                           
  1291                           ;ECU_Layer/LCD/ecu_lcd.c: 169:         enable_signal_4bits(lcd);
  1292   00168C  C056  F050         	movff	lcd_4bit_send_char@lcd,enable_signal_4bits@lcd
  1293   001690  EC82  F00C         	call	_enable_signal_4bits	;wreg free
  1294   001694                     l2115:
  1295                           
  1296                           ;ECU_Layer/LCD/ecu_lcd.c: 171:     return ret;
  1297   001694  5058               	movf	lcd_4bit_send_char@ret^0,w,c
  1298   001696  0012               	return		;funcret
  1299   001698                     __end_of_lcd_4bit_send_char:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _application_initialize *****************
  1303 ;; Defined at:
  1304 ;;		line 23 in file "application.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 5
  1325 ;; This function calls:
  1326 ;;		_Ecu_initialize
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text9
  1333   0019F4                     __ptext9:
  1334                           	callstack 0
  1335   0019F4                     _application_initialize:
  1336                           	callstack 25
  1337   0019F4                     
  1338                           ;application.c: 24:     ret = Ecu_initialize();
  1339   0019F4  ECE9  F00C         	call	_Ecu_initialize	;wreg free
  1340   0019F8  6E68               	movwf	_ret^0,c
  1341   0019FA  0012               	return		;funcret
  1342   0019FC                     __end_of_application_initialize:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _Ecu_initialize *****************
  1346 ;; Defined at:
  1347 ;;		line 40 in file "ECU_Layer/ECU_LAYER.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      unsigned char 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 4
  1368 ;; This function calls:
  1369 ;;		_keypad_initialize
  1370 ;;		_lcd_4bit_initialize
  1371 ;;		_lcd_8bit_initialize
  1372 ;;		_led_initialize
  1373 ;; This function is called by:
  1374 ;;		_application_initialize
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text10
  1379   0019D2                     __ptext10:
  1380                           	callstack 0
  1381   0019D2                     _Ecu_initialize:
  1382                           	callstack 25
  1383   0019D2                     
  1384                           ;ECU_Layer/ECU_LAYER.c: 41:     keypad_initialize(&keypad1);
  1385   0019D2  0E39               	movlw	low _keypad1
  1386   0019D4  6E52               	movwf	keypad_initialize@_keypad_obj^0,c
  1387   0019D6  EC8E  F00A         	call	_keypad_initialize	;wreg free
  1388                           
  1389                           ;ECU_Layer/ECU_LAYER.c: 42:     led_initialize(&led1);
  1390   0019DA  0E47               	movlw	low _led1
  1391   0019DC  6E52               	movwf	led_initialize@led^0,c
  1392   0019DE  EC59  F00A         	call	_led_initialize	;wreg free
  1393                           
  1394                           ;ECU_Layer/ECU_LAYER.c: 43:     lcd_8bit_initialize(&lcd1);
  1395   0019E2  0E2F               	movlw	low _lcd1
  1396   0019E4  6E58               	movwf	lcd_8bit_initialize@lcd^0,c
  1397   0019E6  EC78  F009         	call	_lcd_8bit_initialize	;wreg free
  1398                           
  1399                           ;ECU_Layer/ECU_LAYER.c: 44:     lcd_4bit_initialize(&lcd2);
  1400   0019EA  0E41               	movlw	low _lcd2
  1401   0019EC  6E59               	movwf	lcd_4bit_initialize@lcd^0,c
  1402   0019EE  EC09  F009         	call	_lcd_4bit_initialize	;wreg free
  1403   0019F2  0012               	return		;funcret
  1404   0019F4                     __end_of_Ecu_initialize:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function _led_initialize *****************
  1408 ;; Defined at:
  1409 ;;		line 13 in file "ECU_Layer/LED/ecu_led.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  led             1   10[COMRAM] PTR const struct .
  1412 ;;		 -> led1(1), 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  pin_obj         1   12[COMRAM] struct .
  1415 ;;  ret             1    0        unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      unsigned char 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;Total ram usage:        3 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 2
  1432 ;; This function calls:
  1433 ;;		_gpio_pin_initialize
  1434 ;; This function is called by:
  1435 ;;		_Ecu_initialize
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text11
  1440   0014B2                     __ptext11:
  1441                           	callstack 0
  1442   0014B2                     _led_initialize:
  1443                           	callstack 26
  1444   0014B2                     
  1445                           ;ECU_Layer/LED/ecu_led.c: 15:     if(led == ((void*)0)){
  1446   0014B2  5052               	movf	led_initialize@led^0,w,c
  1447   0014B4  A4D8               	btfss	status,2,c
  1448   0014B6  EF5F  F00A         	goto	u1071
  1449   0014BA  EF61  F00A         	goto	u1070
  1450   0014BE                     u1071:
  1451   0014BE  EF63  F00A         	goto	l80
  1452   0014C2                     u1070:
  1453   0014C2                     
  1454                           ;ECU_Layer/LED/ecu_led.c: 17:     }
  1455   0014C2  EF8D  F00A         	goto	l84
  1456   0014C6                     l80:
  1457                           
  1458                           ;ECU_Layer/LED/ecu_led.c: 19:         pin_config_t pin_obj = {.port = led->port_name, .p
      +                          in = led->pin_name,
  1459   0014C6  C067  F054         	movff	led_initialize@F2895,led_initialize@pin_obj
  1460   0014CA  5052               	movf	led_initialize@led^0,w,c
  1461   0014CC  6ED9               	movwf	fsr2l,c
  1462   0014CE  6ADA               	clrf	fsr2h,c
  1463   0014D0  50DF               	movf	223,w,c
  1464   0014D2  0B07               	andlw	7
  1465   0014D4  6E53               	movwf	??_led_initialize^0,c
  1466   0014D6  5054               	movf	led_initialize@pin_obj^0,w,c
  1467   0014D8  1853               	xorwf	??_led_initialize^0,w,c
  1468   0014DA  0BF8               	andlw	-8
  1469   0014DC  1853               	xorwf	??_led_initialize^0,w,c
  1470   0014DE  6E54               	movwf	led_initialize@pin_obj^0,c
  1471   0014E0  5052               	movf	led_initialize@led^0,w,c
  1472   0014E2  6ED9               	movwf	fsr2l,c
  1473   0014E4  6ADA               	clrf	fsr2h,c
  1474   0014E6  30DF               	rrcf	223,w,c
  1475   0014E8  32E8               	rrcf	wreg,f,c
  1476   0014EA  32E8               	rrcf	wreg,f,c
  1477   0014EC  0B07               	andlw	7
  1478   0014EE  6E53               	movwf	??_led_initialize^0,c
  1479   0014F0  4653               	rlncf	??_led_initialize^0,f,c
  1480   0014F2  4653               	rlncf	??_led_initialize^0,f,c
  1481   0014F4  4653               	rlncf	??_led_initialize^0,f,c
  1482   0014F6  5054               	movf	led_initialize@pin_obj^0,w,c
  1483   0014F8  1853               	xorwf	??_led_initialize^0,w,c
  1484   0014FA  0BC7               	andlw	-57
  1485   0014FC  1853               	xorwf	??_led_initialize^0,w,c
  1486   0014FE  6E54               	movwf	led_initialize@pin_obj^0,c
  1487   001500  9C54               	bcf	led_initialize@pin_obj^0,6,c
  1488   001502  5052               	movf	led_initialize@led^0,w,c
  1489   001504  6ED9               	movwf	fsr2l,c
  1490   001506  6ADA               	clrf	fsr2h,c
  1491   001508  ACDF               	btfss	indf2,6,c
  1492   00150A  D002               	bra	u1085
  1493   00150C  8E54               	bsf	led_initialize@pin_obj^0,7,c
  1494   00150E  D001               	bra	u1087
  1495   001510                     u1085:
  1496   001510  9E54               	bcf	led_initialize@pin_obj^0,7,c
  1497   001512                     u1087:
  1498   001512                     
  1499                           ;ECU_Layer/LED/ecu_led.c: 21:         gpio_pin_initialize(&pin_obj);
  1500   001512  0E54               	movlw	low led_initialize@pin_obj
  1501   001514  6E50               	movwf	gpio_pin_initialize@_pin_config^0,c
  1502   001516  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  1503   00151A                     l84:
  1504   00151A  0012               	return		;funcret
  1505   00151C                     __end_of_led_initialize:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _lcd_8bit_initialize *****************
  1509 ;; Defined at:
  1510 ;;		line 18 in file "ECU_Layer/LCD/ecu_lcd.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  lcd             1   16[COMRAM] PTR const struct .
  1513 ;;		 -> lcd1(10), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  counter         1   19[COMRAM] unsigned char 
  1516 ;;  ret             1   18[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      unsigned char 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:        4 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 3
  1533 ;; This function calls:
  1534 ;;		_gpio_pin_initialize
  1535 ;;		_lcd_8bit_send_command
  1536 ;; This function is called by:
  1537 ;;		_Ecu_initialize
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text12
  1542   0012F0                     __ptext12:
  1543                           	callstack 0
  1544   0012F0                     _lcd_8bit_initialize:
  1545                           	callstack 25
  1546   0012F0                     
  1547                           ;ECU_Layer/LCD/ecu_lcd.c: 20:     uint8 counter = 0;
  1548   0012F0  0E00               	movlw	0
  1549   0012F2  6E5B               	movwf	lcd_8bit_initialize@counter^0,c
  1550                           
  1551                           ;ECU_Layer/LCD/ecu_lcd.c: 21:     if(((void*)0) == lcd){
  1552   0012F4  5058               	movf	lcd_8bit_initialize@lcd^0,w,c
  1553   0012F6  A4D8               	btfss	status,2,c
  1554   0012F8  EF80  F009         	goto	u1091
  1555   0012FC  EF82  F009         	goto	u1090
  1556   001300                     u1091:
  1557   001300  EF84  F009         	goto	l2021
  1558   001304                     u1090:
  1559   001304                     
  1560                           ;ECU_Layer/LCD/ecu_lcd.c: 23:     }
  1561   001304  EFE0  F009         	goto	l340
  1562   001308                     l2021:
  1563                           
  1564                           ;ECU_Layer/LCD/ecu_lcd.c: 25:         ret = gpio_pin_initialize(&(lcd->rs));
  1565   001308  C058  F050         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1566   00130C  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  1567   001310  6E5A               	movwf	lcd_8bit_initialize@ret^0,c
  1568                           
  1569                           ;ECU_Layer/LCD/ecu_lcd.c: 26:         ret = gpio_pin_initialize(&(lcd->enable));
  1570   001312  2858               	incf	lcd_8bit_initialize@lcd^0,w,c
  1571   001314  6E50               	movwf	gpio_pin_initialize@_pin_config^0,c
  1572   001316  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  1573   00131A  6E5A               	movwf	lcd_8bit_initialize@ret^0,c
  1574   00131C                     
  1575                           ;ECU_Layer/LCD/ecu_lcd.c: 27:         for(counter = 0;counter < 8;++counter){
  1576   00131C  0E00               	movlw	0
  1577   00131E  6E5B               	movwf	lcd_8bit_initialize@counter^0,c
  1578   001320                     l2029:
  1579   001320  5058               	movf	lcd_8bit_initialize@lcd^0,w,c
  1580   001322  245B               	addwf	lcd_8bit_initialize@counter^0,w,c
  1581   001324  0F02               	addlw	2
  1582   001326  6E50               	movwf	gpio_pin_initialize@_pin_config^0,c
  1583   001328  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  1584   00132C                     
  1585                           ;ECU_Layer/LCD/ecu_lcd.c: 29:         }
  1586   00132C  2A5B               	incf	lcd_8bit_initialize@counter^0,f,c
  1587   00132E  0E07               	movlw	7
  1588   001330  645B               	cpfsgt	lcd_8bit_initialize@counter^0,c
  1589   001332  EF9D  F009         	goto	u1101
  1590   001336  EF9F  F009         	goto	u1100
  1591   00133A                     u1101:
  1592   00133A  EF90  F009         	goto	l2029
  1593   00133E                     u1100:
  1594   00133E                     
  1595                           ;ECU_Layer/LCD/ecu_lcd.c: 30:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  1596   00133E  0E34               	movlw	52
  1597   001340  6E59               	movwf	??_lcd_8bit_initialize^0,c
  1598   001342  0EF2               	movlw	242
  1599   001344                     u1477:
  1600   001344  2EE8               	decfsz	wreg,f,c
  1601   001346  D7FE               	bra	u1477
  1602   001348  2E59               	decfsz	??_lcd_8bit_initialize^0,f,c
  1603   00134A  D7FC               	bra	u1477
  1604   00134C                     
  1605                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         lcd_8bit_send_command(lcd,0x38);
  1606   00134C  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1607   001350  0E38               	movlw	56
  1608   001352  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1609   001354  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1610   001358                     
  1611                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1612   001358  0E0D               	movlw	13
  1613   00135A  6E59               	movwf	??_lcd_8bit_initialize^0,c
  1614   00135C  0EFC               	movlw	252
  1615   00135E                     u1487:
  1616   00135E  2EE8               	decfsz	wreg,f,c
  1617   001360  D7FE               	bra	u1487
  1618   001362  2E59               	decfsz	??_lcd_8bit_initialize^0,f,c
  1619   001364  D7FC               	bra	u1487
  1620                           
  1621                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         lcd_8bit_send_command(lcd,0x38);
  1622   001366  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1623   00136A  0E38               	movlw	56
  1624   00136C  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1625   00136E  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1626   001372                     
  1627                           ;ECU_Layer/LCD/ecu_lcd.c: 34:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  1628   001372  0E64               	movlw	100
  1629   001374                     u1497:
  1630   001374  2EE8               	decfsz	wreg,f,c
  1631   001376  D7FE               	bra	u1497
  1632   001378                     
  1633                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         lcd_8bit_send_command(lcd,0x38);
  1634   001378  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1635   00137C  0E38               	movlw	56
  1636   00137E  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1637   001380  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1638   001384                     
  1639                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         lcd_8bit_send_command(lcd,0x01);
  1640   001384  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1641   001388  0E01               	movlw	1
  1642   00138A  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1643   00138C  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1644   001390                     
  1645                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         lcd_8bit_send_command(lcd,0x02);
  1646   001390  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1647   001394  0E02               	movlw	2
  1648   001396  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1649   001398  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1650   00139C                     
  1651                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         lcd_8bit_send_command(lcd,0x06);
  1652   00139C  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1653   0013A0  0E06               	movlw	6
  1654   0013A2  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1655   0013A4  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1656   0013A8                     
  1657                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         lcd_8bit_send_command(lcd,0x0F);
  1658   0013A8  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1659   0013AC  0E0F               	movlw	15
  1660   0013AE  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1661   0013B0  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1662   0013B4                     
  1663                           ;ECU_Layer/LCD/ecu_lcd.c: 40:         lcd_8bit_send_command(lcd,0x38);
  1664   0013B4  C058  F055         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1665   0013B8  0E38               	movlw	56
  1666   0013BA  6E56               	movwf	lcd_8bit_send_command@command^0,c
  1667   0013BC  EC2F  F00C         	call	_lcd_8bit_send_command	;wreg free
  1668   0013C0                     l340:
  1669   0013C0  0012               	return		;funcret
  1670   0013C2                     __end_of_lcd_8bit_initialize:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _lcd_8bit_send_command *****************
  1674 ;; Defined at:
  1675 ;;		line 44 in file "ECU_Layer/LCD/ecu_lcd.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  lcd             1   13[COMRAM] PTR const struct .
  1678 ;;		 -> lcd1(10), 
  1679 ;;  command         1   14[COMRAM] unsigned char 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  ret             1    0        unsigned char 
  1682 ;;  counter         1   15[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        3 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 2
  1699 ;; This function calls:
  1700 ;;		_enable_signal_8bits
  1701 ;;		_gpio_pin_write_logic
  1702 ;;		_lcd_send_8bits
  1703 ;; This function is called by:
  1704 ;;		_lcd_8bit_initialize
  1705 ;;		_lcd_8bits_set_cursor
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text13
  1710   00185E                     __ptext13:
  1711                           	callstack 0
  1712   00185E                     _lcd_8bit_send_command:
  1713                           	callstack 26
  1714   00185E                     
  1715                           ;ECU_Layer/LCD/ecu_lcd.c: 46:     uint8 counter = 0;
  1716   00185E  0E00               	movlw	0
  1717   001860  6E57               	movwf	lcd_8bit_send_command@counter^0,c
  1718                           
  1719                           ;ECU_Layer/LCD/ecu_lcd.c: 47:     if(((void*)0) == lcd){
  1720   001862  5055               	movf	lcd_8bit_send_command@lcd^0,w,c
  1721   001864  A4D8               	btfss	status,2,c
  1722   001866  EF37  F00C         	goto	u1021
  1723   00186A  EF39  F00C         	goto	u1020
  1724   00186E                     u1021:
  1725   00186E  EF3B  F00C         	goto	l1963
  1726   001872                     u1020:
  1727   001872                     
  1728                           ;ECU_Layer/LCD/ecu_lcd.c: 49:     }
  1729   001872  EF4B  F00C         	goto	l345
  1730   001876                     l1963:
  1731   001876  C055  F048         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1732   00187A  0E00               	movlw	0
  1733   00187C  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  1734   00187E  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  1735                           
  1736                           ;ECU_Layer/LCD/ecu_lcd.c: 52:         lcd_send_8bits(lcd,command);
  1737   001882  C055  F050         	movff	lcd_8bit_send_command@lcd,lcd_send_8bits@lcd
  1738   001886  C056  F051         	movff	lcd_8bit_send_command@command,lcd_send_8bits@command
  1739   00188A  ECF3  F00A         	call	_lcd_send_8bits	;wreg free
  1740                           
  1741                           ;ECU_Layer/LCD/ecu_lcd.c: 53:         enable_signal_8bits(lcd);
  1742   00188E  C055  F050         	movff	lcd_8bit_send_command@lcd,enable_signal_8bits@lcd
  1743   001892  EC67  F00C         	call	_enable_signal_8bits	;wreg free
  1744   001896                     l345:
  1745   001896  0012               	return		;funcret
  1746   001898                     __end_of_lcd_8bit_send_command:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _lcd_send_8bits *****************
  1750 ;; Defined at:
  1751 ;;		line 219 in file "ECU_Layer/LCD/ecu_lcd.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  lcd             1    8[COMRAM] PTR const struct .
  1754 ;;		 -> lcd1(10), 
  1755 ;;  command         1    9[COMRAM] unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  counter         1   12[COMRAM] unsigned char 
  1758 ;;  ret             1    0        unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      unsigned char 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;Total ram usage:        5 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 1
  1775 ;; This function calls:
  1776 ;;		_gpio_pin_write_logic
  1777 ;; This function is called by:
  1778 ;;		_lcd_8bit_send_command
  1779 ;;		_lcd_8bit_send_char
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text14
  1784   0015E6                     __ptext14:
  1785                           	callstack 0
  1786   0015E6                     _lcd_send_8bits:
  1787                           	callstack 26
  1788   0015E6                     
  1789                           ;ECU_Layer/LCD/ecu_lcd.c: 221:     uint8 counter = 0;
  1790   0015E6  0E00               	movlw	0
  1791   0015E8  6E54               	movwf	lcd_send_8bits@counter^0,c
  1792                           
  1793                           ;ECU_Layer/LCD/ecu_lcd.c: 222:     if(((void*)0) == lcd){
  1794   0015EA  5050               	movf	lcd_send_8bits@lcd^0,w,c
  1795   0015EC  A4D8               	btfss	status,2,c
  1796   0015EE  EFFB  F00A         	goto	u931
  1797   0015F2  EFFD  F00A         	goto	u930
  1798   0015F6                     u931:
  1799   0015F6  EFFF  F00A         	goto	l1893
  1800   0015FA                     u930:
  1801   0015FA                     
  1802                           ;ECU_Layer/LCD/ecu_lcd.c: 224:     }
  1803   0015FA  EF1F  F00B         	goto	l410
  1804   0015FE                     l1893:
  1805                           
  1806                           ;ECU_Layer/LCD/ecu_lcd.c: 226:         for(counter = 0;counter < 8;++counter){
  1807   0015FE  0E00               	movlw	0
  1808   001600  6E54               	movwf	lcd_send_8bits@counter^0,c
  1809   001602                     l1899:
  1810   001602  5050               	movf	lcd_send_8bits@lcd^0,w,c
  1811   001604  2454               	addwf	lcd_send_8bits@counter^0,w,c
  1812   001606  0F02               	addlw	2
  1813   001608  6E48               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1814   00160A  C054  F052         	movff	lcd_send_8bits@counter,??_lcd_send_8bits
  1815   00160E  C051  F053         	movff	lcd_send_8bits@command,??_lcd_send_8bits+1
  1816   001612  2A52               	incf	??_lcd_send_8bits^0,f,c
  1817   001614  EF0E  F00B         	goto	u944
  1818   001618                     u945:
  1819   001618  90D8               	bcf	status,0,c
  1820   00161A  3253               	rrcf	(??_lcd_send_8bits+1)^0,f,c
  1821   00161C                     u944:
  1822   00161C  2E52               	decfsz	??_lcd_send_8bits^0,f,c
  1823   00161E  EF0C  F00B         	goto	u945
  1824   001622  5053               	movf	(??_lcd_send_8bits+1)^0,w,c
  1825   001624  0B01               	andlw	1
  1826   001626  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  1827   001628  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  1828   00162C                     
  1829                           ;ECU_Layer/LCD/ecu_lcd.c: 228:         }
  1830   00162C  2A54               	incf	lcd_send_8bits@counter^0,f,c
  1831   00162E  0E07               	movlw	7
  1832   001630  6454               	cpfsgt	lcd_send_8bits@counter^0,c
  1833   001632  EF1D  F00B         	goto	u951
  1834   001636  EF1F  F00B         	goto	u950
  1835   00163A                     u951:
  1836   00163A  EF01  F00B         	goto	l1899
  1837   00163E                     u950:
  1838   00163E                     l410:
  1839   00163E  0012               	return		;funcret
  1840   001640                     __end_of_lcd_send_8bits:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _enable_signal_8bits *****************
  1844 ;; Defined at:
  1845 ;;		line 246 in file "ECU_Layer/LCD/ecu_lcd.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  lcd             1    8[COMRAM] PTR const struct .
  1848 ;;		 -> lcd1(10), 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  ret             1    0        unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      unsigned char 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        1 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 1
  1867 ;; This function calls:
  1868 ;;		_gpio_pin_write_logic
  1869 ;; This function is called by:
  1870 ;;		_lcd_8bit_send_command
  1871 ;;		_lcd_8bit_send_char
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text15
  1876   0018CE                     __ptext15:
  1877                           	callstack 0
  1878   0018CE                     _enable_signal_8bits:
  1879                           	callstack 26
  1880   0018CE                     
  1881                           ;ECU_Layer/LCD/ecu_lcd.c: 248:     if(((void*)0) == lcd){
  1882   0018CE  5050               	movf	enable_signal_8bits@lcd^0,w,c
  1883   0018D0  A4D8               	btfss	status,2,c
  1884   0018D2  EF6D  F00C         	goto	u961
  1885   0018D6  EF6F  F00C         	goto	u960
  1886   0018DA                     u961:
  1887   0018DA  EF71  F00C         	goto	l1909
  1888   0018DE                     u960:
  1889   0018DE                     
  1890                           ;ECU_Layer/LCD/ecu_lcd.c: 250:     }
  1891   0018DE  EF81  F00C         	goto	l422
  1892   0018E2                     l1909:
  1893   0018E2  2850               	incf	enable_signal_8bits@lcd^0,w,c
  1894   0018E4  6E48               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1895   0018E6  0E01               	movlw	1
  1896   0018E8  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  1897   0018EA  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  1898   0018EE                     
  1899                           ;ECU_Layer/LCD/ecu_lcd.c: 253:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  1900   0018EE  0E03               	movlw	3
  1901   0018F0                     u1507:
  1902   0018F0  2EE8               	decfsz	wreg,f,c
  1903   0018F2  D7FE               	bra	u1507
  1904   0018F4  0000               	nop	
  1905   0018F6  2850               	incf	enable_signal_8bits@lcd^0,w,c
  1906   0018F8  6E48               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1907   0018FA  0E00               	movlw	0
  1908   0018FC  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  1909   0018FE  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  1910   001902                     l422:
  1911   001902  0012               	return		;funcret
  1912   001904                     __end_of_enable_signal_8bits:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _lcd_4bit_initialize *****************
  1916 ;; Defined at:
  1917 ;;		line 118 in file "ECU_Layer/LCD/ecu_lcd.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  lcd             1   17[COMRAM] PTR const struct .
  1920 ;;		 -> lcd2(6), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  counter         1   20[COMRAM] unsigned char 
  1923 ;;  ret             1   19[COMRAM] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      unsigned char 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1933 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;Total ram usage:        4 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 3
  1940 ;; This function calls:
  1941 ;;		_gpio_pin_initialize
  1942 ;;		_lcd_4bit_send_command
  1943 ;; This function is called by:
  1944 ;;		_Ecu_initialize
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text16
  1949   001212                     __ptext16:
  1950                           	callstack 0
  1951   001212                     _lcd_4bit_initialize:
  1952                           	callstack 25
  1953   001212                     
  1954                           ;ECU_Layer/LCD/ecu_lcd.c: 120:     uint8 counter = 0;
  1955   001212  0E00               	movlw	0
  1956   001214  6E5C               	movwf	lcd_4bit_initialize@counter^0,c
  1957                           
  1958                           ;ECU_Layer/LCD/ecu_lcd.c: 121:     if(((void*)0) == lcd){
  1959   001216  5059               	movf	lcd_4bit_initialize@lcd^0,w,c
  1960   001218  A4D8               	btfss	status,2,c
  1961   00121A  EF11  F009         	goto	u1111
  1962   00121E  EF13  F009         	goto	u1110
  1963   001222                     u1111:
  1964   001222  EF15  F009         	goto	l2061
  1965   001226                     u1110:
  1966   001226                     
  1967                           ;ECU_Layer/LCD/ecu_lcd.c: 123:     }
  1968   001226  EF77  F009         	goto	l375
  1969   00122A                     l2061:
  1970                           
  1971                           ;ECU_Layer/LCD/ecu_lcd.c: 125:         ret = gpio_pin_initialize(&(lcd->rs));
  1972   00122A  C059  F050         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1973   00122E  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  1974   001232  6E5B               	movwf	lcd_4bit_initialize@ret^0,c
  1975                           
  1976                           ;ECU_Layer/LCD/ecu_lcd.c: 126:         ret = gpio_pin_initialize(&(lcd->enable));
  1977   001234  2859               	incf	lcd_4bit_initialize@lcd^0,w,c
  1978   001236  6E50               	movwf	gpio_pin_initialize@_pin_config^0,c
  1979   001238  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  1980   00123C  6E5B               	movwf	lcd_4bit_initialize@ret^0,c
  1981   00123E                     
  1982                           ;ECU_Layer/LCD/ecu_lcd.c: 127:         for(counter = 0;counter < 4;++counter){
  1983   00123E  0E00               	movlw	0
  1984   001240  6E5C               	movwf	lcd_4bit_initialize@counter^0,c
  1985   001242                     l2069:
  1986   001242  5059               	movf	lcd_4bit_initialize@lcd^0,w,c
  1987   001244  245C               	addwf	lcd_4bit_initialize@counter^0,w,c
  1988   001246  0F02               	addlw	2
  1989   001248  6E50               	movwf	gpio_pin_initialize@_pin_config^0,c
  1990   00124A  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  1991   00124E                     
  1992                           ;ECU_Layer/LCD/ecu_lcd.c: 129:         }
  1993   00124E  2A5C               	incf	lcd_4bit_initialize@counter^0,f,c
  1994   001250  0E03               	movlw	3
  1995   001252  645C               	cpfsgt	lcd_4bit_initialize@counter^0,c
  1996   001254  EF2E  F009         	goto	u1121
  1997   001258  EF30  F009         	goto	u1120
  1998   00125C                     u1121:
  1999   00125C  EF21  F009         	goto	l2069
  2000   001260                     u1120:
  2001   001260                     
  2002                           ;ECU_Layer/LCD/ecu_lcd.c: 130:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2003   001260  0E34               	movlw	52
  2004   001262  6E5A               	movwf	??_lcd_4bit_initialize^0,c
  2005   001264  0EF2               	movlw	242
  2006   001266                     u1517:
  2007   001266  2EE8               	decfsz	wreg,f,c
  2008   001268  D7FE               	bra	u1517
  2009   00126A  2E5A               	decfsz	??_lcd_4bit_initialize^0,f,c
  2010   00126C  D7FC               	bra	u1517
  2011   00126E                     
  2012                           ;ECU_Layer/LCD/ecu_lcd.c: 131:         lcd_4bit_send_command(lcd,0x38);
  2013   00126E  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2014   001272  0E38               	movlw	56
  2015   001274  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2016   001276  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2017   00127A                     
  2018                           ;ECU_Layer/LCD/ecu_lcd.c: 132:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  2019   00127A  0E0D               	movlw	13
  2020   00127C  6E5A               	movwf	??_lcd_4bit_initialize^0,c
  2021   00127E  0EFC               	movlw	252
  2022   001280                     u1527:
  2023   001280  2EE8               	decfsz	wreg,f,c
  2024   001282  D7FE               	bra	u1527
  2025   001284  2E5A               	decfsz	??_lcd_4bit_initialize^0,f,c
  2026   001286  D7FC               	bra	u1527
  2027                           
  2028                           ;ECU_Layer/LCD/ecu_lcd.c: 133:         lcd_4bit_send_command(lcd,0x38);
  2029   001288  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2030   00128C  0E38               	movlw	56
  2031   00128E  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2032   001290  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2033   001294                     
  2034                           ;ECU_Layer/LCD/ecu_lcd.c: 134:         _delay((unsigned long)((150)*(8000000UL/4000000.0
      +                          )));
  2035   001294  0E64               	movlw	100
  2036   001296                     u1537:
  2037   001296  2EE8               	decfsz	wreg,f,c
  2038   001298  D7FE               	bra	u1537
  2039   00129A                     
  2040                           ;ECU_Layer/LCD/ecu_lcd.c: 135:         lcd_4bit_send_command(lcd,0x38);
  2041   00129A  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2042   00129E  0E38               	movlw	56
  2043   0012A0  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2044   0012A2  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2045   0012A6                     
  2046                           ;ECU_Layer/LCD/ecu_lcd.c: 136:         lcd_4bit_send_command(lcd,0x01);
  2047   0012A6  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2048   0012AA  0E01               	movlw	1
  2049   0012AC  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2050   0012AE  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2051   0012B2                     
  2052                           ;ECU_Layer/LCD/ecu_lcd.c: 137:         lcd_4bit_send_command(lcd,0x02);
  2053   0012B2  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2054   0012B6  0E02               	movlw	2
  2055   0012B8  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2056   0012BA  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2057   0012BE                     
  2058                           ;ECU_Layer/LCD/ecu_lcd.c: 138:         lcd_4bit_send_command(lcd,0x06);
  2059   0012BE  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2060   0012C2  0E06               	movlw	6
  2061   0012C4  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2062   0012C6  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2063   0012CA                     
  2064                           ;ECU_Layer/LCD/ecu_lcd.c: 139:         lcd_4bit_send_command(lcd,0x0D);
  2065   0012CA  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2066   0012CE  0E0D               	movlw	13
  2067   0012D0  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2068   0012D2  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2069   0012D6                     
  2070                           ;ECU_Layer/LCD/ecu_lcd.c: 140:         lcd_4bit_send_command(lcd,0x28);
  2071   0012D6  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2072   0012DA  0E28               	movlw	40
  2073   0012DC  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2074   0012DE  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2075   0012E2                     
  2076                           ;ECU_Layer/LCD/ecu_lcd.c: 141:         lcd_4bit_send_command(lcd,0x80);
  2077   0012E2  C059  F056         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2078   0012E6  0E80               	movlw	128
  2079   0012E8  6E57               	movwf	lcd_4bit_send_command@command^0,c
  2080   0012EA  ECA2  F00B         	call	_lcd_4bit_send_command	;wreg free
  2081   0012EE                     l375:
  2082   0012EE  0012               	return		;funcret
  2083   0012F0                     __end_of_lcd_4bit_initialize:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _lcd_4bit_send_command *****************
  2087 ;; Defined at:
  2088 ;;		line 145 in file "ECU_Layer/LCD/ecu_lcd.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  lcd             1   14[COMRAM] PTR const struct .
  2091 ;;		 -> lcd2(6), 
  2092 ;;  command         1   15[COMRAM] unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  ret             1   16[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      unsigned char 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;Total ram usage:        3 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 2
  2111 ;; This function calls:
  2112 ;;		_enable_signal_4bits
  2113 ;;		_gpio_pin_write_logic
  2114 ;;		_lcd_send_4bits
  2115 ;; This function is called by:
  2116 ;;		_lcd_4bit_initialize
  2117 ;;		_lcd_4bits_set_cursor
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text17
  2122   001744                     __ptext17:
  2123                           	callstack 0
  2124   001744                     _lcd_4bit_send_command:
  2125                           	callstack 26
  2126   001744                     
  2127                           ;ECU_Layer/LCD/ecu_lcd.c: 147:     if(((void*)0) == lcd){
  2128   001744  5056               	movf	lcd_4bit_send_command@lcd^0,w,c
  2129   001746  A4D8               	btfss	status,2,c
  2130   001748  EFA8  F00B         	goto	u1031
  2131   00174C  EFAA  F00B         	goto	u1030
  2132   001750                     u1031:
  2133   001750  EFAC  F00B         	goto	l1971
  2134   001754                     u1030:
  2135   001754                     
  2136                           ;ECU_Layer/LCD/ecu_lcd.c: 149:     }
  2137   001754  EFCA  F00B         	goto	l380
  2138   001758                     l1971:
  2139                           
  2140                           ;ECU_Layer/LCD/ecu_lcd.c: 151:         ret = gpio_pin_write_logic(&(lcd->rs),GPIO_LOW);
  2141   001758  C056  F048         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2142   00175C  0E00               	movlw	0
  2143   00175E  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  2144   001760  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  2145   001764  6E58               	movwf	lcd_4bit_send_command@ret^0,c
  2146                           
  2147                           ;ECU_Layer/LCD/ecu_lcd.c: 152:         ret = lcd_send_4bits(lcd,(command >> 4));
  2148   001766  C056  F050         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2149   00176A  3857               	swapf	lcd_4bit_send_command@command^0,w,c
  2150   00176C  0B0F               	andlw	15
  2151   00176E  6E51               	movwf	lcd_send_4bits@command^0,c
  2152   001770  ECC2  F00A         	call	_lcd_send_4bits	;wreg free
  2153   001774  6E58               	movwf	lcd_4bit_send_command@ret^0,c
  2154                           
  2155                           ;ECU_Layer/LCD/ecu_lcd.c: 153:         enable_signal_4bits(lcd);
  2156   001776  C056  F050         	movff	lcd_4bit_send_command@lcd,enable_signal_4bits@lcd
  2157   00177A  EC82  F00C         	call	_enable_signal_4bits	;wreg free
  2158                           
  2159                           ;ECU_Layer/LCD/ecu_lcd.c: 154:         ret = lcd_send_4bits(lcd,command);
  2160   00177E  C056  F050         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2161   001782  C057  F051         	movff	lcd_4bit_send_command@command,lcd_send_4bits@command
  2162   001786  ECC2  F00A         	call	_lcd_send_4bits	;wreg free
  2163   00178A  6E58               	movwf	lcd_4bit_send_command@ret^0,c
  2164                           
  2165                           ;ECU_Layer/LCD/ecu_lcd.c: 155:         enable_signal_4bits(lcd);
  2166   00178C  C056  F050         	movff	lcd_4bit_send_command@lcd,enable_signal_4bits@lcd
  2167   001790  EC82  F00C         	call	_enable_signal_4bits	;wreg free
  2168   001794                     l380:
  2169   001794  0012               	return		;funcret
  2170   001796                     __end_of_lcd_4bit_send_command:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _lcd_send_4bits *****************
  2174 ;; Defined at:
  2175 ;;		line 233 in file "ECU_Layer/LCD/ecu_lcd.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  lcd             1    8[COMRAM] PTR const struct .
  2178 ;;		 -> lcd2(6), 
  2179 ;;  command         1    9[COMRAM] unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  counter         1   13[COMRAM] unsigned char 
  2182 ;;  ret             1   12[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        6 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 1
  2199 ;; This function calls:
  2200 ;;		_gpio_pin_write_logic
  2201 ;; This function is called by:
  2202 ;;		_lcd_4bit_send_command
  2203 ;;		_lcd_4bit_send_char
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text18
  2208   001584                     __ptext18:
  2209                           	callstack 0
  2210   001584                     _lcd_send_4bits:
  2211                           	callstack 26
  2212   001584                     
  2213                           ;ECU_Layer/LCD/ecu_lcd.c: 235:     uint8 counter = 0;
  2214   001584  0E00               	movlw	0
  2215   001586  6E55               	movwf	lcd_send_4bits@counter^0,c
  2216                           
  2217                           ;ECU_Layer/LCD/ecu_lcd.c: 236:     if(((void*)0) == lcd){
  2218   001588  5050               	movf	lcd_send_4bits@lcd^0,w,c
  2219   00158A  A4D8               	btfss	status,2,c
  2220   00158C  EFCA  F00A         	goto	u971
  2221   001590  EFCC  F00A         	goto	u970
  2222   001594                     u971:
  2223   001594  EFD0  F00A         	goto	l1921
  2224   001598                     u970:
  2225   001598                     
  2226                           ;ECU_Layer/LCD/ecu_lcd.c: 237:         ret = (std_ReturnType)0x00;
  2227   001598  0E00               	movlw	0
  2228   00159A  6E54               	movwf	lcd_send_4bits@ret^0,c
  2229                           
  2230                           ;ECU_Layer/LCD/ecu_lcd.c: 238:     }
  2231   00159C  EFF1  F00A         	goto	l1933
  2232   0015A0                     l1921:
  2233                           
  2234                           ;ECU_Layer/LCD/ecu_lcd.c: 240:         for(counter = 0;counter < 4;++counter){
  2235   0015A0  0E00               	movlw	0
  2236   0015A2  6E55               	movwf	lcd_send_4bits@counter^0,c
  2237   0015A4                     l1927:
  2238                           
  2239                           ;ECU_Layer/LCD/ecu_lcd.c: 241:             ret = gpio_pin_write_logic(&(lcd->data_pins[c
      +                          ounter]),(command >> counter) & (uint8)0x01);
  2240   0015A4  5050               	movf	lcd_send_4bits@lcd^0,w,c
  2241   0015A6  2455               	addwf	lcd_send_4bits@counter^0,w,c
  2242   0015A8  0F02               	addlw	2
  2243   0015AA  6E48               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2244   0015AC  C055  F052         	movff	lcd_send_4bits@counter,??_lcd_send_4bits
  2245   0015B0  C051  F053         	movff	lcd_send_4bits@command,??_lcd_send_4bits+1
  2246   0015B4  2A52               	incf	??_lcd_send_4bits^0,f,c
  2247   0015B6  EFDF  F00A         	goto	u984
  2248   0015BA                     u985:
  2249   0015BA  90D8               	bcf	status,0,c
  2250   0015BC  3253               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  2251   0015BE                     u984:
  2252   0015BE  2E52               	decfsz	??_lcd_send_4bits^0,f,c
  2253   0015C0  EFDD  F00A         	goto	u985
  2254   0015C4  5053               	movf	(??_lcd_send_4bits+1)^0,w,c
  2255   0015C6  0B01               	andlw	1
  2256   0015C8  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  2257   0015CA  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  2258   0015CE  6E54               	movwf	lcd_send_4bits@ret^0,c
  2259   0015D0                     
  2260                           ;ECU_Layer/LCD/ecu_lcd.c: 242:         }
  2261   0015D0  2A55               	incf	lcd_send_4bits@counter^0,f,c
  2262   0015D2  0E03               	movlw	3
  2263   0015D4  6455               	cpfsgt	lcd_send_4bits@counter^0,c
  2264   0015D6  EFEF  F00A         	goto	u991
  2265   0015DA  EFF1  F00A         	goto	u990
  2266   0015DE                     u991:
  2267   0015DE  EFD2  F00A         	goto	l1927
  2268   0015E2                     u990:
  2269   0015E2                     l1933:
  2270                           
  2271                           ;ECU_Layer/LCD/ecu_lcd.c: 244:     return ret;
  2272   0015E2  5054               	movf	lcd_send_4bits@ret^0,w,c
  2273   0015E4  0012               	return		;funcret
  2274   0015E6                     __end_of_lcd_send_4bits:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _enable_signal_4bits *****************
  2278 ;; Defined at:
  2279 ;;		line 258 in file "ECU_Layer/LCD/ecu_lcd.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  lcd             1    8[COMRAM] PTR const struct .
  2282 ;;		 -> lcd2(6), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  ret             1    0        unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:        1 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 1
  2301 ;; This function calls:
  2302 ;;		_gpio_pin_write_logic
  2303 ;; This function is called by:
  2304 ;;		_lcd_4bit_send_command
  2305 ;;		_lcd_4bit_send_char
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text19
  2310   001904                     __ptext19:
  2311                           	callstack 0
  2312   001904                     _enable_signal_4bits:
  2313                           	callstack 26
  2314   001904                     
  2315                           ;ECU_Layer/LCD/ecu_lcd.c: 260:     if(((void*)0) == lcd){
  2316   001904  5050               	movf	enable_signal_4bits@lcd^0,w,c
  2317   001906  A4D8               	btfss	status,2,c
  2318   001908  EF88  F00C         	goto	u1001
  2319   00190C  EF8A  F00C         	goto	u1000
  2320   001910                     u1001:
  2321   001910  EF8C  F00C         	goto	l1941
  2322   001914                     u1000:
  2323   001914                     
  2324                           ;ECU_Layer/LCD/ecu_lcd.c: 262:     }
  2325   001914  EF9C  F00C         	goto	l427
  2326   001918                     l1941:
  2327   001918  2850               	incf	enable_signal_4bits@lcd^0,w,c
  2328   00191A  6E48               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2329   00191C  0E01               	movlw	1
  2330   00191E  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  2331   001920  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  2332   001924                     
  2333                           ;ECU_Layer/LCD/ecu_lcd.c: 265:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  2334   001924  0E03               	movlw	3
  2335   001926                     u1547:
  2336   001926  2EE8               	decfsz	wreg,f,c
  2337   001928  D7FE               	bra	u1547
  2338   00192A  0000               	nop	
  2339   00192C  2850               	incf	enable_signal_4bits@lcd^0,w,c
  2340   00192E  6E48               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2341   001930  0E00               	movlw	0
  2342   001932  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  2343   001934  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  2344   001938                     l427:
  2345   001938  0012               	return		;funcret
  2346   00193A                     __end_of_enable_signal_4bits:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _keypad_initialize *****************
  2350 ;; Defined at:
  2351 ;;		line 26 in file "ECU_Layer/Keypad/Keypad.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  _keypad_obj     1   10[COMRAM] PTR const struct .
  2354 ;;		 -> keypad1(8), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  row_counter     1   12[COMRAM] unsigned char 
  2357 ;;  coloumns_con    1   11[COMRAM] unsigned char 
  2358 ;;  ret             1    0        unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      unsigned char 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2368 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;Total ram usage:        3 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 2
  2375 ;; This function calls:
  2376 ;;		_gpio_pin_initialize
  2377 ;; This function is called by:
  2378 ;;		_Ecu_initialize
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text20
  2383   00151C                     __ptext20:
  2384                           	callstack 0
  2385   00151C                     _keypad_initialize:
  2386                           	callstack 26
  2387   00151C                     
  2388                           ;ECU_Layer/Keypad/Keypad.c: 28:     uint8 row_counter = 0,coloumns_conter = 0;
  2389   00151C  0E00               	movlw	0
  2390   00151E  6E54               	movwf	keypad_initialize@row_counter^0,c
  2391   001520  0E00               	movlw	0
  2392   001522  6E53               	movwf	keypad_initialize@coloumns_conter^0,c
  2393                           
  2394                           ;ECU_Layer/Keypad/Keypad.c: 29:     if(_keypad_obj == ((void*)0)){
  2395   001524  5052               	movf	keypad_initialize@_keypad_obj^0,w,c
  2396   001526  A4D8               	btfss	status,2,c
  2397   001528  EF98  F00A         	goto	u1041
  2398   00152C  EF9A  F00A         	goto	u1040
  2399   001530                     u1041:
  2400   001530  EF9C  F00A         	goto	l1979
  2401   001534                     u1040:
  2402   001534                     
  2403                           ;ECU_Layer/Keypad/Keypad.c: 31:     }
  2404   001534  EFC1  F00A         	goto	l57
  2405   001538                     l1979:
  2406                           
  2407                           ;ECU_Layer/Keypad/Keypad.c: 33:         for(row_counter = 0;row_counter < 4;row_counter+
      +                          +){
  2408   001538  0E00               	movlw	0
  2409   00153A  6E54               	movwf	keypad_initialize@row_counter^0,c
  2410   00153C                     l1985:
  2411   00153C  5052               	movf	keypad_initialize@_keypad_obj^0,w,c
  2412   00153E  2454               	addwf	keypad_initialize@row_counter^0,w,c
  2413   001540  6E50               	movwf	gpio_pin_initialize@_pin_config^0,c
  2414   001542  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  2415   001546                     
  2416                           ;ECU_Layer/Keypad/Keypad.c: 35:         }
  2417   001546  2A54               	incf	keypad_initialize@row_counter^0,f,c
  2418   001548  0E03               	movlw	3
  2419   00154A  6454               	cpfsgt	keypad_initialize@row_counter^0,c
  2420   00154C  EFAA  F00A         	goto	u1051
  2421   001550  EFAC  F00A         	goto	u1050
  2422   001554                     u1051:
  2423   001554  EF9E  F00A         	goto	l1985
  2424   001558                     u1050:
  2425   001558                     
  2426                           ;ECU_Layer/Keypad/Keypad.c: 36:         for(coloumns_conter = 0;row_counter < 4;coloumns
      +                          _conter++){
  2427   001558  0E00               	movlw	0
  2428   00155A  6E53               	movwf	keypad_initialize@coloumns_conter^0,c
  2429   00155C                     l1993:
  2430   00155C  0E03               	movlw	3
  2431   00155E  6454               	cpfsgt	keypad_initialize@row_counter^0,c
  2432   001560  EFB4  F00A         	goto	u1061
  2433   001564  EFB6  F00A         	goto	u1060
  2434   001568                     u1061:
  2435   001568  EFB8  F00A         	goto	l1997
  2436   00156C                     u1060:
  2437   00156C  EFC1  F00A         	goto	l57
  2438   001570                     l1997:
  2439   001570  5052               	movf	keypad_initialize@_keypad_obj^0,w,c
  2440   001572  2453               	addwf	keypad_initialize@coloumns_conter^0,w,c
  2441   001574  0F04               	addlw	4
  2442   001576  6E50               	movwf	gpio_pin_initialize@_pin_config^0,c
  2443   001578  EC10  F00C         	call	_gpio_pin_initialize	;wreg free
  2444   00157C                     
  2445                           ;ECU_Layer/Keypad/Keypad.c: 38:         }
  2446   00157C  2A53               	incf	keypad_initialize@coloumns_conter^0,f,c
  2447   00157E  EFAE  F00A         	goto	l1993
  2448   001582                     l57:
  2449   001582  0012               	return		;funcret
  2450   001584                     __end_of_keypad_initialize:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _gpio_pin_initialize *****************
  2454 ;; Defined at:
  2455 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  2458 ;;		 -> lcd2$data_pins(4), lcd2(6), lcd1$data_pins(8), lcd1(10), 
  2459 ;;		 -> keypad1$coloumns(4), keypad1$rows(4), keypad1(8), relay_initialization@pin_obj(1), 
  2460 ;;		 -> led_initialize@pin_obj(1), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  ret             1    9[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      unsigned char 
  2465 ;; Registers used:
  2466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 1
  2479 ;; This function calls:
  2480 ;;		_gpio_pin_direction_intialize
  2481 ;;		_gpio_pin_write_logic
  2482 ;; This function is called by:
  2483 ;;		_keypad_initialize
  2484 ;;		_led_initialize
  2485 ;;		_lcd_8bit_initialize
  2486 ;;		_lcd_4bit_initialize
  2487 ;;		_sev_seg_initialize
  2488 ;;		_motor_initialize
  2489 ;;		_relay_initialization
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text21
  2494   001820                     __ptext21:
  2495                           	callstack 0
  2496   001820                     _gpio_pin_initialize:
  2497                           	callstack 26
  2498   001820                     
  2499                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:     std_ReturnType ret = (std_ReturnType)0x01;
  2500   001820  0E01               	movlw	1
  2501   001822  6E51               	movwf	gpio_pin_initialize@ret^0,c
  2502                           
  2503                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config ){
  2504   001824  5050               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2505   001826  A4D8               	btfss	status,2,c
  2506   001828  EF18  F00C         	goto	u1011
  2507   00182C  EF1A  F00C         	goto	u1010
  2508   001830                     u1011:
  2509   001830  EF1E  F00C         	goto	l1953
  2510   001834                     u1010:
  2511   001834                     
  2512                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:         ret = (std_ReturnType)0x00;
  2513   001834  0E00               	movlw	0
  2514   001836  6E51               	movwf	gpio_pin_initialize@ret^0,c
  2515                           
  2516                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:     }
  2517   001838  EF2D  F00C         	goto	l1955
  2518   00183C                     l1953:
  2519                           
  2520                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:         gpio_pin_direction_intialize(_pin_config);
  2521   00183C  C050  F048         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  2522   001840  EC08  F008         	call	_gpio_pin_direction_intialize	;wreg free
  2523                           
  2524                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:         gpio_pin_write_logic(_pin_config,_pin_config->
      +                          logic);
  2525   001844  C050  F048         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2526   001848  5050               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2527   00184A  6ED9               	movwf	fsr2l,c
  2528   00184C  6ADA               	clrf	fsr2h,c
  2529   00184E  0E00               	movlw	0
  2530   001850  BEDF               	btfsc	indf2,7,c
  2531   001852  0E01               	movlw	1
  2532   001854  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  2533   001856  EC91  F008         	call	_gpio_pin_write_logic	;wreg free
  2534   00185A                     l1955:
  2535                           
  2536                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     return ret;
  2537   00185A  5051               	movf	gpio_pin_initialize@ret^0,w,c
  2538   00185C  0012               	return		;funcret
  2539   00185E                     __end_of_gpio_pin_initialize:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _gpio_pin_write_logic *****************
  2543 ;; Defined at:
  2544 ;;		line 68 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2547 ;;		 -> lcd2$data_pins(4), lcd2(6), lcd1$data_pins(8), lcd1(10), 
  2548 ;;		 -> keypad1$coloumns(4), keypad1$rows(4), keypad1(8), relay_turn_off@pin_obj(1), 
  2549 ;;		 -> relay_turn_on@pin_obj(1), relay_initialization@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  2550 ;;		 -> led_initialize@pin_obj(1), 
  2551 ;;  logic           1    1[COMRAM] enum E2814
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  ret             1    7[COMRAM] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      unsigned char 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:        8 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_gpio_pin_initialize
  2573 ;;		_lcd_8bit_send_command
  2574 ;;		_lcd_8bit_send_char
  2575 ;;		_lcd_4bit_send_command
  2576 ;;		_lcd_4bit_send_char
  2577 ;;		_lcd_send_8bits
  2578 ;;		_lcd_send_4bits
  2579 ;;		_enable_signal_8bits
  2580 ;;		_enable_signal_4bits
  2581 ;;		_sev_seg_write_number
  2582 ;;		_keypad_read_value
  2583 ;;		_led_turn_on
  2584 ;;		_led_turn_off
  2585 ;;		_motor_turn_right
  2586 ;;		_motor_turn_left
  2587 ;;		_motor_stop
  2588 ;;		_relay_turn_on
  2589 ;;		_relay_turn_off
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text22
  2594   001122                     __ptext22:
  2595                           	callstack 0
  2596   001122                     _gpio_pin_write_logic:
  2597                           	callstack 26
  2598   001122                     
  2599                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:     std_ReturnType ret = (std_ReturnType)0x01;
  2600   001122  0E01               	movlw	1
  2601   001124  6E4F               	movwf	gpio_pin_write_logic@ret^0,c
  2602                           
  2603                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:     if(((void*)0) == _pin_config){
  2604   001126  5048               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2605   001128  A4D8               	btfss	status,2,c
  2606   00112A  EF99  F008         	goto	u851
  2607   00112E  EF9B  F008         	goto	u850
  2608   001132                     u851:
  2609   001132  EFF2  F008         	goto	l1861
  2610   001136                     u850:
  2611   001136                     
  2612                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:         ret = (std_ReturnType)0x00;
  2613   001136  0E00               	movlw	0
  2614   001138  6E4F               	movwf	gpio_pin_write_logic@ret^0,c
  2615                           
  2616                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     }
  2617   00113A  EF07  F009         	goto	l1863
  2618   00113E                     l1855:
  2619                           
  2620                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
  2621   00113E  5048               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2622   001140  6ED9               	movwf	fsr2l,c
  2623   001142  6ADA               	clrf	fsr2h,c
  2624   001144  30DF               	rrcf	223,w,c
  2625   001146  32E8               	rrcf	wreg,f,c
  2626   001148  32E8               	rrcf	wreg,f,c
  2627   00114A  0B07               	andlw	7
  2628   00114C  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  2629   00114E  0E01               	movlw	1
  2630   001150  6E4B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2631   001152  2A4A               	incf	??_gpio_pin_write_logic^0,f,c
  2632   001154  EFAE  F008         	goto	u864
  2633   001158                     u865:
  2634   001158  90D8               	bcf	status,0,c
  2635   00115A  364B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2636   00115C                     u864:
  2637   00115C  2E4A               	decfsz	??_gpio_pin_write_logic^0,f,c
  2638   00115E  EFAC  F008         	goto	u865
  2639   001162  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2640   001164  0AFF               	xorlw	255
  2641   001166  6E4C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2642   001168  5048               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2643   00116A  6ED9               	movwf	fsr2l,c
  2644   00116C  6ADA               	clrf	fsr2h,c
  2645   00116E  50DF               	movf	223,w,c
  2646   001170  0B07               	andlw	7
  2647   001172  0D02               	mullw	2
  2648   001174  50F3               	movf	243,w,c
  2649   001176  0F1B               	addlw	low _lat_registers
  2650   001178  6ED9               	movwf	fsr2l,c
  2651   00117A  6ADA               	clrf	fsr2h,c
  2652   00117C  CFDE F04D          	movff	postinc2,??_gpio_pin_write_logic+3
  2653   001180  CFDD F04E          	movff	postdec2,??_gpio_pin_write_logic+4
  2654   001184  C04D  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2655   001188  C04E  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2656   00118C  504C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2657   00118E  16DF               	andwf	indf2,f,c
  2658                           
  2659                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 break;
  2660   001190  EF07  F009         	goto	l1863
  2661   001194                     l1857:
  2662                           
  2663                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  2664   001194  5048               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2665   001196  6ED9               	movwf	fsr2l,c
  2666   001198  6ADA               	clrf	fsr2h,c
  2667   00119A  30DF               	rrcf	223,w,c
  2668   00119C  32E8               	rrcf	wreg,f,c
  2669   00119E  32E8               	rrcf	wreg,f,c
  2670   0011A0  0B07               	andlw	7
  2671   0011A2  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  2672   0011A4  0E01               	movlw	1
  2673   0011A6  6E4B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2674   0011A8  2A4A               	incf	??_gpio_pin_write_logic^0,f,c
  2675   0011AA  EFD9  F008         	goto	u874
  2676   0011AE                     u875:
  2677   0011AE  90D8               	bcf	status,0,c
  2678   0011B0  364B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2679   0011B2                     u874:
  2680   0011B2  2E4A               	decfsz	??_gpio_pin_write_logic^0,f,c
  2681   0011B4  EFD7  F008         	goto	u875
  2682   0011B8  5048               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2683   0011BA  6ED9               	movwf	fsr2l,c
  2684   0011BC  6ADA               	clrf	fsr2h,c
  2685   0011BE  50DF               	movf	223,w,c
  2686   0011C0  0B07               	andlw	7
  2687   0011C2  0D02               	mullw	2
  2688   0011C4  50F3               	movf	243,w,c
  2689   0011C6  0F1B               	addlw	low _lat_registers
  2690   0011C8  6ED9               	movwf	fsr2l,c
  2691   0011CA  6ADA               	clrf	fsr2h,c
  2692   0011CC  CFDE F04C          	movff	postinc2,??_gpio_pin_write_logic+2
  2693   0011D0  CFDD F04D          	movff	postdec2,??_gpio_pin_write_logic+3
  2694   0011D4  C04C  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2695   0011D8  C04D  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2696   0011DC  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2697   0011DE  12DF               	iorwf	indf2,f,c
  2698                           
  2699                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 break;
  2700   0011E0  EF07  F009         	goto	l1863
  2701   0011E4                     l1861:
  2702   0011E4  5049               	movf	gpio_pin_write_logic@logic^0,w,c
  2703   0011E6  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  2704   0011E8  6A4B               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2705                           
  2706                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2707                           ; Switch size 1, requested type "simple"
  2708                           ; Number of cases is 1, Range of values is 0 to 0
  2709                           ; switch strategies available:
  2710                           ; Name         Instructions Cycles
  2711                           ; simple_byte            4     3 (average)
  2712                           ;	Chosen strategy is simple_byte
  2713   0011EA  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2714   0011EC  0A00               	xorlw	0	; case 0
  2715   0011EE  B4D8               	btfsc	status,2,c
  2716   0011F0  EFFC  F008         	goto	l2447
  2717   0011F4  EF07  F009         	goto	l1863
  2718   0011F8                     l2447:
  2719                           
  2720                           ; Switch size 1, requested type "simple"
  2721                           ; Number of cases is 2, Range of values is 0 to 1
  2722                           ; switch strategies available:
  2723                           ; Name         Instructions Cycles
  2724                           ; simple_byte            7     4 (average)
  2725                           ;	Chosen strategy is simple_byte
  2726   0011F8  504A               	movf	??_gpio_pin_write_logic^0,w,c
  2727   0011FA  0A00               	xorlw	0	; case 0
  2728   0011FC  B4D8               	btfsc	status,2,c
  2729   0011FE  EF9F  F008         	goto	l1855
  2730   001202  0A01               	xorlw	1	; case 1
  2731   001204  B4D8               	btfsc	status,2,c
  2732   001206  EFCA  F008         	goto	l1857
  2733   00120A  EF07  F009         	goto	l1863
  2734   00120E                     l1863:
  2735                           
  2736                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     return ret;
  2737   00120E  504F               	movf	gpio_pin_write_logic@ret^0,w,c
  2738   001210  0012               	return		;funcret
  2739   001212                     __end_of_gpio_pin_write_logic:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _gpio_pin_direction_intialize *****************
  2743 ;; Defined at:
  2744 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2747 ;;		 -> lcd2$data_pins(4), lcd2(6), lcd1$data_pins(8), lcd1(10), 
  2748 ;;		 -> keypad1$coloumns(4), keypad1$rows(4), keypad1(8), relay_initialization@pin_obj(1), 
  2749 ;;		 -> led_initialize@pin_obj(1), 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  ret             1    6[COMRAM] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      unsigned char 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2761 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;Total ram usage:        7 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_gpio_pin_initialize
  2771 ;;		_button_initialize
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text23
  2776   001010                     __ptext23:
  2777                           	callstack 0
  2778   001010                     _gpio_pin_direction_intialize:
  2779                           	callstack 26
  2780   001010                     
  2781                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     std_ReturnType ret = (std_ReturnType)0x01;
  2782   001010  0E01               	movlw	1
  2783   001012  6E4E               	movwf	gpio_pin_direction_intialize@ret^0,c
  2784                           
  2785                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 - 1){
  2786   001014  5048               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2787   001016  B4D8               	btfsc	status,2,c
  2788   001018  EF10  F008         	goto	u881
  2789   00101C  EF12  F008         	goto	u880
  2790   001020                     u881:
  2791   001020  EF22  F008         	goto	l1875
  2792   001024                     u880:
  2793   001024  5048               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2794   001026  6ED9               	movwf	fsr2l,c
  2795   001028  6ADA               	clrf	fsr2h,c
  2796   00102A  30DF               	rrcf	223,w,c
  2797   00102C  32E8               	rrcf	wreg,f,c
  2798   00102E  32E8               	rrcf	wreg,f,c
  2799   001030  0B07               	andlw	7
  2800   001032  6E49               	movwf	??_gpio_pin_direction_intialize^0,c
  2801   001034  0E07               	movlw	7
  2802   001036  6449               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2803   001038  EF20  F008         	goto	u891
  2804   00103C  EF22  F008         	goto	u890
  2805   001040                     u891:
  2806   001040  EF79  F008         	goto	l1883
  2807   001044                     u890:
  2808   001044                     l1875:
  2809                           
  2810                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:         ret = (std_ReturnType)0x00;
  2811   001044  0E00               	movlw	0
  2812   001046  6E4E               	movwf	gpio_pin_direction_intialize@ret^0,c
  2813                           
  2814                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     }
  2815   001048  EF8F  F008         	goto	l1885
  2816   00104C                     l1877:
  2817                           
  2818                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1<<_pin_config->pin));
  2819   00104C  5048               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2820   00104E  6ED9               	movwf	fsr2l,c
  2821   001050  6ADA               	clrf	fsr2h,c
  2822   001052  30DF               	rrcf	223,w,c
  2823   001054  32E8               	rrcf	wreg,f,c
  2824   001056  32E8               	rrcf	wreg,f,c
  2825   001058  0B07               	andlw	7
  2826   00105A  6E49               	movwf	??_gpio_pin_direction_intialize^0,c
  2827   00105C  0E01               	movlw	1
  2828   00105E  6E4A               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2829   001060  2A49               	incf	??_gpio_pin_direction_intialize^0,f,c
  2830   001062  EF35  F008         	goto	u904
  2831   001066                     u905:
  2832   001066  90D8               	bcf	status,0,c
  2833   001068  364A               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2834   00106A                     u904:
  2835   00106A  2E49               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2836   00106C  EF33  F008         	goto	u905
  2837   001070  504A               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2838   001072  0AFF               	xorlw	255
  2839   001074  6E4B               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2840   001076  5048               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2841   001078  6ED9               	movwf	fsr2l,c
  2842   00107A  6ADA               	clrf	fsr2h,c
  2843   00107C  50DF               	movf	223,w,c
  2844   00107E  0B07               	andlw	7
  2845   001080  0D02               	mullw	2
  2846   001082  50F3               	movf	243,w,c
  2847   001084  0F25               	addlw	low _tris_registers
  2848   001086  6ED9               	movwf	fsr2l,c
  2849   001088  6ADA               	clrf	fsr2h,c
  2850   00108A  CFDE F04C          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2851   00108E  CFDD F04D          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2852   001092  C04C  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2853   001096  C04D  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2854   00109A  504B               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2855   00109C  16DF               	andwf	indf2,f,c
  2856                           
  2857                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:             break;
  2858   00109E  EF8F  F008         	goto	l1885
  2859   0010A2                     l1879:
  2860                           
  2861                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  2862   0010A2  5048               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2863   0010A4  6ED9               	movwf	fsr2l,c
  2864   0010A6  6ADA               	clrf	fsr2h,c
  2865   0010A8  30DF               	rrcf	223,w,c
  2866   0010AA  32E8               	rrcf	wreg,f,c
  2867   0010AC  32E8               	rrcf	wreg,f,c
  2868   0010AE  0B07               	andlw	7
  2869   0010B0  6E49               	movwf	??_gpio_pin_direction_intialize^0,c
  2870   0010B2  0E01               	movlw	1
  2871   0010B4  6E4A               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2872   0010B6  2A49               	incf	??_gpio_pin_direction_intialize^0,f,c
  2873   0010B8  EF60  F008         	goto	u914
  2874   0010BC                     u915:
  2875   0010BC  90D8               	bcf	status,0,c
  2876   0010BE  364A               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2877   0010C0                     u914:
  2878   0010C0  2E49               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2879   0010C2  EF5E  F008         	goto	u915
  2880   0010C6  5048               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2881   0010C8  6ED9               	movwf	fsr2l,c
  2882   0010CA  6ADA               	clrf	fsr2h,c
  2883   0010CC  50DF               	movf	223,w,c
  2884   0010CE  0B07               	andlw	7
  2885   0010D0  0D02               	mullw	2
  2886   0010D2  50F3               	movf	243,w,c
  2887   0010D4  0F25               	addlw	low _tris_registers
  2888   0010D6  6ED9               	movwf	fsr2l,c
  2889   0010D8  6ADA               	clrf	fsr2h,c
  2890   0010DA  CFDE F04B          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2891   0010DE  CFDD F04C          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2892   0010E2  C04B  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2893   0010E6  C04C  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2894   0010EA  504A               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2895   0010EC  12DF               	iorwf	indf2,f,c
  2896                           
  2897                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             break;
  2898   0010EE  EF8F  F008         	goto	l1885
  2899   0010F2                     l1883:
  2900   0010F2  5048               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2901   0010F4  6ED9               	movwf	fsr2l,c
  2902   0010F6  6ADA               	clrf	fsr2h,c
  2903   0010F8  BCDF               	btfsc	indf2,6,c
  2904   0010FA  EF81  F008         	goto	u921
  2905   0010FE  EF84  F008         	goto	u920
  2906   001102                     u921:
  2907   001102  0E01               	movlw	1
  2908   001104  EF85  F008         	goto	u926
  2909   001108                     u920:
  2910   001108  0E00               	movlw	0
  2911   00110A                     u926:
  2912                           
  2913                           ; Switch size 1, requested type "simple"
  2914                           ; Number of cases is 2, Range of values is 0 to 1
  2915                           ; switch strategies available:
  2916                           ; Name         Instructions Cycles
  2917                           ; simple_byte            7     4 (average)
  2918                           ;	Chosen strategy is simple_byte
  2919   00110A  0A00               	xorlw	0	; case 0
  2920   00110C  B4D8               	btfsc	status,2,c
  2921   00110E  EF26  F008         	goto	l1877
  2922   001112  0A01               	xorlw	1	; case 1
  2923   001114  B4D8               	btfsc	status,2,c
  2924   001116  EF51  F008         	goto	l1879
  2925   00111A  EF22  F008         	goto	l1875
  2926   00111E                     l1885:
  2927                           
  2928                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  2929   00111E  504E               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2930   001120  0012               	return		;funcret
  2931   001122                     __end_of_gpio_pin_direction_intialize:
  2932                           	callstack 0
  2933                           
  2934                           	psect	rparam
  2935   000000                     
  2936                           	psect	config
  2937                           
  2938                           ; Padding undefined space
  2939   300000                     	org	3145728
  2940   300000  FF                 	db	255
  2941                           
  2942                           ;Config register CONFIG1H @ 0x300001
  2943                           ;	Oscillator Selection bits
  2944                           ;	OSC = HS, HS oscillator
  2945                           ;	Fail-Safe Clock Monitor Enable bit
  2946                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2947                           ;	Internal/External Oscillator Switchover bit
  2948                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2949   300001                     	org	3145729
  2950   300001  02                 	db	2
  2951                           
  2952                           ;Config register CONFIG2L @ 0x300002
  2953                           ;	Power-up Timer Enable bit
  2954                           ;	PWRT = OFF, PWRT disabled
  2955                           ;	Brown-out Reset Enable bits
  2956                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2957                           ;	Brown Out Reset Voltage bits
  2958                           ;	BORV = 1, 
  2959   300002                     	org	3145730
  2960   300002  09                 	db	9
  2961                           
  2962                           ;Config register CONFIG2H @ 0x300003
  2963                           ;	Watchdog Timer Enable bit
  2964                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2965                           ;	Watchdog Timer Postscale Select bits
  2966                           ;	WDTPS = 32768, 1:32768
  2967   300003                     	org	3145731
  2968   300003  1E                 	db	30
  2969                           
  2970                           ; Padding undefined space
  2971   300004                     	org	3145732
  2972   300004  FF                 	db	255
  2973                           
  2974                           ;Config register CONFIG3H @ 0x300005
  2975                           ;	CCP2 MUX bit
  2976                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2977                           ;	PORTB A/D Enable bit
  2978                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2979                           ;	Low-Power Timer1 Oscillator Enable bit
  2980                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2981                           ;	MCLR Pin Enable bit
  2982                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2983   300005                     	org	3145733
  2984   300005  81                 	db	129
  2985                           
  2986                           ;Config register CONFIG4L @ 0x300006
  2987                           ;	Stack Full/Underflow Reset Enable bit
  2988                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2989                           ;	Single-Supply ICSP Enable bit
  2990                           ;	LVP = OFF, Single-Supply ICSP disabled
  2991                           ;	Extended Instruction Set Enable bit
  2992                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2993                           ;	Background Debugger Enable bit
  2994                           ;	DEBUG = 0x1, unprogrammed default
  2995   300006                     	org	3145734
  2996   300006  81                 	db	129
  2997                           
  2998                           ; Padding undefined space
  2999   300007                     	org	3145735
  3000   300007  FF                 	db	255
  3001                           
  3002                           ;Config register CONFIG5L @ 0x300008
  3003                           ;	Code Protection bit
  3004                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3005                           ;	Code Protection bit
  3006                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3007                           ;	Code Protection bit
  3008                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3009                           ;	Code Protection bit
  3010                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3011   300008                     	org	3145736
  3012   300008  0F                 	db	15
  3013                           
  3014                           ;Config register CONFIG5H @ 0x300009
  3015                           ;	Boot Block Code Protection bit
  3016                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3017                           ;	Data EEPROM Code Protection bit
  3018                           ;	CPD = OFF, Data EEPROM not code-protected
  3019   300009                     	org	3145737
  3020   300009  C0                 	db	192
  3021                           
  3022                           ;Config register CONFIG6L @ 0x30000A
  3023                           ;	Write Protection bit
  3024                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3025                           ;	Write Protection bit
  3026                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3027                           ;	Write Protection bit
  3028                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3029                           ;	Write Protection bit
  3030                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3031   30000A                     	org	3145738
  3032   30000A  0F                 	db	15
  3033                           
  3034                           ;Config register CONFIG6H @ 0x30000B
  3035                           ;	Configuration Register Write Protection bit
  3036                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3037                           ;	Boot Block Write Protection bit
  3038                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3039                           ;	Data EEPROM Write Protection bit
  3040                           ;	WRTD = OFF, Data EEPROM not write-protected
  3041   30000B                     	org	3145739
  3042   30000B  E0                 	db	224
  3043                           
  3044                           ;Config register CONFIG7L @ 0x30000C
  3045                           ;	Table Read Protection bit
  3046                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3047                           ;	Table Read Protection bit
  3048                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3049                           ;	Table Read Protection bit
  3050                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3051                           ;	Table Read Protection bit
  3052                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3053   30000C                     	org	3145740
  3054   30000C  0F                 	db	15
  3055                           
  3056                           ;Config register CONFIG7H @ 0x30000D
  3057                           ;	Boot Block Table Read Protection bit
  3058                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3059   30000D                     	org	3145741
  3060   30000D  40                 	db	64
  3061                           tosu	equ	0xFFF
  3062                           tosh	equ	0xFFE
  3063                           tosl	equ	0xFFD
  3064                           stkptr	equ	0xFFC
  3065                           pclatu	equ	0xFFB
  3066                           pclath	equ	0xFFA
  3067                           pcl	equ	0xFF9
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           prodh	equ	0xFF4
  3073                           prodl	equ	0xFF3
  3074                           indf0	equ	0xFEF
  3075                           postinc0	equ	0xFEE
  3076                           postdec0	equ	0xFED
  3077                           preinc0	equ	0xFEC
  3078                           plusw0	equ	0xFEB
  3079                           fsr0h	equ	0xFEA
  3080                           fsr0l	equ	0xFE9
  3081                           wreg	equ	0xFE8
  3082                           indf1	equ	0xFE7
  3083                           postinc1	equ	0xFE6
  3084                           postdec1	equ	0xFE5
  3085                           preinc1	equ	0xFE4
  3086                           plusw1	equ	0xFE3
  3087                           fsr1h	equ	0xFE2
  3088                           fsr1l	equ	0xFE1
  3089                           bsr	equ	0xFE0
  3090                           indf2	equ	0xFDF
  3091                           postinc2	equ	0xFDE
  3092                           postdec2	equ	0xFDD
  3093                           preinc2	equ	0xFDC
  3094                           plusw2	equ	0xFDB
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        71
    BSS         8
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24     104
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    enable_signal_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    enable_signal_8bits@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> keypad1(COMRAM[8]), keypad1$coloumns(COMRAM[4]), keypad1$rows(COMRAM[4]), lcd1(COMRAM[10]), 
		 -> lcd1$data_pins(COMRAM[8]), lcd2(COMRAM[6]), lcd2$data_pins(COMRAM[4]), led_initialize@pin_obj(COMRAM[1]), 
		 -> relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> keypad1(COMRAM[8]), keypad1$coloumns(COMRAM[4]), keypad1$rows(COMRAM[4]), lcd1(COMRAM[10]), 
		 -> lcd1$data_pins(COMRAM[8]), lcd2(COMRAM[6]), lcd2$data_pins(COMRAM[4]), led_initialize@pin_obj(COMRAM[1]), 
		 -> relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> keypad1(COMRAM[8]), keypad1$coloumns(COMRAM[4]), keypad1$rows(COMRAM[4]), lcd1(COMRAM[10]), 
		 -> lcd1$data_pins(COMRAM[8]), lcd2(COMRAM[6]), lcd2$data_pins(COMRAM[4]), led_initialize@pin_obj(COMRAM[1]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), 
		 -> relay_turn_on@pin_obj(COMRAM[1]), 

    keypad_initialize@_keypad_obj	PTR const struct . size(1) Largest target is 8
		 -> keypad1(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), 

    lcd_4bits_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_char@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    lcd_8bits_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd2(COMRAM[6]), 

    lcd_send_8bits@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    led_initialize@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_string_pos
    _main->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_send_string
    _lcd_8bits_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_lcd_send_8bits
    _lcd_4bit_send_string_pos->_lcd_4bit_send_string
    _lcd_4bit_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_string->_lcd_4bit_send_char
    _lcd_4bit_send_char->_lcd_send_4bits
    _Ecu_initialize->_lcd_4bit_initialize
    _led_initialize->_gpio_pin_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_send_8bits
    _lcd_send_8bits->_gpio_pin_write_logic
    _enable_signal_8bits->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _enable_signal_4bits->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  119286
             _application_initialize
           _lcd_4bit_send_string_pos
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             6     2      4   30753
                                             20 COMRAM     4     0      4
               _lcd_8bit_send_string
               _lcd_8bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bits_set_cursor                                 4     1      3   16100
                                             16 COMRAM     3     0      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2   14184
                                             17 COMRAM     3     1      2
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   4     2      2   13918
                                             13 COMRAM     4     2      2
                _enable_signal_8bits
               _gpio_pin_write_logic
                     _lcd_send_8bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   31960
                                             20 COMRAM     4     0      4
               _lcd_4bit_send_string
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_cursor                                 4     1      3   16791
                                             17 COMRAM     3     0      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 3     1      2   14723
                                             17 COMRAM     3     1      2
                 _lcd_4bit_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char                                   3     1      2   14457
                                             14 COMRAM     3     1      2
                _enable_signal_4bits
               _gpio_pin_write_logic
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   56573
                     _Ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _Ecu_initialize                                       0     0      0   56573
                  _keypad_initialize
                _lcd_4bit_initialize
                _lcd_8bit_initialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       4     3      1    6129
                                             10 COMRAM     3     2      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   21761
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                4     2      2   15422
                                             13 COMRAM     3     1      2
                _enable_signal_8bits
               _gpio_pin_write_logic
                     _lcd_send_8bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_8bits                                       6     4      2    4730
                                              8 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _enable_signal_8bits                                  2     1      1    4488
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   22474
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   16113
                                             14 COMRAM     3     1      2
                _enable_signal_4bits
               _gpio_pin_write_logic
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2    5050
                                              8 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _enable_signal_4bits                                  2     1      1    4640
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    4     3      1    6209
                                             10 COMRAM     3     2      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  2     1      1    5919
                                              8 COMRAM     2     1      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4260
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _Ecu_initialize
       _keypad_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _enable_signal_4bits
             _gpio_pin_write_logic
           _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _enable_signal_8bits
             _gpio_pin_write_logic
           _gpio_pin_write_logic
           _lcd_send_8bits
             _gpio_pin_write_logic
       _led_initialize
         _gpio_pin_initialize
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char
         _enable_signal_4bits
         _gpio_pin_write_logic
         _lcd_send_4bits
     _lcd_4bits_set_cursor
       _lcd_4bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
         _enable_signal_8bits
         _gpio_pin_write_logic
         _lcd_send_8bits
     _lcd_8bits_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     18      68       1       81.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68      39        0.0%
DATA                 0      0      68       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jul 06 06:54:07 2024

             __end_of_lcd_8bit_send_char 1820                          ?_lcd_send_4bits 0050  
                        ?_lcd_send_8bits 0050                                       l80 14C6  
                                     l57 1582                                       l84 151A  
           lcd_4bits_set_cursor@coloumns 005B                                      l221 1120  
                                    l311 19FA                                      l305 1966  
                                    l410 163E                                      l306 1966  
                                    l403 19D0                                      l340 13C0  
                                    l173 19F2                                      l238 1210  
                                    l422 1902                                      l350 181E  
                                    l255 185C                                      l417 15E4  
                                    l345 1896                                      l427 1938  
                                    l363 16EC                                      l380 1794  
                                    l437 1438                                      l375 12EE  
                                    l447 14B0                                      l368 199E  
                                    l385 1696                                      l398 1742  
                                    u920 1108                                      u904 106A  
                                    u921 1102                                      u905 1066  
                                    u914 10C0                                      u850 1136  
                                    u930 15FA                                      u915 10BC  
                                    u851 1132                                      u931 15F6  
                                    u926 110A                                      u950 163E  
                                    u951 163A                                      u880 1024  
                                    u864 115C                                      u960 18DE  
                                    u944 161C                                      u881 1020  
                                    u865 1158                                      u961 18DA  
                                    u945 1618                                      u890 1044  
                                    u874 11B2                                      u970 1598  
                                    u891 1040                                      u875 11AE  
                                    u971 1594                                      u990 15E2  
                                    u991 15DE                                      u984 15BE  
                                    u985 15BA                                      _ret 0068  
                    led_initialize@F2895 0067                ?_lcd_8bit_send_string_pos 005C  
                                    wreg 0FE8                                     l2011 1502  
                                   l2003 14B2             __end_of_lcd_8bit_send_string 16EE  
                                   l2021 1308                                     l2013 1512  
                                   l2005 14C2                                     l2101 17F2  
                                   l2031 132C                                     l2023 131C  
                                   l2007 14CA                                     l2111 1650  
                                   l2103 17FA                                     l2041 1372  
                                   l2033 132E                                     l2017 12F0  
                                   l2009 1500                                     l2113 1658  
                                   l2105 181C                                     l2121 13C2  
                                   l2201 1992                                     l2051 13A8  
                                   l2043 1378                                     l2035 133E  
                                   l2019 1304                                     l2115 1694  
                                   l2211 19C4                                     l2131 13FE  
                                   l2123 13C2                                     l2061 122A  
                                   l2053 13B4                                     l2045 1384  
                                   l2037 134C                                     l2029 1320  
                                   l2109 1640                                     l2205 19A0  
                                   l2141 1698                                     l2125 13C8  
                                   l2071 124E                                     l2063 123E  
                                   l2047 1390                                     l2039 1358  
                                   l2119 19D2                                     l2207 19B0  
                                   l2151 16EA                                     l2143 16AC  
                                   l2127 13DA                                     l2135 1410  
                                   l2081 1294                                     l2073 1250  
                                   l2057 1212                                     l2049 139C  
                                   l2161 1452                                     l2209 19B4  
                                   l2145 16B4                                     l2129 13EC  
                                   l2137 1436                                     l2091 12CA  
                                   l2083 129A                                     l2075 1260  
                                   l2059 1226                                     l2163 1464  
                                   l2171 14AE                                     l2155 143A  
                                   l2147 16CC                                     l2093 12D6  
                                   l2085 12A6                                     l2077 126E  
                                   l2069 1242                                     l2181 1722  
                                   l2165 1476                                     l2157 143A  
                                   l2149 16CE                                     l2421 1952  
                                   l2095 12E2                                     l2087 12B2  
                                   l2079 127A                                     l2183 1724  
                                   l2175 16EE                                     l2159 1440  
                                   l2191 196E                                     l2089 12BE  
                                   l2185 1740                                     l2177 1702  
                                   l2169 1488                                     l2193 196E  
                                   l2417 193A                                     l2179 170A  
                                   l2099 17DE                                     l2195 196E  
                                   l2419 193E                                     l1901 162C  
                                   l2189 19F4                                     l2197 197E  
                                   l2447 11F8                                     l1911 18EE  
                                   l1903 162E                                     l2199 1982  
                                   l1921 15A0                                     l1913 18F6  
                                   l1905 18CE                                     l1851 1122  
                                   l1931 15D2                                     l1907 18DE  
                                   l1853 1136                                     l1861 11E4  
                                   l1941 1918                                     l1933 15E2  
                                   l1917 1584                                     l1909 18E2  
                                   l1871 1010                                     l1855 113E  
                                   l1863 120E                                     l1951 1834  
                                   l1943 1924                                     l1927 15A4  
                                   l1919 1598                                     l1873 1024  
                                   l1857 1194                                     l1953 183C  
                                   l1945 192C                                     l1937 1904  
                                   l1929 15D0                                     l1961 1872  
                                   l1883 10F2                                     l1875 1044  
                                   l1955 185A                                     l1939 1914  
                                   l1971 1758                                     l1891 15FA  
                                   l1963 1876                                     l1877 104C  
                                   l1885 111E                                     l1949 1820  
                                   l1893 15FE                                     l1879 10A2  
                                   l1991 1558                                     l1975 151C  
                                   l1967 1744                                     l1959 185E  
                                   l1993 155C                                     l1985 153C  
                                   l1977 1534                                     l1969 1754  
                                   l1889 15E6                                     l1987 1546  
                                   l1979 1538                                     l1899 1602  
                                   l1997 1570                                     l1989 1548  
                                   l1999 157C                                     STR_1 1009  
                                   STR_2 1001                                     u1000 1914  
                                   u1001 1910                                     u1010 1834  
                                   u1011 1830                                     u1020 1872  
                                   u1100 133E                                     u1021 186E  
                                   u1101 133A                                     u1030 1754  
                                   u1110 1226                                     u1031 1750  
                                   u1111 1222                                     u1040 1534  
                                   u1120 1260                                     u1200 19B0  
                                   u1041 1530                                     u1121 125C  
                                   u1201 19AC                                     u1050 1558  
                                   u1130 17F2                                     u1051 1554  
                                   u1131 17EE                                     u1060 156C  
                                   u1140 1650                                     u1061 1568  
                                   u1141 164C                                     u1070 14C2  
                                   u1150 16AC                                     u1071 14BE  
                                   u1151 16A8                                     u1160 16EA  
                                   u1161 16E6                                     u1090 1304  
                                   u1170 1702                                     u1091 1300  
                                   u1171 16FE                                     u1180 1740  
                                   u1085 1510                                     u1181 173C  
                                   _LATA 0F89                                     u1190 197E  
                                   _LATB 0F8A                                     u1087 1512  
                                   u1191 197A                                     _LATC 0F8B  
                                   _LATD 0F8C                                     _LATE 0F8D  
                                   u1507 18F0                                     u1517 1266  
                                   u1527 1280                                     u1537 1296  
                                   u1547 1926                                     u1477 1344  
                                   u1487 135E                                     u1497 1374  
                   _lcd_4bit_send_string 16EE                                     _lcd1 002F  
                                   _lcd2 0041                                     _led1 0047  
                                   _main 193A                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                   __end_of_led_initialize 151C  
                                   prodl 0FF3                                     start 0000  
             lcd_8bit_initialize@counter 005B            __end_of_lcd_8bit_send_command 1898  
                           ___param_bank 0000                    _lcd_4bit_send_command 1744  
                lcd_4bit_send_char@_char 0057                     _gpio_pin_write_logic 1122  
                                  ?_main 0048                 ??_application_initialize 005D  
                    relay_turn_off@F2898 0061                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                    lcd_send_4bits@command 0051  
                  lcd_send_4bits@counter 0055                  lcd_8bits_set_cursor@lcd 0058  
                                  _value 0060                    ?_lcd_4bit_send_string 0059  
                                  tablat 0FF5                                    status 0FD8  
                        ?_led_initialize 0052                          __initialization 1898  
                           __end_of_main 196E                    ?_gpio_pin_write_logic 0048  
                          _lat_registers 001B          lcd_4bit_send_string_pos@coloumn 005E  
                                 ??_main 0060                           _Ecu_initialize 19D2  
                          __activetblptr 0002         lcd_8bit_send_string_pos@coloumns 005E  
                       led_turn_on@F2900 0066         __end_of_lcd_4bit_send_string_pos 19D2  
                 ?_lcd_4bit_send_command 0056                 lcd_8bits_set_cursor@Rows 0059  
                   _lcd_8bit_send_string 1698                   __end_of_Ecu_initialize 19F4  
                                 clear_0 18BE                    led_initialize@pin_obj 0054  
                                 isa$std 0001              lcd_8bit_send_string_pos@Row 005D  
            lcd_8bit_send_string_pos@lcd 005C              lcd_8bit_send_string_pos@str 005F  
gpio_pin_direction_intialize@_pin_config 0048                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                 ??_lcd_4bit_send_string 005B                               __accesstop 0080  
                __end_of__initialization 18C4                            ___rparam_used 0001  
                       ??_lcd_send_4bits 0052                         ??_lcd_send_8bits 0052  
                      led_initialize@led 0052                   ??_gpio_pin_write_logic 004A  
                         __pcstackCOMRAM 0048                    lcd_4bit_send_char@lcd 0056  
                  lcd_4bit_send_char@ret 0058                    ?_lcd_8bit_send_string 0059  
                        ?_Ecu_initialize 0048                 lcd_4bit_send_command@lcd 0056  
               lcd_4bit_send_command@ret 0058                       _lcd_8bit_send_char 17DE  
           keypad_initialize@row_counter 0054                  lcd_4bit_send_string@lcd 0059  
                lcd_4bit_send_string@ret 005B                  lcd_4bit_send_string@str 005A  
                    ?_lcd_8bit_send_char 0055                   _application_initialize 19F4  
                             __pnvCOMRAM 0068             __end_of_lcd_4bits_set_cursor 14B2  
                    _enable_signal_4bits 1904                      _enable_signal_8bits 18CE  
                 lcd_8bit_initialize@lcd 0058                   lcd_8bit_initialize@ret 005A  
                      led_turn_off@F2905 0065         keypad_initialize@coloumns_conter 0053  
                   ??_lcd_8bit_send_char 0057                     ?_enable_signal_4bits 0050  
                   ?_enable_signal_8bits 0050                ?_lcd_4bit_send_string_pos 005C  
                          _keypad_values 0001                     led_turn_toggle@F2910 0064  
                  lcd_send_8bits@command 0051                    lcd_send_8bits@counter 0054  
                       ??_led_initialize 0053                           _tris_registers 0025  
           lcd_8bits_set_cursor@coloumns 005A                                  __Hparam 0000  
                                __Lparam 0000                   ??_lcd_8bit_send_string 005B  
                    _gpio_pin_initialize 1820                    _lcd_8bit_send_command 185E  
                           __psmallconst 1000                                  __pcinit 1898  
                                __ramtop 1000                 _lcd_8bit_send_string_pos 196E  
                                __ptext0 193A                                  __ptext1 196E  
                                __ptext2 13C2                                  __ptext3 1698  
                                __ptext4 17DE                                  __ptext5 19A0  
                                __ptext6 143A                                  __ptext7 16EE  
                                __ptext8 1640                                  __ptext9 19F4  
                  ??_enable_signal_4bits 0051                    ??_enable_signal_8bits 0051  
                                _keypad1 0039                  lcd_4bits_set_cursor@lcd 0059  
                   ?_gpio_pin_initialize 0050                     end_of_initialization 18C4  
                      lcd_send_4bits@lcd 0050                        lcd_send_4bits@ret 0054  
                          __Lmediumconst 0000                  ??_lcd_4bit_send_command 0058  
                      lcd_send_8bits@lcd 0050               __end_of_lcd_4bit_send_char 1698  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                    _lcd_4bit_initialize 1212             __end_of_lcd_8bits_set_cursor 143A  
                   _lcd_4bits_set_cursor 143A     __end_of_gpio_pin_direction_intialize 1122  
           _gpio_pin_direction_intialize 1010                    ??_gpio_pin_initialize 0051  
                   ?_lcd_4bit_initialize 0059                   enable_signal_4bits@lcd 0050  
                       ??_Ecu_initialize 005D                   ?_lcd_8bit_send_command 0055  
                     relay_turn_on@F2893 0062              lcd_4bit_send_string_pos@Row 005D  
            lcd_4bit_send_string_pos@lcd 005C              lcd_4bit_send_string_pos@str 005F  
                 enable_signal_8bits@lcd 0050                            __pidataCOMRAM 1796  
                  ?_lcd_4bits_set_cursor 0059                      start_initialization 1898  
                    _lcd_8bit_initialize 12F0                lcd_8bit_send_char@counter 0057  
          ?_gpio_pin_direction_intialize 0048                  ?_application_initialize 0048  
                  ??_lcd_4bit_initialize 005A                     ?_lcd_8bit_initialize 0058  
           lcd_4bit_send_command@command 0057                 lcd_8bit_send_command@lcd 0055  
                            __pbssCOMRAM 0060           __end_of_application_initialize 19FC  
        gpio_pin_direction_intialize@ret 004E                     _lcd_8bits_set_cursor 13C2  
                  ??_lcd_8bit_initialize 0059               ??_lcd_8bit_send_string_pos 0060  
        gpio_pin_write_logic@_pin_config 0048                gpio_pin_write_logic@logic 0049  
                 ??_lcd_4bits_set_cursor 005C                              __smallconst 1000  
         ??_gpio_pin_direction_intialize 0049               lcd_4bit_initialize@counter 005C  
                  ?_lcd_8bits_set_cursor 0058            __end_of_lcd_4bit_send_command 1796  
                lcd_8bit_send_char@_char 0056              __end_of_enable_signal_4bits 193A  
            __end_of_enable_signal_8bits 1904                 _lcd_4bit_send_string_pos 19A0  
                     _lcd_4bit_send_char 1640                   gpio_pin_initialize@ret 0051  
                gpio_pin_write_logic@ret 004F                      ?_lcd_4bit_send_char 0056  
                              copy_data0 18AC                        _keypad_initialize 151C  
              relay_initialization@F2888 0063                       ?_keypad_initialize 0052  
                ??_lcd_8bit_send_command 0057                                 __Hrparam 0000  
                               __Lrparam 0000                      ??_keypad_initialize 0053  
                   ??_lcd_4bit_send_char 0058              __end_of_gpio_pin_initialize 185E  
         gpio_pin_initialize@_pin_config 0050                __end_of_keypad_initialize 1584  
                               __ptext10 19D2                                 __ptext11 14B2  
                               __ptext20 151C                                 __ptext12 12F0  
                               __ptext21 1820                                 __ptext13 185E  
                               __ptext22 1122                                 __ptext14 15E6  
                               __ptext23 1010                                 __ptext15 18CE  
                               __ptext16 1212                                 __ptext17 1744  
                               __ptext18 1584                                 __ptext19 1904  
                 ??_lcd_8bits_set_cursor 005B         __end_of_lcd_8bit_send_string_pos 19A0  
               lcd_4bits_set_cursor@Rows 005A                                 isa$xinst 0000  
           __end_of_lcd_4bit_send_string 1744                           _lcd_send_4bits 1584  
                         _lcd_send_8bits 15E6              __end_of_lcd_4bit_initialize 12F0  
           __end_of_gpio_pin_write_logic 1212             keypad_initialize@_keypad_obj 0052  
                  lcd_8bit_send_char@lcd 0055                    lcd_8bit_send_char@ret 0058  
                 __end_of_lcd_send_4bits 15E6                   __end_of_lcd_send_8bits 1640  
                         _port_registers 0011                  lcd_8bit_send_string@lcd 0059  
                lcd_8bit_send_string@ret 005B                  lcd_8bit_send_string@str 005A  
            __end_of_lcd_8bit_initialize 13C2             lcd_8bit_send_command@command 0056  
           lcd_8bit_send_command@counter 0057               ??_lcd_4bit_send_string_pos 0060  
                         _led_initialize 14B2                   lcd_4bit_initialize@lcd 0059  
                 lcd_4bit_initialize@ret 005B  
