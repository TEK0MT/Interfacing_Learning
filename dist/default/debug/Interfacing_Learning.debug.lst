

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jun 26 08:55:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 17/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   0013F2                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _port_registers
    65   0013F2  80                 	db	128
    66   0013F3  0F                 	db	15
    67   0013F4  81                 	db	129
    68   0013F5  0F                 	db	15
    69   0013F6  82                 	db	130
    70   0013F7  0F                 	db	15
    71   0013F8  83                 	db	131
    72   0013F9  0F                 	db	15
    73   0013FA  84                 	db	132
    74   0013FB  0F                 	db	15
    75                           
    76                           ;initializer for _lat_registers
    77   0013FC  89                 	db	137
    78   0013FD  0F                 	db	15
    79   0013FE  8A                 	db	138
    80   0013FF  0F                 	db	15
    81   001400  8B                 	db	139
    82   001401  0F                 	db	15
    83   001402  8C                 	db	140
    84   001403  0F                 	db	15
    85   001404  8D                 	db	141
    86   001405  0F                 	db	15
    87                           
    88                           ;initializer for _tris_registers
    89   001406  92                 	db	146
    90   001407  0F                 	db	15
    91   001408  93                 	db	147
    92   001409  0F                 	db	15
    93   00140A  94                 	db	148
    94   00140B  0F                 	db	15
    95   00140C  95                 	db	149
    96   00140D  0F                 	db	15
    97   00140E  96                 	db	150
    98   00140F  0F                 	db	15
    99                           
   100                           ;initializer for _motor2
   101   001410  10                 	db	16
   102   001411  18                 	db	24
   103                           
   104                           ;initializer for _motor1
   105   001412  00                 	db	0
   106   001413  08                 	db	8
   107                           
   108                           	psect	nvCOMRAM
   109   000036                     __pnvCOMRAM:
   110                           	callstack 0
   111   000036                     _ret:
   112                           	callstack 0
   113   000036                     	ds	1
   114   000000                     _PORTE	set	3972
   115   000000                     _PORTD	set	3971
   116   000000                     _PORTC	set	3970
   117   000000                     _PORTB	set	3969
   118   000000                     _PORTA	set	3968
   119   000000                     _LATA	set	3977
   120   000000                     _TRISA	set	3986
   121   000000                     _TRISE	set	3990
   122   000000                     _TRISD	set	3989
   123   000000                     _TRISC	set	3988
   124   000000                     _TRISB	set	3987
   125   000000                     _LATE	set	3981
   126   000000                     _LATD	set	3980
   127   000000                     _LATC	set	3979
   128   000000                     _LATB	set	3978
   129                           
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133   0012CE                     __pcinit:
   134                           	callstack 0
   135   0012CE                     start_initialization:
   136                           	callstack 0
   137   0012CE                     __initialization:
   138                           	callstack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (34 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142   0012CE  0EF2               	movlw	low __pidataCOMRAM
   143   0012D0  6EF6               	movwf	tblptrl,c
   144   0012D2  0E13               	movlw	high __pidataCOMRAM
   145   0012D4  6EF7               	movwf	tblptrh,c
   146   0012D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147   0012D8  6EF8               	movwf	tblptru,c
   148   0012DA  EE00  F001         	lfsr	0,__pdataCOMRAM
   149   0012DE  EE10 F022          	lfsr	1,34
   150   0012E2                     copy_data0:
   151   0012E2  0009               	tblrd		*+
   152   0012E4  CFF5 FFEE          	movff	tablat,postinc0
   153   0012E8  50E5               	movf	postdec1,w,c
   154   0012EA  50E1               	movf	fsr1l,w,c
   155   0012EC  E1FA               	bnz	copy_data0
   156                           
   157                           ; Clear objects allocated to COMRAM (7 bytes)
   158   0012EE  EE00  F02F         	lfsr	0,__pbssCOMRAM
   159   0012F2  0E07               	movlw	7
   160   0012F4                     clear_0:
   161   0012F4  6AEE               	clrf	postinc0,c
   162   0012F6  06E8               	decf	wreg,f,c
   163   0012F8  E1FD               	bnz	clear_0
   164   0012FA                     end_of_initialization:
   165                           	callstack 0
   166   0012FA                     __end_of__initialization:
   167                           	callstack 0
   168   0012FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169   0012FC  6EF8               	movwf	tblptru,c
   170   0012FE  0100               	movlb	0
   171   001300  EFFD  F008         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174   00002F                     __pbssCOMRAM:
   175                           	callstack 0
   176   00002F                     relay_turn_off@F2898:
   177                           	callstack 0
   178   00002F                     	ds	1
   179   000030                     relay_turn_on@F2893:
   180                           	callstack 0
   181   000030                     	ds	1
   182   000031                     relay_initialization@F2888:
   183                           	callstack 0
   184   000031                     	ds	1
   185   000032                     led_turn_toggle@F2910:
   186                           	callstack 0
   187   000032                     	ds	1
   188   000033                     led_turn_off@F2905:
   189                           	callstack 0
   190   000033                     	ds	1
   191   000034                     led_turn_on@F2900:
   192                           	callstack 0
   193   000034                     	ds	1
   194   000035                     led_initialize@F2895:
   195                           	callstack 0
   196   000035                     	ds	1
   197                           
   198                           	psect	dataCOMRAM
   199   000001                     __pdataCOMRAM:
   200                           	callstack 0
   201   000001                     _port_registers:
   202                           	callstack 0
   203   000001                     	ds	10
   204   00000B                     _lat_registers:
   205                           	callstack 0
   206   00000B                     	ds	10
   207   000015                     _tris_registers:
   208                           	callstack 0
   209   000015                     	ds	10
   210   00001F                     _motor2:
   211                           	callstack 0
   212   00001F                     	ds	2
   213   000021                     _motor1:
   214                           	callstack 0
   215   000021                     	ds	2
   216                           
   217                           	psect	cstackCOMRAM
   218   000023                     __pcstackCOMRAM:
   219                           	callstack 0
   220   000023                     gpio_pin_direction_intialize@_pin_config:
   221                           	callstack 0
   222   000023                     gpio_pin_write_logic@_pin_config:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x0
   226   000023                     	ds	1
   227   000024                     ??_gpio_pin_direction_intialize:
   228   000024                     gpio_pin_write_logic@logic:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x1
   232   000024                     	ds	1
   233   000025                     ??_gpio_pin_write_logic:
   234                           
   235                           ; 1 bytes @ 0x2
   236   000025                     	ds	4
   237   000029                     gpio_pin_direction_intialize@ret:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x6
   241   000029                     	ds	1
   242   00002A                     gpio_pin_initialize@_pin_config:
   243                           	callstack 0
   244   00002A                     motor_turn_right@motor:
   245                           	callstack 0
   246   00002A                     motor_turn_left@motor:
   247                           	callstack 0
   248   00002A                     motor_stop@motor:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x7
   252   00002A                     	ds	1
   253   00002B                     motor_initialize@motor:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x8
   257   00002B                     	ds	1
   258   00002C                     motor_initialize@ret:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x9
   262   00002C                     	ds	1
   263   00002D                     ??_main:
   264                           
   265                           ; 1 bytes @ 0xA
   266   00002D                     	ds	2
   267                           
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 16 in file "application.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  2  214[None  ] int 
   280 ;; Registers used:
   281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels required when called: 4
   293 ;; This function calls:
   294 ;;		_application_initialize
   295 ;;		_motor_stop
   296 ;;		_motor_turn_left
   297 ;;		_motor_turn_right
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text0
   304   0011FA                     __ptext0:
   305                           	callstack 0
   306   0011FA                     _main:
   307                           	callstack 27
   308   0011FA                     
   309                           ;application.c: 17:     application_initialize();
   310   0011FA  EC0A  F00A         	call	_application_initialize	;wreg free
   311   0011FE                     l215:
   312                           
   313                           ;application.c: 19:         motor_turn_right(&motor1);
   314   0011FE  0E21               	movlw	low _motor1
   315   001200  6E2A               	movwf	motor_turn_right@motor^0,c
   316   001202  ECB4  F009         	call	_motor_turn_right	;wreg free
   317                           
   318                           ;application.c: 20:         motor_turn_right(&motor2);
   319   001206  0E1F               	movlw	low _motor2
   320   001208  6E2A               	movwf	motor_turn_right@motor^0,c
   321   00120A  ECB4  F009         	call	_motor_turn_right	;wreg free
   322   00120E                     
   323                           ;application.c: 21:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   324   00120E  0E15               	movlw	21
   325   001210  6E2E               	movwf	(??_main+1)^0,c
   326   001212  0E4B               	movlw	75
   327   001214  6E2D               	movwf	??_main^0,c
   328   001216  0EBE               	movlw	190
   329   001218                     u757:
   330   001218  2EE8               	decfsz	wreg,f,c
   331   00121A  D7FE               	bra	u757
   332   00121C  2E2D               	decfsz	??_main^0,f,c
   333   00121E  D7FC               	bra	u757
   334   001220  2E2E               	decfsz	(??_main+1)^0,f,c
   335   001222  D7FA               	bra	u757
   336   001224  D000               	nop2	
   337   001226                     
   338                           ;application.c: 22:         motor_turn_left(&motor1);
   339   001226  0E21               	movlw	low _motor1
   340   001228  6E2A               	movwf	motor_turn_left@motor^0,c
   341   00122A  ECCB  F009         	call	_motor_turn_left	;wreg free
   342   00122E                     
   343                           ;application.c: 23:         motor_turn_left(&motor2);
   344   00122E  0E1F               	movlw	low _motor2
   345   001230  6E2A               	movwf	motor_turn_left@motor^0,c
   346   001232  ECCB  F009         	call	_motor_turn_left	;wreg free
   347   001236                     
   348                           ;application.c: 24:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   349   001236  0E15               	movlw	21
   350   001238  6E2E               	movwf	(??_main+1)^0,c
   351   00123A  0E4B               	movlw	75
   352   00123C  6E2D               	movwf	??_main^0,c
   353   00123E  0EBE               	movlw	190
   354   001240                     u767:
   355   001240  2EE8               	decfsz	wreg,f,c
   356   001242  D7FE               	bra	u767
   357   001244  2E2D               	decfsz	??_main^0,f,c
   358   001246  D7FC               	bra	u767
   359   001248  2E2E               	decfsz	(??_main+1)^0,f,c
   360   00124A  D7FA               	bra	u767
   361   00124C  D000               	nop2	
   362                           
   363                           ;application.c: 25:         motor_turn_right(&motor1);
   364   00124E  0E21               	movlw	low _motor1
   365   001250  6E2A               	movwf	motor_turn_right@motor^0,c
   366   001252  ECB4  F009         	call	_motor_turn_right	;wreg free
   367                           
   368                           ;application.c: 26:         motor_turn_left(&motor2);
   369   001256  0E1F               	movlw	low _motor2
   370   001258  6E2A               	movwf	motor_turn_left@motor^0,c
   371   00125A  ECCB  F009         	call	_motor_turn_left	;wreg free
   372   00125E                     
   373                           ;application.c: 27:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   374   00125E  0E15               	movlw	21
   375   001260  6E2E               	movwf	(??_main+1)^0,c
   376   001262  0E4B               	movlw	75
   377   001264  6E2D               	movwf	??_main^0,c
   378   001266  0EBE               	movlw	190
   379   001268                     u777:
   380   001268  2EE8               	decfsz	wreg,f,c
   381   00126A  D7FE               	bra	u777
   382   00126C  2E2D               	decfsz	??_main^0,f,c
   383   00126E  D7FC               	bra	u777
   384   001270  2E2E               	decfsz	(??_main+1)^0,f,c
   385   001272  D7FA               	bra	u777
   386   001274  D000               	nop2	
   387   001276                     
   388                           ;application.c: 28:         motor_turn_left(&motor1);
   389   001276  0E21               	movlw	low _motor1
   390   001278  6E2A               	movwf	motor_turn_left@motor^0,c
   391   00127A  ECCB  F009         	call	_motor_turn_left	;wreg free
   392   00127E                     
   393                           ;application.c: 29:         motor_turn_right(&motor2);
   394   00127E  0E1F               	movlw	low _motor2
   395   001280  6E2A               	movwf	motor_turn_right@motor^0,c
   396   001282  ECB4  F009         	call	_motor_turn_right	;wreg free
   397   001286                     
   398                           ;application.c: 30:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   399   001286  0E15               	movlw	21
   400   001288  6E2E               	movwf	(??_main+1)^0,c
   401   00128A  0E4B               	movlw	75
   402   00128C  6E2D               	movwf	??_main^0,c
   403   00128E  0EBE               	movlw	190
   404   001290                     u787:
   405   001290  2EE8               	decfsz	wreg,f,c
   406   001292  D7FE               	bra	u787
   407   001294  2E2D               	decfsz	??_main^0,f,c
   408   001296  D7FC               	bra	u787
   409   001298  2E2E               	decfsz	(??_main+1)^0,f,c
   410   00129A  D7FA               	bra	u787
   411   00129C  D000               	nop2	
   412                           
   413                           ;application.c: 31:         motor_stop(&motor1);
   414   00129E  0E21               	movlw	low _motor1
   415   0012A0  6E2A               	movwf	motor_stop@motor^0,c
   416   0012A2  ECE2  F009         	call	_motor_stop	;wreg free
   417                           
   418                           ;application.c: 32:         motor_stop(&motor2);
   419   0012A6  0E1F               	movlw	low _motor2
   420   0012A8  6E2A               	movwf	motor_stop@motor^0,c
   421   0012AA  ECE2  F009         	call	_motor_stop	;wreg free
   422   0012AE                     
   423                           ;application.c: 33:         _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   424   0012AE  0E15               	movlw	21
   425   0012B0  6E2E               	movwf	(??_main+1)^0,c
   426   0012B2  0E4B               	movlw	75
   427   0012B4  6E2D               	movwf	??_main^0,c
   428   0012B6  0EBE               	movlw	190
   429   0012B8                     u797:
   430   0012B8  2EE8               	decfsz	wreg,f,c
   431   0012BA  D7FE               	bra	u797
   432   0012BC  2E2D               	decfsz	??_main^0,f,c
   433   0012BE  D7FC               	bra	u797
   434   0012C0  2E2E               	decfsz	(??_main+1)^0,f,c
   435   0012C2  D7FA               	bra	u797
   436   0012C4  D000               	nop2	
   437   0012C6  EFFF  F008         	goto	l215
   438   0012CA  EF00  F000         	goto	start
   439   0012CE                     __end_of_main:
   440                           	callstack 0
   441                           
   442 ;; *************** function _motor_turn_right *****************
   443 ;; Defined at:
   444 ;;		line 19 in file "ECU_Layer/Motor_driver/ecu_dc_motor.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;  motor           1    7[COMRAM] PTR const struct .
   447 ;;		 -> motor2(2), motor1(2), 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  ret             1    0        unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      unsigned char 
   452 ;; Registers used:
   453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   459 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;Total ram usage:        1 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; Hardware stack levels required when called: 1
   466 ;; This function calls:
   467 ;;		_gpio_pin_write_logic
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text1
   474   001368                     __ptext1:
   475                           	callstack 0
   476   001368                     _motor_turn_right:
   477                           	callstack 29
   478   001368                     
   479                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 21:     if(motor == ((void*)0)){
   480   001368  502A               	movf	motor_turn_right@motor^0,w,c
   481   00136A  A4D8               	btfss	status,2,c
   482   00136C  EFBA  F009         	goto	u591
   483   001370  EFBC  F009         	goto	u590
   484   001374                     u591:
   485   001374  EFBE  F009         	goto	l1317
   486   001378                     u590:
   487   001378                     
   488                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 23:     }
   489   001378  EFCA  F009         	goto	l235
   490   00137C                     l1317:
   491                           
   492                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 25:         gpio_pin_write_logic(&(motor->dc_mot
      +                          or_pin[0]),GPIO_HIGH);
   493   00137C  C02A  F023         	movff	motor_turn_right@motor,gpio_pin_write_logic@_pin_config
   494   001380  0E01               	movlw	1
   495   001382  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   496   001384  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   497                           
   498                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 26:         gpio_pin_write_logic(&(motor->dc_mot
      +                          or_pin[1]),GPIO_LOW);
   499   001388  282A               	incf	motor_turn_right@motor^0,w,c
   500   00138A  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   501   00138C  0E00               	movlw	0
   502   00138E  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   503   001390  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   504   001394                     l235:
   505   001394  0012               	return		;funcret
   506   001396                     __end_of_motor_turn_right:
   507                           	callstack 0
   508                           
   509 ;; *************** function _motor_turn_left *****************
   510 ;; Defined at:
   511 ;;		line 30 in file "ECU_Layer/Motor_driver/ecu_dc_motor.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  motor           1    7[COMRAM] PTR const struct .
   514 ;;		 -> motor2(2), motor1(2), 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  ret             1    0        unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      unsigned char 
   519 ;; Registers used:
   520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;Total ram usage:        1 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 1
   533 ;; This function calls:
   534 ;;		_gpio_pin_write_logic
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text2
   541   001396                     __ptext2:
   542                           	callstack 0
   543   001396                     _motor_turn_left:
   544                           	callstack 29
   545   001396                     
   546                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 32:     if(motor == ((void*)0)){
   547   001396  502A               	movf	motor_turn_left@motor^0,w,c
   548   001398  A4D8               	btfss	status,2,c
   549   00139A  EFD1  F009         	goto	u601
   550   00139E  EFD3  F009         	goto	u600
   551   0013A2                     u601:
   552   0013A2  EFD5  F009         	goto	l1325
   553   0013A6                     u600:
   554   0013A6                     
   555                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 34:     }
   556   0013A6  EFE1  F009         	goto	l240
   557   0013AA                     l1325:
   558                           
   559                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 36:         gpio_pin_write_logic(&(motor->dc_mot
      +                          or_pin[1]),GPIO_HIGH);
   560   0013AA  282A               	incf	motor_turn_left@motor^0,w,c
   561   0013AC  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   562   0013AE  0E01               	movlw	1
   563   0013B0  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   564   0013B2  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   565                           
   566                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 37:         gpio_pin_write_logic(&(motor->dc_mot
      +                          or_pin[0]),GPIO_LOW);
   567   0013B6  C02A  F023         	movff	motor_turn_left@motor,gpio_pin_write_logic@_pin_config
   568   0013BA  0E00               	movlw	0
   569   0013BC  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   570   0013BE  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   571   0013C2                     l240:
   572   0013C2  0012               	return		;funcret
   573   0013C4                     __end_of_motor_turn_left:
   574                           	callstack 0
   575                           
   576 ;; *************** function _motor_stop *****************
   577 ;; Defined at:
   578 ;;		line 41 in file "ECU_Layer/Motor_driver/ecu_dc_motor.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  motor           1    7[COMRAM] PTR const struct .
   581 ;;		 -> motor2(2), motor1(2), 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  ret             1    0        unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      unsigned char 
   586 ;; Registers used:
   587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   593 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;Total ram usage:        1 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 1
   600 ;; This function calls:
   601 ;;		_gpio_pin_write_logic
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text3
   608   0013C4                     __ptext3:
   609                           	callstack 0
   610   0013C4                     _motor_stop:
   611                           	callstack 29
   612   0013C4                     
   613                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 43:     if(motor == ((void*)0)){
   614   0013C4  502A               	movf	motor_stop@motor^0,w,c
   615   0013C6  A4D8               	btfss	status,2,c
   616   0013C8  EFE8  F009         	goto	u611
   617   0013CC  EFEA  F009         	goto	u610
   618   0013D0                     u611:
   619   0013D0  EFEC  F009         	goto	l1333
   620   0013D4                     u610:
   621   0013D4                     
   622                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 45:     }
   623   0013D4  EFF8  F009         	goto	l245
   624   0013D8                     l1333:
   625                           
   626                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 47:         gpio_pin_write_logic(&(motor->dc_mot
      +                          or_pin[1]),GPIO_LOW);
   627   0013D8  282A               	incf	motor_stop@motor^0,w,c
   628   0013DA  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   629   0013DC  0E00               	movlw	0
   630   0013DE  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   631   0013E0  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   632                           
   633                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 48:         gpio_pin_write_logic(&(motor->dc_mot
      +                          or_pin[0]),GPIO_LOW);
   634   0013E4  C02A  F023         	movff	motor_stop@motor,gpio_pin_write_logic@_pin_config
   635   0013E8  0E00               	movlw	0
   636   0013EA  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   637   0013EC  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   638   0013F0                     l245:
   639   0013F0  0012               	return		;funcret
   640   0013F2                     __end_of_motor_stop:
   641                           	callstack 0
   642                           
   643 ;; *************** function _application_initialize *****************
   644 ;; Defined at:
   645 ;;		line 37 in file "application.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;Total ram usage:        0 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; Hardware stack levels required when called: 3
   666 ;; This function calls:
   667 ;;		_motor_initialize
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text4
   674   001414                     __ptext4:
   675                           	callstack 0
   676   001414                     _application_initialize:
   677                           	callstack 27
   678   001414                     
   679                           ;application.c: 38:     ret = motor_initialize(&motor1);
   680   001414  0E21               	movlw	low _motor1
   681   001416  6E2B               	movwf	motor_initialize@motor^0,c
   682   001418  EC9C  F009         	call	_motor_initialize	;wreg free
   683   00141C  6E36               	movwf	_ret^0,c
   684                           
   685                           ;application.c: 39:     ret = motor_initialize(&motor2);
   686   00141E  0E1F               	movlw	low _motor2
   687   001420  6E2B               	movwf	motor_initialize@motor^0,c
   688   001422  EC9C  F009         	call	_motor_initialize	;wreg free
   689   001426  6E36               	movwf	_ret^0,c
   690   001428  0012               	return		;funcret
   691   00142A                     __end_of_application_initialize:
   692                           	callstack 0
   693                           
   694 ;; *************** function _motor_initialize *****************
   695 ;; Defined at:
   696 ;;		line 8 in file "ECU_Layer/Motor_driver/ecu_dc_motor.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  motor           1    8[COMRAM] PTR const struct .
   699 ;;		 -> motor2(2), motor1(2), 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  ret             1    9[COMRAM] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      unsigned char 
   704 ;; Registers used:
   705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        2 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 2
   718 ;; This function calls:
   719 ;;		_gpio_pin_initialize
   720 ;; This function is called by:
   721 ;;		_application_initialize
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text5
   726   001338                     __ptext5:
   727                           	callstack 0
   728   001338                     _motor_initialize:
   729                           	callstack 27
   730   001338                     
   731                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 9:     std_ReturnType ret = (std_ReturnType)0x01
      +                          ;
   732   001338  0E01               	movlw	1
   733   00133A  6E2C               	movwf	motor_initialize@ret^0,c
   734                           
   735                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 10:     if(motor == ((void*)0)){
   736   00133C  502B               	movf	motor_initialize@motor^0,w,c
   737   00133E  A4D8               	btfss	status,2,c
   738   001340  EFA4  F009         	goto	u581
   739   001344  EFA6  F009         	goto	u580
   740   001348                     u581:
   741   001348  EFAA  F009         	goto	l1305
   742   00134C                     u580:
   743   00134C                     
   744                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 11:         ret = (std_ReturnType)0x00;
   745   00134C  0E00               	movlw	0
   746   00134E  6E2C               	movwf	motor_initialize@ret^0,c
   747                           
   748                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 12:     }
   749   001350  EFB2  F009         	goto	l1307
   750   001354                     l1305:
   751                           
   752                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 14:         gpio_pin_initialize(&(motor->dc_moto
      +                          r_pin[0]));
   753   001354  C02B  F02A         	movff	motor_initialize@motor,gpio_pin_initialize@_pin_config
   754   001358  EC82  F009         	call	_gpio_pin_initialize	;wreg free
   755                           
   756                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 15:         gpio_pin_initialize(&(motor->dc_moto
      +                          r_pin[1]));
   757   00135C  282B               	incf	motor_initialize@motor^0,w,c
   758   00135E  6E2A               	movwf	gpio_pin_initialize@_pin_config^0,c
   759   001360  EC82  F009         	call	_gpio_pin_initialize	;wreg free
   760   001364                     l1307:
   761                           
   762                           ;ECU_Layer/Motor_driver/ecu_dc_motor.c: 17:     return ret;
   763   001364  502C               	movf	motor_initialize@ret^0,w,c
   764   001366  0012               	return		;funcret
   765   001368                     __end_of_motor_initialize:
   766                           	callstack 0
   767                           
   768 ;; *************** function _gpio_pin_initialize *****************
   769 ;; Defined at:
   770 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  _pin_config     1    7[COMRAM] PTR const struct .
   773 ;;		 -> motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), motor1(2), 
   774 ;;		 -> relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  ret             1    0        unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      unsigned char 
   779 ;; Registers used:
   780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   786 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;Total ram usage:        1 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 1
   793 ;; This function calls:
   794 ;;		_gpio_pin_direction_intialize
   795 ;;		_gpio_pin_write_logic
   796 ;; This function is called by:
   797 ;;		_motor_initialize
   798 ;;		_led_initialize
   799 ;;		_relay_initialization
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text6
   804   001304                     __ptext6:
   805                           	callstack 0
   806   001304                     _gpio_pin_initialize:
   807                           	callstack 27
   808   001304                     
   809                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config ){
   810   001304  502A               	movf	gpio_pin_initialize@_pin_config^0,w,c
   811   001306  A4D8               	btfss	status,2,c
   812   001308  EF88  F009         	goto	u571
   813   00130C  EF8A  F009         	goto	u570
   814   001310                     u571:
   815   001310  EF8C  F009         	goto	l1297
   816   001314                     u570:
   817   001314                     
   818                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:     }
   819   001314  EF9B  F009         	goto	l163
   820   001318                     l1297:
   821                           
   822                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:         gpio_pin_direction_intialize(_pin_config);
   823   001318  C02A  F023         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   824   00131C  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   825                           
   826                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:         gpio_pin_write_logic(_pin_config,_pin_config->
      +                          logic);
   827   001320  C02A  F023         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
   828   001324  502A               	movf	gpio_pin_initialize@_pin_config^0,w,c
   829   001326  6ED9               	movwf	fsr2l,c
   830   001328  6ADA               	clrf	fsr2h,c
   831   00132A  0E00               	movlw	0
   832   00132C  BEDF               	btfsc	indf2,7,c
   833   00132E  0E01               	movlw	1
   834   001330  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   835   001332  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   836   001336                     l163:
   837   001336  0012               	return		;funcret
   838   001338                     __end_of_gpio_pin_initialize:
   839                           	callstack 0
   840                           
   841 ;; *************** function _gpio_pin_write_logic *****************
   842 ;; Defined at:
   843 ;;		line 68 in file "MCAL_Layer/GPIO/hal_gpio.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   846 ;;		 -> motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), motor1(2), 
   847 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialization@pin_obj(1), led_turn_off@pin_obj(1), 
   848 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   849 ;;  logic           1    1[COMRAM] enum E2814
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  ret             1    0        unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      unsigned char 
   854 ;; Registers used:
   855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;Total ram usage:        7 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_gpio_pin_initialize
   871 ;;		_motor_turn_right
   872 ;;		_motor_turn_left
   873 ;;		_motor_stop
   874 ;;		_led_turn_on
   875 ;;		_led_turn_off
   876 ;;		_relay_turn_on
   877 ;;		_relay_turn_off
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text7
   882   001114                     __ptext7:
   883                           	callstack 0
   884   001114                     _gpio_pin_write_logic:
   885                           	callstack 29
   886   001114                     
   887                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:     if(((void*)0) == _pin_config){
   888   001114  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   889   001116  A4D8               	btfss	status,2,c
   890   001118  EF90  F008         	goto	u541
   891   00111C  EF92  F008         	goto	u540
   892   001120                     u541:
   893   001120  EFE7  F008         	goto	l1287
   894   001124                     u540:
   895   001124                     
   896                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     }
   897   001124  EFFC  F008         	goto	l146
   898   001128                     l1281:
   899                           
   900                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
   901   001128  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   902   00112A  6ED9               	movwf	fsr2l,c
   903   00112C  6ADA               	clrf	fsr2h,c
   904   00112E  30DF               	rrcf	223,w,c
   905   001130  32E8               	rrcf	wreg,f,c
   906   001132  32E8               	rrcf	wreg,f,c
   907   001134  0B07               	andlw	7
   908   001136  6E25               	movwf	??_gpio_pin_write_logic^0,c
   909   001138  0E01               	movlw	1
   910   00113A  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   911   00113C  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   912   00113E  EFA3  F008         	goto	u554
   913   001142                     u555:
   914   001142  90D8               	bcf	status,0,c
   915   001144  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   916   001146                     u554:
   917   001146  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
   918   001148  EFA1  F008         	goto	u555
   919   00114C  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   920   00114E  0AFF               	xorlw	255
   921   001150  6E27               	movwf	(??_gpio_pin_write_logic+2)^0,c
   922   001152  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   923   001154  6ED9               	movwf	fsr2l,c
   924   001156  6ADA               	clrf	fsr2h,c
   925   001158  50DF               	movf	223,w,c
   926   00115A  0B07               	andlw	7
   927   00115C  0D02               	mullw	2
   928   00115E  50F3               	movf	243,w,c
   929   001160  0F0B               	addlw	low _lat_registers
   930   001162  6ED9               	movwf	fsr2l,c
   931   001164  6ADA               	clrf	fsr2h,c
   932   001166  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+3
   933   00116A  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+4
   934   00116E  C028  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   935   001172  C029  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   936   001176  5027               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   937   001178  16DF               	andwf	indf2,f,c
   938                           
   939                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 break;
   940   00117A  EFFC  F008         	goto	l146
   941   00117E                     l1283:
   942                           
   943                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
   944   00117E  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   945   001180  6ED9               	movwf	fsr2l,c
   946   001182  6ADA               	clrf	fsr2h,c
   947   001184  30DF               	rrcf	223,w,c
   948   001186  32E8               	rrcf	wreg,f,c
   949   001188  32E8               	rrcf	wreg,f,c
   950   00118A  0B07               	andlw	7
   951   00118C  6E25               	movwf	??_gpio_pin_write_logic^0,c
   952   00118E  0E01               	movlw	1
   953   001190  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   954   001192  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   955   001194  EFCE  F008         	goto	u564
   956   001198                     u565:
   957   001198  90D8               	bcf	status,0,c
   958   00119A  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   959   00119C                     u564:
   960   00119C  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
   961   00119E  EFCC  F008         	goto	u565
   962   0011A2  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   963   0011A4  6ED9               	movwf	fsr2l,c
   964   0011A6  6ADA               	clrf	fsr2h,c
   965   0011A8  50DF               	movf	223,w,c
   966   0011AA  0B07               	andlw	7
   967   0011AC  0D02               	mullw	2
   968   0011AE  50F3               	movf	243,w,c
   969   0011B0  0F0B               	addlw	low _lat_registers
   970   0011B2  6ED9               	movwf	fsr2l,c
   971   0011B4  6ADA               	clrf	fsr2h,c
   972   0011B6  CFDE F027          	movff	postinc2,??_gpio_pin_write_logic+2
   973   0011BA  CFDD F028          	movff	postdec2,??_gpio_pin_write_logic+3
   974   0011BE  C027  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   975   0011C2  C028  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   976   0011C6  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   977   0011C8  12DF               	iorwf	indf2,f,c
   978                           
   979                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 break;
   980   0011CA  EFFC  F008         	goto	l146
   981   0011CE                     l1287:
   982   0011CE  5024               	movf	gpio_pin_write_logic@logic^0,w,c
   983   0011D0  6E25               	movwf	??_gpio_pin_write_logic^0,c
   984   0011D2  6A26               	clrf	(??_gpio_pin_write_logic+1)^0,c
   985                           
   986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 1, Range of values is 0 to 0
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ;	Chosen strategy is simple_byte
   993   0011D4  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   994   0011D6  0A00               	xorlw	0	; case 0
   995   0011D8  B4D8               	btfsc	status,2,c
   996   0011DA  EFF1  F008         	goto	l1467
   997   0011DE  EFFC  F008         	goto	l146
   998   0011E2                     l1467:
   999                           
  1000                           ; Switch size 1, requested type "simple"
  1001                           ; Number of cases is 2, Range of values is 0 to 1
  1002                           ; switch strategies available:
  1003                           ; Name         Instructions Cycles
  1004                           ; simple_byte            7     4 (average)
  1005                           ;	Chosen strategy is simple_byte
  1006   0011E2  5025               	movf	??_gpio_pin_write_logic^0,w,c
  1007   0011E4  0A00               	xorlw	0	; case 0
  1008   0011E6  B4D8               	btfsc	status,2,c
  1009   0011E8  EF94  F008         	goto	l1281
  1010   0011EC  0A01               	xorlw	1	; case 1
  1011   0011EE  B4D8               	btfsc	status,2,c
  1012   0011F0  EFBF  F008         	goto	l1283
  1013   0011F4  EFFC  F008         	goto	l146
  1014   0011F8                     l146:
  1015   0011F8  0012               	return		;funcret
  1016   0011FA                     __end_of_gpio_pin_write_logic:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _gpio_pin_direction_intialize *****************
  1020 ;; Defined at:
  1021 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1024 ;;		 -> motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), motor1(2), 
  1025 ;;		 -> relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  ret             1    6[COMRAM] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      unsigned char 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;Total ram usage:        7 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_gpio_pin_initialize
  1047 ;;		_button_initialize
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text8
  1052   001002                     __ptext8:
  1053                           	callstack 0
  1054   001002                     _gpio_pin_direction_intialize:
  1055                           	callstack 27
  1056   001002                     
  1057                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     std_ReturnType ret = (std_ReturnType)0x01;
  1058   001002  0E01               	movlw	1
  1059   001004  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
  1060                           
  1061                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 - 1){
  1062   001006  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1063   001008  B4D8               	btfsc	status,2,c
  1064   00100A  EF09  F008         	goto	u491
  1065   00100E  EF0B  F008         	goto	u490
  1066   001012                     u491:
  1067   001012  EF1B  F008         	goto	l1263
  1068   001016                     u490:
  1069   001016  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1070   001018  6ED9               	movwf	fsr2l,c
  1071   00101A  6ADA               	clrf	fsr2h,c
  1072   00101C  30DF               	rrcf	223,w,c
  1073   00101E  32E8               	rrcf	wreg,f,c
  1074   001020  32E8               	rrcf	wreg,f,c
  1075   001022  0B07               	andlw	7
  1076   001024  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1077   001026  0E07               	movlw	7
  1078   001028  6424               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1079   00102A  EF19  F008         	goto	u501
  1080   00102E  EF1B  F008         	goto	u500
  1081   001032                     u501:
  1082   001032  EF72  F008         	goto	l1271
  1083   001036                     u500:
  1084   001036                     l1263:
  1085                           
  1086                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:         ret = (std_ReturnType)0x00;
  1087   001036  0E00               	movlw	0
  1088   001038  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
  1089                           
  1090                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     }
  1091   00103A  EF88  F008         	goto	l1273
  1092   00103E                     l1265:
  1093                           
  1094                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1<<_pin_config->pin));
  1095   00103E  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1096   001040  6ED9               	movwf	fsr2l,c
  1097   001042  6ADA               	clrf	fsr2h,c
  1098   001044  30DF               	rrcf	223,w,c
  1099   001046  32E8               	rrcf	wreg,f,c
  1100   001048  32E8               	rrcf	wreg,f,c
  1101   00104A  0B07               	andlw	7
  1102   00104C  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1103   00104E  0E01               	movlw	1
  1104   001050  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1105   001052  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
  1106   001054  EF2E  F008         	goto	u514
  1107   001058                     u515:
  1108   001058  90D8               	bcf	status,0,c
  1109   00105A  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1110   00105C                     u514:
  1111   00105C  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1112   00105E  EF2C  F008         	goto	u515
  1113   001062  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1114   001064  0AFF               	xorlw	255
  1115   001066  6E26               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1116   001068  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1117   00106A  6ED9               	movwf	fsr2l,c
  1118   00106C  6ADA               	clrf	fsr2h,c
  1119   00106E  50DF               	movf	223,w,c
  1120   001070  0B07               	andlw	7
  1121   001072  0D02               	mullw	2
  1122   001074  50F3               	movf	243,w,c
  1123   001076  0F15               	addlw	low _tris_registers
  1124   001078  6ED9               	movwf	fsr2l,c
  1125   00107A  6ADA               	clrf	fsr2h,c
  1126   00107C  CFDE F027          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1127   001080  CFDD F028          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1128   001084  C027  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1129   001088  C028  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1130   00108C  5026               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1131   00108E  16DF               	andwf	indf2,f,c
  1132                           
  1133                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:             break;
  1134   001090  EF88  F008         	goto	l1273
  1135   001094                     l1267:
  1136                           
  1137                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  1138   001094  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1139   001096  6ED9               	movwf	fsr2l,c
  1140   001098  6ADA               	clrf	fsr2h,c
  1141   00109A  30DF               	rrcf	223,w,c
  1142   00109C  32E8               	rrcf	wreg,f,c
  1143   00109E  32E8               	rrcf	wreg,f,c
  1144   0010A0  0B07               	andlw	7
  1145   0010A2  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
  1146   0010A4  0E01               	movlw	1
  1147   0010A6  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1148   0010A8  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
  1149   0010AA  EF59  F008         	goto	u524
  1150   0010AE                     u525:
  1151   0010AE  90D8               	bcf	status,0,c
  1152   0010B0  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1153   0010B2                     u524:
  1154   0010B2  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1155   0010B4  EF57  F008         	goto	u525
  1156   0010B8  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1157   0010BA  6ED9               	movwf	fsr2l,c
  1158   0010BC  6ADA               	clrf	fsr2h,c
  1159   0010BE  50DF               	movf	223,w,c
  1160   0010C0  0B07               	andlw	7
  1161   0010C2  0D02               	mullw	2
  1162   0010C4  50F3               	movf	243,w,c
  1163   0010C6  0F15               	addlw	low _tris_registers
  1164   0010C8  6ED9               	movwf	fsr2l,c
  1165   0010CA  6ADA               	clrf	fsr2h,c
  1166   0010CC  CFDE F026          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1167   0010D0  CFDD F027          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1168   0010D4  C026  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1169   0010D8  C027  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1170   0010DC  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1171   0010DE  12DF               	iorwf	indf2,f,c
  1172                           
  1173                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             break;
  1174   0010E0  EF88  F008         	goto	l1273
  1175   0010E4                     l1271:
  1176   0010E4  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1177   0010E6  6ED9               	movwf	fsr2l,c
  1178   0010E8  6ADA               	clrf	fsr2h,c
  1179   0010EA  BCDF               	btfsc	indf2,6,c
  1180   0010EC  EF7A  F008         	goto	u531
  1181   0010F0  EF7D  F008         	goto	u530
  1182   0010F4                     u531:
  1183   0010F4  0E01               	movlw	1
  1184   0010F6  EF7E  F008         	goto	u536
  1185   0010FA                     u530:
  1186   0010FA  0E00               	movlw	0
  1187   0010FC                     u536:
  1188                           
  1189                           ; Switch size 1, requested type "simple"
  1190                           ; Number of cases is 2, Range of values is 0 to 1
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte            7     4 (average)
  1194                           ;	Chosen strategy is simple_byte
  1195   0010FC  0A00               	xorlw	0	; case 0
  1196   0010FE  B4D8               	btfsc	status,2,c
  1197   001100  EF1F  F008         	goto	l1265
  1198   001104  0A01               	xorlw	1	; case 1
  1199   001106  B4D8               	btfsc	status,2,c
  1200   001108  EF4A  F008         	goto	l1267
  1201   00110C  EF1B  F008         	goto	l1263
  1202   001110                     l1273:
  1203                           
  1204                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  1205   001110  5029               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1206   001112  0012               	return		;funcret
  1207   001114                     __end_of_gpio_pin_direction_intialize:
  1208                           	callstack 0
  1209                           
  1210                           	psect	smallconst
  1211   001000                     __psmallconst:
  1212                           	callstack 0
  1213   001000  00                 	db	0
  1214   001001  00                 	db	0	; dummy byte at the end
  1215   000000                     
  1216                           	psect	rparam
  1217   000000                     
  1218                           	psect	config
  1219                           
  1220                           ; Padding undefined space
  1221   300000                     	org	3145728
  1222   300000  FF                 	db	255
  1223                           
  1224                           ;Config register CONFIG1H @ 0x300001
  1225                           ;	Oscillator Selection bits
  1226                           ;	OSC = HS, HS oscillator
  1227                           ;	Fail-Safe Clock Monitor Enable bit
  1228                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1229                           ;	Internal/External Oscillator Switchover bit
  1230                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1231   300001                     	org	3145729
  1232   300001  02                 	db	2
  1233                           
  1234                           ;Config register CONFIG2L @ 0x300002
  1235                           ;	Power-up Timer Enable bit
  1236                           ;	PWRT = OFF, PWRT disabled
  1237                           ;	Brown-out Reset Enable bits
  1238                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1239                           ;	Brown Out Reset Voltage bits
  1240                           ;	BORV = 1, 
  1241   300002                     	org	3145730
  1242   300002  09                 	db	9
  1243                           
  1244                           ;Config register CONFIG2H @ 0x300003
  1245                           ;	Watchdog Timer Enable bit
  1246                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1247                           ;	Watchdog Timer Postscale Select bits
  1248                           ;	WDTPS = 32768, 1:32768
  1249   300003                     	org	3145731
  1250   300003  1E                 	db	30
  1251                           
  1252                           ; Padding undefined space
  1253   300004                     	org	3145732
  1254   300004  FF                 	db	255
  1255                           
  1256                           ;Config register CONFIG3H @ 0x300005
  1257                           ;	CCP2 MUX bit
  1258                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1259                           ;	PORTB A/D Enable bit
  1260                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1261                           ;	Low-Power Timer1 Oscillator Enable bit
  1262                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1263                           ;	MCLR Pin Enable bit
  1264                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1265   300005                     	org	3145733
  1266   300005  81                 	db	129
  1267                           
  1268                           ;Config register CONFIG4L @ 0x300006
  1269                           ;	Stack Full/Underflow Reset Enable bit
  1270                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1271                           ;	Single-Supply ICSP Enable bit
  1272                           ;	LVP = OFF, Single-Supply ICSP disabled
  1273                           ;	Extended Instruction Set Enable bit
  1274                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1275                           ;	Background Debugger Enable bit
  1276                           ;	DEBUG = 0x1, unprogrammed default
  1277   300006                     	org	3145734
  1278   300006  81                 	db	129
  1279                           
  1280                           ; Padding undefined space
  1281   300007                     	org	3145735
  1282   300007  FF                 	db	255
  1283                           
  1284                           ;Config register CONFIG5L @ 0x300008
  1285                           ;	Code Protection bit
  1286                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1287                           ;	Code Protection bit
  1288                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1289                           ;	Code Protection bit
  1290                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1291                           ;	Code Protection bit
  1292                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1293   300008                     	org	3145736
  1294   300008  0F                 	db	15
  1295                           
  1296                           ;Config register CONFIG5H @ 0x300009
  1297                           ;	Boot Block Code Protection bit
  1298                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1299                           ;	Data EEPROM Code Protection bit
  1300                           ;	CPD = OFF, Data EEPROM not code-protected
  1301   300009                     	org	3145737
  1302   300009  C0                 	db	192
  1303                           
  1304                           ;Config register CONFIG6L @ 0x30000A
  1305                           ;	Write Protection bit
  1306                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1307                           ;	Write Protection bit
  1308                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1309                           ;	Write Protection bit
  1310                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1311                           ;	Write Protection bit
  1312                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1313   30000A                     	org	3145738
  1314   30000A  0F                 	db	15
  1315                           
  1316                           ;Config register CONFIG6H @ 0x30000B
  1317                           ;	Configuration Register Write Protection bit
  1318                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1319                           ;	Boot Block Write Protection bit
  1320                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1321                           ;	Data EEPROM Write Protection bit
  1322                           ;	WRTD = OFF, Data EEPROM not write-protected
  1323   30000B                     	org	3145739
  1324   30000B  E0                 	db	224
  1325                           
  1326                           ;Config register CONFIG7L @ 0x30000C
  1327                           ;	Table Read Protection bit
  1328                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1329                           ;	Table Read Protection bit
  1330                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1331                           ;	Table Read Protection bit
  1332                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1333                           ;	Table Read Protection bit
  1334                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1335   30000C                     	org	3145740
  1336   30000C  0F                 	db	15
  1337                           
  1338                           ;Config register CONFIG7H @ 0x30000D
  1339                           ;	Boot Block Table Read Protection bit
  1340                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1341   30000D                     	org	3145741
  1342   30000D  40                 	db	64
  1343                           tosu	equ	0xFFF
  1344                           tosh	equ	0xFFE
  1345                           tosl	equ	0xFFD
  1346                           stkptr	equ	0xFFC
  1347                           pclatu	equ	0xFFB
  1348                           pclath	equ	0xFFA
  1349                           pcl	equ	0xFF9
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           prodh	equ	0xFF4
  1355                           prodl	equ	0xFF3
  1356                           indf0	equ	0xFEF
  1357                           postinc0	equ	0xFEE
  1358                           postdec0	equ	0xFED
  1359                           preinc0	equ	0xFEC
  1360                           plusw0	equ	0xFEB
  1361                           fsr0h	equ	0xFEA
  1362                           fsr0l	equ	0xFE9
  1363                           wreg	equ	0xFE8
  1364                           indf1	equ	0xFE7
  1365                           postinc1	equ	0xFE6
  1366                           postdec1	equ	0xFE5
  1367                           preinc1	equ	0xFE4
  1368                           plusw1	equ	0xFE3
  1369                           fsr1h	equ	0xFE2
  1370                           fsr1l	equ	0xFE1
  1371                           bsr	equ	0xFE0
  1372                           indf2	equ	0xFDF
  1373                           postinc2	equ	0xFDE
  1374                           postdec2	equ	0xFDD
  1375                           preinc2	equ	0xFDC
  1376                           plusw2	equ	0xFDB
  1377                           fsr2h	equ	0xFDA
  1378                           fsr2l	equ	0xFD9
  1379                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> led_initialize@pin_obj(COMRAM[1]), motor1(COMRAM[2]), motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), 
		 -> motor2$dc_motor_pin(COMRAM[2]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> led_initialize@pin_obj(COMRAM[1]), motor1(COMRAM[2]), motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), 
		 -> motor2$dc_motor_pin(COMRAM[2]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), motor1(COMRAM[2]), 
		 -> motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), motor2$dc_motor_pin(COMRAM[2]), relay_initialization@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    motor_initialize@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    motor_stop@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    motor_turn_left@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    motor_turn_right@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _motor_stop->_gpio_pin_write_logic
    _application_initialize->_motor_initialize
    _motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_direction_intialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9203
                                             10 COMRAM     2     2      0
             _application_initialize
                         _motor_stop
                    _motor_turn_left
                   _motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _motor_turn_right                                     2     1      1    2190
                                              7 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_left                                      2     1      1    2190
                                              7 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_stop                                           2     1      1    2038
                                              7 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    2785
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (2) _motor_initialize                                     2     1      1    2785
                                              8 COMRAM     2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  2     1      1    2543
                                              7 COMRAM     1     0      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1812
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _motor_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
   _motor_stop
     _gpio_pin_write_logic
   _motor_turn_left
     _gpio_pin_write_logic
   _motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      36       1       42.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      39        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jun 26 08:55:12 2024

                                    l221 1428                                      l230 1366  
                                    l215 11FE                                      l240 13C2  
                                    l129 1112                                      l146 11F8  
                                    l163 1336                                      l235 1394  
                                    l245 13F0                                      u500 1036  
                                    u501 1032                                      u600 13A6  
                                    u601 13A2                                      u530 10FA  
                                    u514 105C                                      u610 13D4  
                                    u531 10F4                                      u515 1058  
                                    u611 13D0                                      u524 10B2  
                                    u540 1124                                      u525 10AE  
                                    u541 1120                                      u536 10FC  
                                    u490 1016                                      u554 1146  
                                    u570 1314                                      u491 1012  
                                    u555 1142                                      u571 1310  
                                    u564 119C                                      u580 134C  
                                    u565 1198                                      u581 1348  
                                    u590 1378                                      u591 1374  
                                    u757 1218                                      u767 1240  
                                    u777 1268                                      u787 1290  
                                    u797 12B8                                      _ret 0036  
                    led_initialize@F2895 0035                                      wreg 0FE8  
                      ?_motor_initialize 002B                       ??_motor_initialize 002C  
                                   l1301 1338                                     l1303 134C  
                                   l1311 1414                                     l1305 1354  
                                   l1321 1396                                     l1313 1368  
                                   l1307 1364                                     l1331 13D4  
                                   l1323 13A6                                     l1315 1378  
                                   l1261 1016                                     l1333 13D8  
                                   l1325 13AA                                     l1317 137C  
                                   l1271 10E4                                     l1263 1036  
                                   l1265 103E                                     l1273 1110  
                                   l1281 1128                                     l1329 13C4  
                                   l1267 1094                                     l1259 1002  
                                   l1283 117E                                     l1451 1236  
                                   l1443 11FA                                     l1277 1114  
                                   l1293 1304                                     l1461 12AE  
                                   l1453 125E                                     l1445 120E  
                                   l1279 1124                                     l1287 11CE  
                                   l1295 1314                                     l1455 1276  
                                   l1447 1226                                     l1297 1318  
                                   l1457 127E                                     l1449 122E  
                                   l1467 11E2                                     l1459 1286  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     _main 11FA  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
                           ___param_bank 0000                     _gpio_pin_write_logic 1114  
                      ??_motor_turn_left 002B                                    ?_main 0023  
               ??_application_initialize 002D                      relay_turn_off@F2898 002F  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 12CE                             __end_of_main 12CE  
                  ?_gpio_pin_write_logic 0023                            _lat_registers 000B  
                                 ??_main 002D                            __activetblptr 0002  
                       led_turn_on@F2900 0034                        ?_motor_turn_right 002A  
                     ??_motor_turn_right 002B                                   clear_0 12F4  
                                 _motor1 0021                                   _motor2 001F  
                                 isa$std 0001  gpio_pin_direction_intialize@_pin_config 0023  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization 12FA                            ___rparam_used 0001  
                 ??_gpio_pin_write_logic 0025                           __pcstackCOMRAM 0023  
                 _application_initialize 1414                               __pnvCOMRAM 0036  
                        _motor_turn_left 1396                        led_turn_off@F2905 0033  
                   led_turn_toggle@F2910 0032                           _tris_registers 0015  
                                __Hparam 0000                                  __Lparam 0000  
                    _gpio_pin_initialize 1304                             __psmallconst 1000  
                                __pcinit 12CE                                  __ramtop 1000  
                                __ptext0 11FA                                  __ptext1 1368  
                                __ptext2 1396                                  __ptext3 13C4  
                                __ptext4 1414                                  __ptext5 1338  
                                __ptext6 1304                                  __ptext7 1114  
                                __ptext8 1002                     ?_gpio_pin_initialize 002A  
                   end_of_initialization 12FA                  __end_of_motor_turn_left 13C4  
                  motor_turn_right@motor 002A                            __Lmediumconst 0000  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                             _motor_stop 13C4     __end_of_gpio_pin_direction_intialize 1114  
           _gpio_pin_direction_intialize 1002                    ??_gpio_pin_initialize 002B  
                       _motor_initialize 1338                       relay_turn_on@F2893 0030  
                          __pidataCOMRAM 13F2                      start_initialization 12CE  
          ?_gpio_pin_direction_intialize 0023                  ?_application_initialize 0023  
                       ?_motor_turn_left 002A                              ?_motor_stop 002A  
                            __pbssCOMRAM 002F           __end_of_application_initialize 142A  
                   motor_turn_left@motor 002A          gpio_pin_direction_intialize@ret 0029  
                       _motor_turn_right 1368          gpio_pin_write_logic@_pin_config 0023  
              gpio_pin_write_logic@logic 0024                              __smallconst 1000  
                        motor_stop@motor 002A           ??_gpio_pin_direction_intialize 0024  
                    motor_initialize@ret 002C                 __end_of_motor_initialize 1368  
                              copy_data0 12E2                relay_initialization@F2888 0031  
                               __Hrparam 0000                                 __Lrparam 0000  
            __end_of_gpio_pin_initialize 1338           gpio_pin_initialize@_pin_config 002A  
                               isa$xinst 0000                             ??_motor_stop 002B  
                  motor_initialize@motor 002B                 __end_of_motor_turn_right 1396  
           __end_of_gpio_pin_write_logic 11FA                       __end_of_motor_stop 13F2  
                         _port_registers 0001  
