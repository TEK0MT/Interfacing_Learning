

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jul 07 05:44:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 17/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4620 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     
    72                           	psect	idataCOMRAM
    73   001920                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _keypad_values
    77   001920  37                 	db	55
    78   001921  38                 	db	56
    79   001922  39                 	db	57
    80   001923  2F                 	db	47
    81   001924  34                 	db	52
    82   001925  35                 	db	53
    83   001926  36                 	db	54
    84   001927  2A                 	db	42
    85   001928  31                 	db	49
    86   001929  32                 	db	50
    87   00192A  33                 	db	51
    88   00192B  2D                 	db	45
    89   00192C  23                 	db	35
    90   00192D  30                 	db	48
    91   00192E  3D                 	db	61
    92   00192F  2B                 	db	43
    93                           
    94                           ;initializer for _port_registers
    95   001930  80                 	db	128
    96   001931  0F                 	db	15
    97   001932  81                 	db	129
    98   001933  0F                 	db	15
    99   001934  82                 	db	130
   100   001935  0F                 	db	15
   101   001936  83                 	db	131
   102   001937  0F                 	db	15
   103   001938  84                 	db	132
   104   001939  0F                 	db	15
   105                           
   106                           ;initializer for _lat_registers
   107   00193A  89                 	db	137
   108   00193B  0F                 	db	15
   109   00193C  8A                 	db	138
   110   00193D  0F                 	db	15
   111   00193E  8B                 	db	139
   112   00193F  0F                 	db	15
   113   001940  8C                 	db	140
   114   001941  0F                 	db	15
   115   001942  8D                 	db	141
   116   001943  0F                 	db	15
   117                           
   118                           ;initializer for _tris_registers
   119   001944  92                 	db	146
   120   001945  0F                 	db	15
   121   001946  93                 	db	147
   122   001947  0F                 	db	15
   123   001948  94                 	db	148
   124   001949  0F                 	db	15
   125   00194A  95                 	db	149
   126   00194B  0F                 	db	15
   127   00194C  96                 	db	150
   128   00194D  0F                 	db	15
   129                           
   130                           ;initializer for _value
   131   00194E  F3                 	db	243
   132                           
   133                           ;initializer for _led1
   134   00194F  03                 	db	3
   135                           
   136                           ;initializer for _lcd1
   137   001950  2A                 	db	42
   138   001951  3A                 	db	58
   139   001952  03                 	db	3
   140   001953  0B                 	db	11
   141   001954  13                 	db	19
   142   001955  1B                 	db	27
   143   001956  23                 	db	35
   144   001957  2B                 	db	43
   145   001958  33                 	db	51
   146   001959  3B                 	db	59
   147                           
   148                           	psect	smallconst
   149   001000                     __psmallconst:
   150                           	callstack 0
   151   001000  00                 	db	0
   152   001001                     _customChar7:
   153                           	callstack 0
   154   001001  04                 	db	4
   155   001002  0A                 	db	10
   156   001003  04                 	db	4
   157   001004  04                 	db	4
   158   001005  04                 	db	4
   159   001006  0E                 	db	14
   160   001007  15                 	db	21
   161   001008  0E                 	db	14
   162   001009                     __end_of_customChar7:
   163                           	callstack 0
   164   001009                     _customChar6:
   165                           	callstack 0
   166   001009  0E                 	db	14
   167   00100A  0E                 	db	14
   168   00100B  1F                 	db	31
   169   00100C  1F                 	db	31
   170   00100D  1F                 	db	31
   171   00100E  1F                 	db	31
   172   00100F  1F                 	db	31
   173   001010  00                 	db	0
   174   001011                     __end_of_customChar6:
   175                           	callstack 0
   176   001011                     _customChar5:
   177                           	callstack 0
   178   001011  0E                 	db	14
   179   001012  0A                 	db	10
   180   001013  1F                 	db	31
   181   001014  1F                 	db	31
   182   001015  1F                 	db	31
   183   001016  1F                 	db	31
   184   001017  1F                 	db	31
   185   001018  00                 	db	0
   186   001019                     __end_of_customChar5:
   187                           	callstack 0
   188   001019                     _customChar4:
   189                           	callstack 0
   190   001019  0E                 	db	14
   191   00101A  0A                 	db	10
   192   00101B  11                 	db	17
   193   00101C  1F                 	db	31
   194   00101D  1F                 	db	31
   195   00101E  1F                 	db	31
   196   00101F  1F                 	db	31
   197   001020  00                 	db	0
   198   001021                     __end_of_customChar4:
   199                           	callstack 0
   200   001021                     _customChar3:
   201                           	callstack 0
   202   001021  0E                 	db	14
   203   001022  0A                 	db	10
   204   001023  11                 	db	17
   205   001024  11                 	db	17
   206   001025  1F                 	db	31
   207   001026  1F                 	db	31
   208   001027  1F                 	db	31
   209   001028  00                 	db	0
   210   001029                     __end_of_customChar3:
   211                           	callstack 0
   212   001029                     _customChar2:
   213                           	callstack 0
   214   001029  0E                 	db	14
   215   00102A  0A                 	db	10
   216   00102B  11                 	db	17
   217   00102C  11                 	db	17
   218   00102D  11                 	db	17
   219   00102E  1F                 	db	31
   220   00102F  1F                 	db	31
   221   001030  00                 	db	0
   222   001031                     __end_of_customChar2:
   223                           	callstack 0
   224   001031                     _customChar:
   225                           	callstack 0
   226   001031  0E                 	db	14
   227   001032  0A                 	db	10
   228   001033  11                 	db	17
   229   001034  11                 	db	17
   230   001035  11                 	db	17
   231   001036  11                 	db	17
   232   001037  1F                 	db	31
   233   001038  00                 	db	0
   234   001039                     __end_of_customChar:
   235                           	callstack 0
   236   000000                     _PORTE	set	3972
   237   000000                     _PORTD	set	3971
   238   000000                     _PORTC	set	3970
   239   000000                     _PORTB	set	3969
   240   000000                     _PORTA	set	3968
   241   000000                     _LATA	set	3977
   242   000000                     _TRISA	set	3986
   243   000000                     _TRISE	set	3990
   244   000000                     _TRISD	set	3989
   245   000000                     _TRISC	set	3988
   246   000000                     _TRISB	set	3987
   247   000000                     _LATE	set	3981
   248   000000                     _LATD	set	3980
   249   000000                     _LATC	set	3979
   250   000000                     _LATB	set	3978
   251   001039                     STR_1:
   252   001039  25                 	db	37
   253   00103A  69                 	db	105	;'i'
   254   00103B  00                 	db	0
   255   00103C  00                 	db	0	; dummy byte at the end
   256   000000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260   001820                     __pcinit:
   261                           	callstack 0
   262   001820                     start_initialization:
   263                           	callstack 0
   264   001820                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to COMRAM (58 bytes)
   268                           ; load TBLPTR registers with __pidataCOMRAM
   269   001820  0E20               	movlw	low __pidataCOMRAM
   270   001822  6EF6               	movwf	tblptrl,c
   271   001824  0E19               	movlw	high __pidataCOMRAM
   272   001826  6EF7               	movwf	tblptrh,c
   273   001828  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   274   00182A  6EF8               	movwf	tblptru,c
   275   00182C  EE00  F001         	lfsr	0,__pdataCOMRAM
   276   001830  EE10 F03A          	lfsr	1,58
   277   001834                     copy_data0:
   278   001834  0009               	tblrd		*+
   279   001836  CFF5 FFEE          	movff	tablat,postinc0
   280   00183A  50E5               	movf	postdec1,w,c
   281   00183C  50E1               	movf	fsr1l,w,c
   282   00183E  E1FA               	bnz	copy_data0
   283                           
   284                           ; Clear objects allocated to BANK0 (32 bytes)
   285   001840  EE00  F080         	lfsr	0,__pbssBANK0
   286   001844  0E20               	movlw	32
   287   001846                     clear_0:
   288   001846  6AEE               	clrf	postinc0,c
   289   001848  06E8               	decf	wreg,f,c
   290   00184A  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to COMRAM (17 bytes)
   293   00184C  EE00  F067         	lfsr	0,__pbssCOMRAM
   294   001850  0E11               	movlw	17
   295   001852                     clear_1:
   296   001852  6AEE               	clrf	postinc0,c
   297   001854  06E8               	decf	wreg,f,c
   298   001856  E1FD               	bnz	clear_1
   299   001858                     end_of_initialization:
   300                           	callstack 0
   301   001858                     __end_of__initialization:
   302                           	callstack 0
   303   001858  0E00               	movlw	low (__Lmediumconst shr (0+16))
   304   00185A  6EF8               	movwf	tblptru,c
   305   00185C  0100               	movlb	0
   306   00185E  EF14  F00D         	goto	_main	;jump to C main() function
   307                           
   308                           	psect	bssCOMRAM
   309   000067                     __pbssCOMRAM:
   310                           	callstack 0
   311   000067                     _width:
   312                           	callstack 0
   313   000067                     	ds	2
   314   000069                     _prec:
   315                           	callstack 0
   316   000069                     	ds	2
   317   00006B                     _flags:
   318                           	callstack 0
   319   00006B                     	ds	1
   320   00006C                     _ret:
   321                           	callstack 0
   322   00006C                     	ds	1
   323   00006D                     relay_turn_off@F3065:
   324                           	callstack 0
   325   00006D                     	ds	1
   326   00006E                     relay_turn_on@F3060:
   327                           	callstack 0
   328   00006E                     	ds	1
   329   00006F                     relay_initialization@F3055:
   330                           	callstack 0
   331   00006F                     	ds	1
   332   000070                     led_turn_toggle@F3077:
   333                           	callstack 0
   334   000070                     	ds	1
   335   000071                     led_turn_off@F3072:
   336                           	callstack 0
   337   000071                     	ds	1
   338   000072                     led_turn_on@F3067:
   339                           	callstack 0
   340   000072                     	ds	1
   341   000073                     led_initialize@F3062:
   342                           	callstack 0
   343   000073                     	ds	1
   344   000074                     _text:
   345                           	callstack 0
   346   000074                     	ds	4
   347                           
   348                           	psect	dataCOMRAM
   349   000001                     __pdataCOMRAM:
   350                           	callstack 0
   351   000001                     _keypad_values:
   352                           	callstack 0
   353   000001                     	ds	16
   354   000011                     _port_registers:
   355                           	callstack 0
   356   000011                     	ds	10
   357   00001B                     _lat_registers:
   358                           	callstack 0
   359   00001B                     	ds	10
   360   000025                     _tris_registers:
   361                           	callstack 0
   362   000025                     	ds	10
   363   00002F                     _value:
   364                           	callstack 0
   365   00002F                     	ds	1
   366   000030                     _led1:
   367                           	callstack 0
   368   000030                     	ds	1
   369   000031                     _lcd1:
   370                           	callstack 0
   371   000031                     	ds	10
   372                           
   373                           	psect	bssBANK0
   374   000080                     __pbssBANK0:
   375                           	callstack 0
   376   000080                     _dbuf:
   377                           	callstack 0
   378   000080                     	ds	32
   379                           
   380                           	psect	cstackCOMRAM
   381   00003B                     __pcstackCOMRAM:
   382                           	callstack 0
   383   00003B                     ?___awdiv:
   384                           	callstack 0
   385   00003B                     ?___awmod:
   386                           	callstack 0
   387   00003B                     gpio_pin_direction_intialize@_pin_config:
   388                           	callstack 0
   389   00003B                     gpio_pin_write_logic@_pin_config:
   390                           	callstack 0
   391   00003B                     memset@dest:
   392                           	callstack 0
   393   00003B                     ___awdiv@dividend:
   394                           	callstack 0
   395   00003B                     ___awmod@dividend:
   396                           	callstack 0
   397   00003B                     fputc@c:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x0
   401   00003B                     	ds	1
   402   00003C                     ??_gpio_pin_direction_intialize:
   403   00003C                     gpio_pin_write_logic@logic:
   404                           	callstack 0
   405   00003C                     memset@c:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x1
   409   00003C                     	ds	1
   410   00003D                     ??_gpio_pin_write_logic:
   411   00003D                     fputc@fp:
   412                           	callstack 0
   413   00003D                     ___awdiv@divisor:
   414                           	callstack 0
   415   00003D                     ___awmod@divisor:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419   00003D                     	ds	1
   420   00003E                     ??_fputc:
   421   00003E                     memset@n:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x3
   425   00003E                     	ds	1
   426   00003F                     ___awdiv@counter:
   427                           	callstack 0
   428   00003F                     ___awmod@counter:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x4
   432   00003F                     	ds	1
   433   000040                     ___awdiv@sign:
   434                           	callstack 0
   435   000040                     ___awmod@sign:
   436                           	callstack 0
   437   000040                     memset@p:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x5
   441   000040                     	ds	1
   442   000041                     ?_abs:
   443                           	callstack 0
   444   000041                     gpio_pin_direction_intialize@ret:
   445                           	callstack 0
   446   000041                     ___awdiv@quotient:
   447                           	callstack 0
   448   000041                     abs@a:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x6
   452   000041                     	ds	1
   453   000042                     gpio_pin_write_logic@ret:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x7
   457   000042                     	ds	1
   458   000043                     ??_abs:
   459   000043                     enable_signal_8bits@lcd:
   460                           	callstack 0
   461   000043                     gpio_pin_initialize@_pin_config:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x8
   465   000043                     	ds	1
   466   000044                     lcd_8bit_send_command@lcd:
   467                           	callstack 0
   468   000044                     lcd_8bit_send_char@lcd:
   469                           	callstack 0
   470   000044                     gpio_pin_initialize@ret:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x9
   474   000044                     	ds	1
   475   000045                     lcd_8bit_send_command@command:
   476                           	callstack 0
   477   000045                     lcd_8bit_send_char@_char:
   478                           	callstack 0
   479   000045                     vfpfcnvrt@fp:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xA
   483   000045                     	ds	1
   484   000046                     ??_lcd_8bit_send_command:
   485   000046                     ??_lcd_8bit_send_char:
   486   000046                     vfpfcnvrt@fmt:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0xB
   490   000046                     	ds	1
   491   000047                     vfpfcnvrt@ap:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0xC
   495   000047                     	ds	1
   496   000048                     ??_vfpfcnvrt:
   497   000048                     lcd_8bit_send_command@ret:
   498                           	callstack 0
   499   000048                     lcd_8bit_send_char@ret:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xD
   503   000048                     	ds	1
   504   000049                     lcd_8bit_send_command@counter:
   505                           	callstack 0
   506   000049                     lcd_8bit_send_char@counter:
   507                           	callstack 0
   508   000049                     vfpfcnvrt@done:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0xE
   512   000049                     	ds	1
   513   00004A                     lcd_8bit_initialize@lcd:
   514                           	callstack 0
   515   00004A                     lcd_8bit_send_string@lcd:
   516                           	callstack 0
   517   00004A                     vfpfcnvrt@cp:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0xF
   521   00004A                     	ds	1
   522   00004B                     ??_lcd_8bit_initialize:
   523   00004B                     lcd_8bit_send_string@str:
   524                           	callstack 0
   525   00004B                     vfpfcnvrt@convarg:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x10
   529   00004B                     	ds	1
   530   00004C                     lcd_8bit_initialize@ret:
   531                           	callstack 0
   532   00004C                     lcd_8bit_send_string@ret:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x11
   536   00004C                     	ds	1
   537   00004D                     lcd_8bit_initialize@counter:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x12
   541   00004D                     	ds	1
   542   00004E                     
   543                           ; 1 bytes @ 0x13
   544   00004E                     	ds	1
   545   00004F                     vfpfcnvrt@c:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x14
   549   00004F                     	ds	1
   550   000050                     ?_vfprintf:
   551                           	callstack 0
   552   000050                     vfprintf@fp:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x15
   556   000050                     	ds	1
   557   000051                     vfprintf@fmt:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x16
   561   000051                     	ds	1
   562   000052                     vfprintf@ap:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x17
   566   000052                     	ds	1
   567   000053                     vfprintf@cfmt:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x18
   571   000053                     	ds	1
   572   000054                     ?_sprintf:
   573                           	callstack 0
   574   000054                     sprintf@s:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x19
   578   000054                     	ds	1
   579   000055                     sprintf@fmt:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x1A
   583   000055                     	ds	3
   584   000058                     sprintf@ap:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x1D
   588   000058                     	ds	1
   589   000059                     sprintf@f:
   590                           	callstack 0
   591                           
   592                           ; 12 bytes @ 0x1E
   593   000059                     	ds	12
   594   000065                     convert_uint8_to_string@str:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x2A
   598   000065                     	ds	1
   599   000066                     convert_uint8_to_string@value:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x2B
   603   000066                     	ds	1
   604   000067                     
   605                           ; 1 bytes @ 0x2C
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 15 in file "application.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  2  466[None  ] int 
   618 ;; Registers used:
   619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels required when called: 6
   631 ;; This function calls:
   632 ;;		_application_initialize
   633 ;;		_convert_uint8_to_string
   634 ;;		_lcd_8bit_send_string
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text0
   641   001A28                     __ptext0:
   642                           	callstack 0
   643   001A28                     _main:
   644                           	callstack 25
   645   001A28                     
   646                           ;application.c: 17:     convert_uint8_to_string(value,text);
   647   001A28  0E74               	movlw	low _text
   648   001A2A  6E65               	movwf	convert_uint8_to_string@str^0,c
   649   001A2C  0EF3               	movlw	243
   650   001A2E  EC31  F00C         	call	_convert_uint8_to_string
   651   001A32                     
   652                           ;application.c: 18:     application_initialize();
   653   001A32  EC2A  F00D         	call	_application_initialize	;wreg free
   654   001A36                     l3090:
   655                           
   656                           ;application.c: 29:         lcd_8bit_send_string(&lcd1,text);
   657   001A36  0E31               	movlw	low _lcd1
   658   001A38  6E4A               	movwf	lcd_8bit_send_string@lcd^0,c
   659   001A3A  0E74               	movlw	low _text
   660   001A3C  6E4B               	movwf	lcd_8bit_send_string@str^0,c
   661   001A3E  ECEA  F00B         	call	_lcd_8bit_send_string	;wreg free
   662   001A42  EF1B  F00D         	goto	l3090
   663   001A46  EF00  F000         	goto	start
   664   001A4A                     __end_of_main:
   665                           	callstack 0
   666                           
   667 ;; *************** function _lcd_8bit_send_string *****************
   668 ;; Defined at:
   669 ;;		line 89 in file "ECU_Layer/LCD/ecu_lcd.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  lcd             1   15[COMRAM] PTR const struct .
   672 ;;		 -> lcd1(10), 
   673 ;;  str             1   16[COMRAM] PTR unsigned char 
   674 ;;		 -> text(4), 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  ret             1   17[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      unsigned char 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:        3 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 3
   693 ;; This function calls:
   694 ;;		_lcd_8bit_send_char
   695 ;; This function is called by:
   696 ;;		_main
   697 ;;		_lcd_8bit_send_string_pos
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text1
   702   0017D4                     __ptext1:
   703                           	callstack 0
   704   0017D4                     _lcd_8bit_send_string:
   705                           	callstack 27
   706   0017D4                     
   707                           ;ECU_Layer/LCD/ecu_lcd.c: 90:     std_ReturnType ret = (std_ReturnType)0x01;
   708   0017D4  0E01               	movlw	1
   709   0017D6  6E4C               	movwf	lcd_8bit_send_string@ret^0,c
   710                           
   711                           ;ECU_Layer/LCD/ecu_lcd.c: 91:     if(((void*)0) == lcd){
   712   0017D8  504A               	movf	lcd_8bit_send_string@lcd^0,w,c
   713   0017DA  A4D8               	btfss	status,2,c
   714   0017DC  EFF2  F00B         	goto	u1701
   715   0017E0  EFF4  F00B         	goto	u1700
   716   0017E4                     u1701:
   717   0017E4  EF03  F00C         	goto	l2620
   718   0017E8                     u1700:
   719   0017E8                     
   720                           ;ECU_Layer/LCD/ecu_lcd.c: 92:         ret = (std_ReturnType)0x00;
   721   0017E8  0E00               	movlw	0
   722   0017EA  6E4C               	movwf	lcd_8bit_send_string@ret^0,c
   723                           
   724                           ;ECU_Layer/LCD/ecu_lcd.c: 93:     }
   725   0017EC  EF0E  F00C         	goto	l2622
   726   0017F0                     l2616:
   727                           
   728                           ;ECU_Layer/LCD/ecu_lcd.c: 96:             ret = lcd_8bit_send_char(lcd,*str++);
   729   0017F0  C04A  F044         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char@lcd
   730   0017F4  504B               	movf	lcd_8bit_send_string@str^0,w,c
   731   0017F6  6ED9               	movwf	fsr2l,c
   732   0017F8  6ADA               	clrf	fsr2h,c
   733   0017FA  50DF               	movf	indf2,w,c
   734   0017FC  6E45               	movwf	lcd_8bit_send_char@_char^0,c
   735   0017FE  EC74  F00B         	call	_lcd_8bit_send_char	;wreg free
   736   001802  6E4C               	movwf	lcd_8bit_send_string@ret^0,c
   737   001804  2A4B               	incf	lcd_8bit_send_string@str^0,f,c
   738   001806                     l2620:
   739                           
   740                           ;ECU_Layer/LCD/ecu_lcd.c: 95:         while(*str){
   741   001806  504B               	movf	lcd_8bit_send_string@str^0,w,c
   742   001808  6ED9               	movwf	fsr2l,c
   743   00180A  6ADA               	clrf	fsr2h,c
   744   00180C  50DF               	movf	indf2,w,c
   745   00180E  A4D8               	btfss	status,2,c
   746   001810  EF0C  F00C         	goto	u1711
   747   001814  EF0E  F00C         	goto	u1710
   748   001818                     u1711:
   749   001818  EFF8  F00B         	goto	l2616
   750   00181C                     u1710:
   751   00181C                     l2622:
   752                           
   753                           ;ECU_Layer/LCD/ecu_lcd.c: 99:     return ret;
   754   00181C  504C               	movf	lcd_8bit_send_string@ret^0,w,c
   755   00181E  0012               	return		;funcret
   756   001820                     __end_of_lcd_8bit_send_string:
   757                           	callstack 0
   758                           
   759 ;; *************** function _lcd_8bit_send_char *****************
   760 ;; Defined at:
   761 ;;		line 62 in file "ECU_Layer/LCD/ecu_lcd.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  lcd             1    9[COMRAM] PTR const struct .
   764 ;;		 -> lcd1(10), 
   765 ;;  _char           1   10[COMRAM] unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  counter         1   14[COMRAM] unsigned char 
   768 ;;  ret             1   13[COMRAM] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      unsigned char 
   771 ;; Registers used:
   772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;Total ram usage:        6 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 2
   785 ;; This function calls:
   786 ;;		_enable_signal_8bits
   787 ;;		_gpio_pin_write_logic
   788 ;; This function is called by:
   789 ;;		_lcd_8bit_send_string
   790 ;;		_lcd_8bit_send_char_pos
   791 ;;		_lcd_8bit_custom_character
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text2
   796   0016E8                     __ptext2:
   797                           	callstack 0
   798   0016E8                     _lcd_8bit_send_char:
   799                           	callstack 27
   800   0016E8                     
   801                           ;ECU_Layer/LCD/ecu_lcd.c: 64:     uint8 counter = 0;
   802   0016E8  0E00               	movlw	0
   803   0016EA  6E49               	movwf	lcd_8bit_send_char@counter^0,c
   804                           
   805                           ;ECU_Layer/LCD/ecu_lcd.c: 65:     if(((void*)0) == lcd){
   806   0016EC  5044               	movf	lcd_8bit_send_char@lcd^0,w,c
   807   0016EE  A4D8               	btfss	status,2,c
   808   0016F0  EF7C  F00B         	goto	u1621
   809   0016F4  EF7E  F00B         	goto	u1620
   810   0016F8                     u1621:
   811   0016F8  EF82  F00B         	goto	l2520
   812   0016FC                     u1620:
   813   0016FC                     
   814                           ;ECU_Layer/LCD/ecu_lcd.c: 66:         ret = (std_ReturnType)0x00;
   815   0016FC  0E00               	movlw	0
   816   0016FE  6E48               	movwf	lcd_8bit_send_char@ret^0,c
   817                           
   818                           ;ECU_Layer/LCD/ecu_lcd.c: 67:     }
   819   001700  EFAD  F00B         	goto	l2536
   820   001704                     l2520:
   821   001704  C044  F03B         	movff	lcd_8bit_send_char@lcd,gpio_pin_write_logic@_pin_config
   822   001708  0E01               	movlw	1
   823   00170A  6E3C               	movwf	gpio_pin_write_logic@logic^0,c
   824   00170C  EC84  F009         	call	_gpio_pin_write_logic	;wreg free
   825   001710                     
   826                           ;ECU_Layer/LCD/ecu_lcd.c: 70:         for(counter = 0;counter < 8;counter++){
   827   001710  0E00               	movlw	0
   828   001712  6E49               	movwf	lcd_8bit_send_char@counter^0,c
   829   001714                     l2528:
   830                           
   831                           ;ECU_Layer/LCD/ecu_lcd.c: 71:             ret = gpio_pin_write_logic(&(lcd->data_pins[co
      +                          unter]),(_char >> counter) & (uint8)0x01);
   832   001714  5044               	movf	lcd_8bit_send_char@lcd^0,w,c
   833   001716  2449               	addwf	lcd_8bit_send_char@counter^0,w,c
   834   001718  0F02               	addlw	2
   835   00171A  6E3B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   836   00171C  C049  F046         	movff	lcd_8bit_send_char@counter,??_lcd_8bit_send_char
   837   001720  C045  F047         	movff	lcd_8bit_send_char@_char,??_lcd_8bit_send_char+1
   838   001724  2A46               	incf	??_lcd_8bit_send_char^0,f,c
   839   001726  EF97  F00B         	goto	u1634
   840   00172A                     u1635:
   841   00172A  90D8               	bcf	status,0,c
   842   00172C  3247               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
   843   00172E                     u1634:
   844   00172E  2E46               	decfsz	??_lcd_8bit_send_char^0,f,c
   845   001730  EF95  F00B         	goto	u1635
   846   001734  5047               	movf	(??_lcd_8bit_send_char+1)^0,w,c
   847   001736  0B01               	andlw	1
   848   001738  6E3C               	movwf	gpio_pin_write_logic@logic^0,c
   849   00173A  EC84  F009         	call	_gpio_pin_write_logic	;wreg free
   850   00173E  6E48               	movwf	lcd_8bit_send_char@ret^0,c
   851   001740                     
   852                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         }
   853   001740  2A49               	incf	lcd_8bit_send_char@counter^0,f,c
   854   001742  0E07               	movlw	7
   855   001744  6449               	cpfsgt	lcd_8bit_send_char@counter^0,c
   856   001746  EFA7  F00B         	goto	u1641
   857   00174A  EFA9  F00B         	goto	u1640
   858   00174E                     u1641:
   859   00174E  EF8A  F00B         	goto	l2528
   860   001752                     u1640:
   861   001752                     
   862                           ;ECU_Layer/LCD/ecu_lcd.c: 73:         enable_signal_8bits(lcd);
   863   001752  C044  F043         	movff	lcd_8bit_send_char@lcd,enable_signal_8bits@lcd
   864   001756  ECAD  F00C         	call	_enable_signal_8bits	;wreg free
   865   00175A                     l2536:
   866                           
   867                           ;ECU_Layer/LCD/ecu_lcd.c: 75:     return ret;
   868   00175A  5048               	movf	lcd_8bit_send_char@ret^0,w,c
   869   00175C  0012               	return		;funcret
   870   00175E                     __end_of_lcd_8bit_send_char:
   871                           	callstack 0
   872                           
   873 ;; *************** function _convert_uint8_to_string *****************
   874 ;; Defined at:
   875 ;;		line 237 in file "ECU_Layer/LCD/ecu_lcd.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  value           1    wreg     unsigned char 
   878 ;;  str             1   42[COMRAM] PTR unsigned char 
   879 ;;		 -> text(4), 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  value           1   43[COMRAM] unsigned char 
   882 ;;  ret             1    0        unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      unsigned char 
   885 ;; Registers used:
   886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 5
   899 ;; This function calls:
   900 ;;		_memset
   901 ;;		_sprintf
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text3
   908   001862                     __ptext3:
   909                           	callstack 0
   910   001862                     _convert_uint8_to_string:
   911                           	callstack 25
   912                           
   913                           ;incstack = 0
   914                           ;convert_uint8_to_string@value stored from wreg
   915   001862  6E66               	movwf	convert_uint8_to_string@value^0,c
   916   001864                     
   917                           ;ECU_Layer/LCD/ecu_lcd.c: 239:     if(((void*)0) == str){
   918   001864  5065               	movf	convert_uint8_to_string@str^0,w,c
   919   001866  A4D8               	btfss	status,2,c
   920   001868  EF38  F00C         	goto	u1751
   921   00186C  EF3A  F00C         	goto	u1750
   922   001870                     u1751:
   923   001870  EF3C  F00C         	goto	l2658
   924   001874                     u1750:
   925   001874                     
   926                           ;ECU_Layer/LCD/ecu_lcd.c: 241:     }
   927   001874  EF51  F00C         	goto	l181
   928   001878                     l2658:
   929                           
   930                           ;ECU_Layer/LCD/ecu_lcd.c: 243:         memset((char *)str, '\0', 4);
   931   001878  C065  F03B         	movff	convert_uint8_to_string@str,memset@dest
   932   00187C  0E00               	movlw	0
   933   00187E  6E3D               	movwf	(memset@c+1)^0,c
   934   001880  0E00               	movlw	0
   935   001882  6E3C               	movwf	memset@c^0,c
   936   001884  0E00               	movlw	0
   937   001886  6E3F               	movwf	(memset@n+1)^0,c
   938   001888  0E04               	movlw	4
   939   00188A  6E3E               	movwf	memset@n^0,c
   940   00188C  ECFC  F00C         	call	_memset	;wreg free
   941   001890                     
   942                           ;ECU_Layer/LCD/ecu_lcd.c: 244:         sprintf(str, "%i", value);
   943   001890  C065  F054         	movff	convert_uint8_to_string@str,sprintf@s
   944   001894  0E39               	movlw	low STR_1
   945   001896  6E55               	movwf	sprintf@fmt^0,c
   946   001898  C066  F056         	movff	convert_uint8_to_string@value,?_sprintf+2
   947   00189C  6A57               	clrf	(?_sprintf+3)^0,c
   948   00189E  ECC8  F00C         	call	_sprintf	;wreg free
   949   0018A2                     l181:
   950   0018A2  0012               	return		;funcret
   951   0018A4                     __end_of_convert_uint8_to_string:
   952                           	callstack 0
   953                           
   954 ;; *************** function _sprintf *****************
   955 ;; Defined at:
   956 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  s               1   25[COMRAM] PTR unsigned char 
   959 ;;		 -> text(4), 
   960 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   961 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  f              12   30[COMRAM] struct _IO_FILE
   964 ;;  ret             2    0        int 
   965 ;;  ap              1   29[COMRAM] PTR void [1]
   966 ;;		 -> ?_sprintf(2), 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  2   25[COMRAM] int 
   969 ;; Registers used:
   970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:       17 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 4
   983 ;; This function calls:
   984 ;;		_vfprintf
   985 ;; This function is called by:
   986 ;;		_convert_uint8_to_string
   987 ;;		_convert_uint16_to_string
   988 ;;		_convert_uint32_to_string
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text4
   993   001990                     __ptext4:
   994                           	callstack 0
   995   001990                     _sprintf:
   996                           	callstack 25
   997   001990  0E56               	movlw	low (?_sprintf+2)
   998   001992  6E58               	movwf	sprintf@ap^0,c
   999   001994  C054  F059         	movff	sprintf@s,sprintf@f
  1000   001998  0E00               	movlw	0
  1001   00199A  6E5D               	movwf	(sprintf@f+4)^0,c
  1002   00199C  0E00               	movlw	0
  1003   00199E  6E5C               	movwf	(sprintf@f+3)^0,c
  1004   0019A0  0E00               	movlw	0
  1005   0019A2  6E64               	movwf	(sprintf@f+11)^0,c
  1006   0019A4  0E00               	movlw	0
  1007   0019A6  6E63               	movwf	(sprintf@f+10)^0,c
  1008   0019A8  0E59               	movlw	low sprintf@f
  1009   0019AA  6E50               	movwf	vfprintf@fp^0,c
  1010   0019AC  C055  F051         	movff	sprintf@fmt,vfprintf@fmt
  1011   0019B0  0E58               	movlw	low sprintf@ap
  1012   0019B2  6E52               	movwf	vfprintf@ap^0,c
  1013   0019B4  EC52  F00C         	call	_vfprintf	;wreg free
  1014   0019B8  5054               	movf	sprintf@s^0,w,c
  1015   0019BA  245C               	addwf	(sprintf@f+3)^0,w,c
  1016   0019BC  6ED9               	movwf	fsr2l,c
  1017   0019BE  6ADA               	clrf	fsr2h,c
  1018   0019C0  6ADF               	clrf	indf2,c
  1019   0019C2  0012               	return		;funcret
  1020   0019C4                     __end_of_sprintf:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _vfprintf *****************
  1024 ;; Defined at:
  1025 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1028 ;;		 -> sprintf@f(12), 
  1029 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1030 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1031 ;;  ap              1   23[COMRAM] PTR PTR void 
  1032 ;;		 -> sprintf@ap(1), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1035 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2   21[COMRAM] int 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1045 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 3
  1052 ;; This function calls:
  1053 ;;		_vfpfcnvrt
  1054 ;; This function is called by:
  1055 ;;		_sprintf
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text5
  1060   0018A4                     __ptext5:
  1061                           	callstack 0
  1062   0018A4                     _vfprintf:
  1063                           	callstack 25
  1064   0018A4                     
  1065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1066   0018A4  C051  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  1067                           
  1068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1069   0018A8  EF5E  F00C         	goto	l2510
  1070   0018AC                     l2508:
  1071                           
  1072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1073   0018AC  C050  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  1074   0018B0  0E53               	movlw	low vfprintf@cfmt
  1075   0018B2  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1076   0018B4  C052  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1077   0018B8  EC1F  F008         	call	_vfpfcnvrt	;wreg free
  1078   0018BC                     l2510:
  1079                           
  1080                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1081   0018BC  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  1082   0018C0                     	if	1	;There is more than 1 active tblptr byte
  1083   0018C0  0E10               	movlw	high __smallconst
  1084   0018C2  6EF7               	movwf	tblptrh,c
  1085   0018C4                     	endif
  1086   0018C4                     	if	0	;tblptru may be non-zero
  1087   0018C4                     	endif
  1088   0018C4                     	if	0	;tblptru may be non-zero
  1089   0018C4                     	endif
  1090   0018C4  0008               	tblrd		*
  1091   0018C6  50F5               	movf	tablat,w,c
  1092   0018C8  0900               	iorlw	0
  1093   0018CA  A4D8               	btfss	status,2,c
  1094   0018CC  EF6A  F00C         	goto	u1611
  1095   0018D0  EF6C  F00C         	goto	u1610
  1096   0018D4                     u1611:
  1097   0018D4  EF56  F00C         	goto	l2508
  1098   0018D8                     u1610:
  1099   0018D8                     
  1100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1101   0018D8  0E00               	movlw	0
  1102   0018DA  6E51               	movwf	(?_vfprintf+1)^0,c
  1103   0018DC  0E00               	movlw	0
  1104   0018DE  6E50               	movwf	?_vfprintf^0,c
  1105   0018E0  0012               	return		;funcret
  1106   0018E2                     __end_of_vfprintf:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _vfpfcnvrt *****************
  1110 ;; Defined at:
  1111 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1114 ;;		 -> sprintf@f(12), 
  1115 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1116 ;;		 -> vfprintf@cfmt(1), 
  1117 ;;  ap              1   12[COMRAM] PTR PTR void 
  1118 ;;		 -> sprintf@ap(1), 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  convarg         4   16[COMRAM] struct .
  1121 ;;  c               1   20[COMRAM] unsigned char 
  1122 ;;  cp              1   15[COMRAM] PTR unsigned char 
  1123 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1124 ;;  done            1   14[COMRAM] _Bool 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1134 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;Total ram usage:       11 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 2
  1141 ;; This function calls:
  1142 ;;		___awdiv
  1143 ;;		___awmod
  1144 ;;		_abs
  1145 ;;		_fputc
  1146 ;; This function is called by:
  1147 ;;		_vfprintf
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text6
  1152   00103E                     __ptext6:
  1153                           	callstack 0
  1154   00103E                     _vfpfcnvrt:
  1155                           	callstack 25
  1156   00103E                     
  1157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1158   00103E  5046               	movf	vfpfcnvrt@fmt^0,w,c
  1159   001040  6ED9               	movwf	fsr2l,c
  1160   001042  6ADA               	clrf	fsr2h,c
  1161   001044  CFDF FFF6          	movff	indf2,tblptrl
  1162   001048                     	if	1	;There is more than 1 active tblptr byte
  1163   001048  0E10               	movlw	high __smallconst
  1164   00104A  6EF7               	movwf	tblptrh,c
  1165   00104C                     	endif
  1166   00104C                     	if	0	;tblptru may be non-zero
  1167   00104C                     	endif
  1168   00104C                     	if	0	;tblptru may be non-zero
  1169   00104C                     	endif
  1170   00104C  0008               	tblrd		*
  1171   00104E  50F5               	movf	tablat,w,c
  1172   001050  0A25               	xorlw	37
  1173   001052  A4D8               	btfss	status,2,c
  1174   001054  EF2E  F008         	goto	u1491
  1175   001058  EF30  F008         	goto	u1490
  1176   00105C                     u1491:
  1177   00105C  EFE9  F008         	goto	l2460
  1178   001060                     u1490:
  1179   001060                     
  1180                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1181   001060  5046               	movf	vfpfcnvrt@fmt^0,w,c
  1182   001062  6ED9               	movwf	fsr2l,c
  1183   001064  6ADA               	clrf	fsr2h,c
  1184   001066  2ADF               	incf	indf2,f,c
  1185   001068                     
  1186                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1187   001068  0E00               	movlw	0
  1188   00106A  6E68               	movwf	(_width+1)^0,c
  1189   00106C  0E00               	movlw	0
  1190   00106E  6E67               	movwf	_width^0,c
  1191   001070  C067  F06B         	movff	_width,_flags
  1192   001074                     
  1193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1194   001074  6869               	setf	_prec^0,c
  1195   001076  686A               	setf	(_prec+1)^0,c
  1196   001078                     
  1197                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1198   001078  5046               	movf	vfpfcnvrt@fmt^0,w,c
  1199   00107A  6ED9               	movwf	fsr2l,c
  1200   00107C  6ADA               	clrf	fsr2h,c
  1201   00107E  50DF               	movf	indf2,w,c
  1202   001080  6E4A               	movwf	vfpfcnvrt@cp^0,c
  1203   001082                     
  1204                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1205   001082  C04A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1206   001086                     	if	1	;There is more than 1 active tblptr byte
  1207   001086  0E10               	movlw	high __smallconst
  1208   001088  6EF7               	movwf	tblptrh,c
  1209   00108A                     	endif
  1210   00108A                     	if	0	;tblptru may be non-zero
  1211   00108A                     	endif
  1212   00108A                     	if	0	;tblptru may be non-zero
  1213   00108A                     	endif
  1214   00108A  0008               	tblrd		*
  1215   00108C  50F5               	movf	tablat,w,c
  1216   00108E  0A64               	xorlw	100
  1217   001090  B4D8               	btfsc	status,2,c
  1218   001092  EF4D  F008         	goto	u1501
  1219   001096  EF4F  F008         	goto	u1500
  1220   00109A                     u1501:
  1221   00109A  EF5D  F008         	goto	l2430
  1222   00109E                     u1500:
  1223   00109E  C04A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1224   0010A2                     	if	1	;There is more than 1 active tblptr byte
  1225   0010A2  0E10               	movlw	high __smallconst
  1226   0010A4  6EF7               	movwf	tblptrh,c
  1227   0010A6                     	endif
  1228   0010A6                     	if	0	;tblptru may be non-zero
  1229   0010A6                     	endif
  1230   0010A6                     	if	0	;tblptru may be non-zero
  1231   0010A6                     	endif
  1232   0010A6  0008               	tblrd		*
  1233   0010A8  50F5               	movf	tablat,w,c
  1234   0010AA  0A69               	xorlw	105
  1235   0010AC  A4D8               	btfss	status,2,c
  1236   0010AE  EF5B  F008         	goto	u1511
  1237   0010B2  EF5D  F008         	goto	u1510
  1238   0010B6                     u1511:
  1239   0010B6  EFE3  F008         	goto	l2456
  1240   0010BA                     u1510:
  1241   0010BA                     l2430:
  1242                           
  1243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1244   0010BA  5047               	movf	vfpfcnvrt@ap^0,w,c
  1245   0010BC  6ED9               	movwf	fsr2l,c
  1246   0010BE  6ADA               	clrf	fsr2h,c
  1247   0010C0  0E02               	movlw	2
  1248   0010C2  26DF               	addwf	indf2,f,c
  1249   0010C4  5CDF               	subwf	indf2,w,c
  1250   0010C6  6ED9               	movwf	fsr2l,c
  1251   0010C8  6ADA               	clrf	fsr2h,c
  1252   0010CA  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1253   0010CE  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+1
  1254   0010D2                     
  1255                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1256   0010D2  5046               	movf	vfpfcnvrt@fmt^0,w,c
  1257   0010D4  6ED9               	movwf	fsr2l,c
  1258   0010D6  6ADA               	clrf	fsr2h,c
  1259   0010D8  284A               	incf	vfpfcnvrt@cp^0,w,c
  1260   0010DA  6EDF               	movwf	indf2,c
  1261   0010DC                     
  1262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1263   0010DC  0E20               	movlw	32
  1264   0010DE  6E4F               	movwf	vfpfcnvrt@c^0,c
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1267   0010E0  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1268   0010E2  EF75  F008         	goto	u1521
  1269   0010E6  EF78  F008         	goto	u1520
  1270   0010EA                     u1521:
  1271   0010EA  0E01               	movlw	1
  1272   0010EC  EF79  F008         	goto	u1530
  1273   0010F0                     u1520:
  1274   0010F0  0E00               	movlw	0
  1275   0010F2                     u1530:
  1276   0010F2  6E49               	movwf	vfpfcnvrt@done^0,c
  1277   0010F4                     l2436:
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1280   0010F4  064F               	decf	vfpfcnvrt@c^0,f,c
  1281   0010F6  504F               	movf	vfpfcnvrt@c^0,w,c
  1282   0010F8  0F80               	addlw	low _dbuf
  1283   0010FA  6ED9               	movwf	fsr2l,c
  1284   0010FC  6ADA               	clrf	fsr2h,c
  1285   0010FE  C04B  F03B         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1286   001102  C04C  F03C         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1287   001106  0E00               	movlw	0
  1288   001108  6E3E               	movwf	(___awmod@divisor+1)^0,c
  1289   00110A  0E0A               	movlw	10
  1290   00110C  6E3D               	movwf	___awmod@divisor^0,c
  1291   00110E  ECC7  F00A         	call	___awmod	;wreg free
  1292   001112  C03B  F041         	movff	?___awmod,abs@a
  1293   001116  C03C  F042         	movff	?___awmod+1,abs@a+1
  1294   00111A  ECE2  F00C         	call	_abs	;wreg free
  1295   00111E  5041               	movf	?_abs^0,w,c
  1296   001120  0F30               	addlw	48
  1297   001122  6EDF               	movwf	indf2,c
  1298   001124                     
  1299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1300   001124  C04B  F03B         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1301   001128  C04C  F03C         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1302   00112C  0E00               	movlw	0
  1303   00112E  6E3E               	movwf	(___awdiv@divisor+1)^0,c
  1304   001130  0E0A               	movlw	10
  1305   001132  6E3D               	movwf	___awdiv@divisor^0,c
  1306   001134  EC65  F00A         	call	___awdiv	;wreg free
  1307   001138  C03B  F04B         	movff	?___awdiv,vfpfcnvrt@convarg
  1308   00113C  C03C  F04C         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1309   001140                     
  1310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1311   001140  504B               	movf	vfpfcnvrt@convarg^0,w,c
  1312   001142  104C               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1313   001144  B4D8               	btfsc	status,2,c
  1314   001146  EFA7  F008         	goto	u1541
  1315   00114A  EFA9  F008         	goto	u1540
  1316   00114E                     u1541:
  1317   00114E  EFB1  F008         	goto	l2444
  1318   001152                     u1540:
  1319   001152  504F               	movf	vfpfcnvrt@c^0,w,c
  1320   001154  A4D8               	btfss	status,2,c
  1321   001156  EFAF  F008         	goto	u1551
  1322   00115A  EFB1  F008         	goto	u1550
  1323   00115E                     u1551:
  1324   00115E  EF7A  F008         	goto	l2436
  1325   001162                     u1550:
  1326   001162                     l2444:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1329   001162  504F               	movf	vfpfcnvrt@c^0,w,c
  1330   001164  B4D8               	btfsc	status,2,c
  1331   001166  EFB7  F008         	goto	u1561
  1332   00116A  EFB9  F008         	goto	u1560
  1333   00116E                     u1561:
  1334   00116E  EFD8  F008         	goto	l2454
  1335   001172                     u1560:
  1336   001172  5049               	movf	vfpfcnvrt@done^0,w,c
  1337   001174  B4D8               	btfsc	status,2,c
  1338   001176  EFBF  F008         	goto	u1571
  1339   00117A  EFC1  F008         	goto	u1570
  1340   00117E                     u1571:
  1341   00117E  EFD8  F008         	goto	l2454
  1342   001182                     u1570:
  1343   001182                     
  1344                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1345   001182  064F               	decf	vfpfcnvrt@c^0,f,c
  1346   001184  504F               	movf	vfpfcnvrt@c^0,w,c
  1347   001186  0F80               	addlw	low _dbuf
  1348   001188  6ED9               	movwf	fsr2l,c
  1349   00118A  6ADA               	clrf	fsr2h,c
  1350   00118C  0E2D               	movlw	45
  1351   00118E  6EDF               	movwf	indf2,c
  1352   001190  EFD8  F008         	goto	l2454
  1353   001194                     l2450:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1356   001194  504F               	movf	vfpfcnvrt@c^0,w,c
  1357   001196  0F80               	addlw	low _dbuf
  1358   001198  6ED9               	movwf	fsr2l,c
  1359   00119A  6ADA               	clrf	fsr2h,c
  1360   00119C  50DF               	movf	indf2,w,c
  1361   00119E  6E48               	movwf	??_vfpfcnvrt^0,c
  1362   0011A0  5048               	movf	??_vfpfcnvrt^0,w,c
  1363   0011A2  6E3B               	movwf	fputc@c^0,c
  1364   0011A4  6A3C               	clrf	(fputc@c+1)^0,c
  1365   0011A6  C045  F03D         	movff	vfpfcnvrt@fp,fputc@fp
  1366   0011AA  EC1F  F00B         	call	_fputc	;wreg free
  1367   0011AE  2A4F               	incf	vfpfcnvrt@c^0,f,c
  1368   0011B0                     l2454:
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1371   0011B0  0E20               	movlw	32
  1372   0011B2  184F               	xorwf	vfpfcnvrt@c^0,w,c
  1373   0011B4  A4D8               	btfss	status,2,c
  1374   0011B6  EFDF  F008         	goto	u1581
  1375   0011BA  EFE1  F008         	goto	u1580
  1376   0011BE                     u1581:
  1377   0011BE  EFCA  F008         	goto	l2450
  1378   0011C2                     u1580:
  1379   0011C2  EFFA  F008         	goto	l1198
  1380   0011C6                     l2456:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1383   0011C6  5046               	movf	vfpfcnvrt@fmt^0,w,c
  1384   0011C8  6ED9               	movwf	fsr2l,c
  1385   0011CA  6ADA               	clrf	fsr2h,c
  1386   0011CC  2ADF               	incf	indf2,f,c
  1387   0011CE  EFFA  F008         	goto	l1198
  1388   0011D2                     l2460:
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1391   0011D2  5046               	movf	vfpfcnvrt@fmt^0,w,c
  1392   0011D4  6ED9               	movwf	fsr2l,c
  1393   0011D6  6ADA               	clrf	fsr2h,c
  1394   0011D8  CFDF FFF6          	movff	indf2,tblptrl
  1395   0011DC                     	if	1	;There is more than 1 active tblptr byte
  1396   0011DC  0E10               	movlw	high __smallconst
  1397   0011DE  6EF7               	movwf	tblptrh,c
  1398   0011E0                     	endif
  1399   0011E0                     	if	0	;tblptru may be non-zero
  1400   0011E0                     	endif
  1401   0011E0                     	if	0	;tblptru may be non-zero
  1402   0011E0                     	endif
  1403   0011E0  0008               	tblrd		*
  1404   0011E2  50F5               	movf	tablat,w,c
  1405   0011E4  6E3B               	movwf	fputc@c^0,c
  1406   0011E6  6A3C               	clrf	(fputc@c+1)^0,c
  1407   0011E8  C045  F03D         	movff	vfpfcnvrt@fp,fputc@fp
  1408   0011EC  EC1F  F00B         	call	_fputc	;wreg free
  1409   0011F0  EFE3  F008         	goto	l2456
  1410   0011F4                     l1198:
  1411   0011F4  0012               	return		;funcret
  1412   0011F6                     __end_of_vfpfcnvrt:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _fputc *****************
  1416 ;; Defined at:
  1417 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  c               2    0[COMRAM] int 
  1420 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1421 ;;		 -> sprintf@f(12), 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2    0[COMRAM] int 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1433 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;Total ram usage:        8 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 1
  1440 ;; This function calls:
  1441 ;;		_putch
  1442 ;; This function is called by:
  1443 ;;		_vfpfcnvrt
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text7
  1448   00163E                     __ptext7:
  1449                           	callstack 0
  1450   00163E                     _fputc:
  1451                           	callstack 25
  1452   00163E  503D               	movf	fputc@fp^0,w,c
  1453   001640  B4D8               	btfsc	status,2,c
  1454   001642  EF25  F00B         	goto	u1401
  1455   001646  EF27  F00B         	goto	u1400
  1456   00164A                     u1401:
  1457   00164A  EF2F  F00B         	goto	l2368
  1458   00164E                     u1400:
  1459   00164E  503D               	movf	fputc@fp^0,w,c
  1460   001650  A4D8               	btfss	status,2,c
  1461   001652  EF2D  F00B         	goto	u1411
  1462   001656  EF2F  F00B         	goto	u1410
  1463   00165A                     u1411:
  1464   00165A  EF34  F00B         	goto	l2370
  1465   00165E                     u1410:
  1466   00165E                     l2368:
  1467   00165E  503B               	movf	fputc@c^0,w,c
  1468   001660  EC2E  F00D         	call	_putch
  1469   001664  EF73  F00B         	goto	l1223
  1470   001668                     l2370:
  1471   001668  503D               	movf	fputc@fp^0,w,c
  1472   00166A  6ED9               	movwf	fsr2l,c
  1473   00166C  6ADA               	clrf	fsr2h,c
  1474   00166E  0E0A               	movlw	10
  1475   001670  26D9               	addwf	fsr2l,f,c
  1476   001672  50DE               	movf	postinc2,w,c
  1477   001674  10DE               	iorwf	postinc2,w,c
  1478   001676  B4D8               	btfsc	status,2,c
  1479   001678  EF40  F00B         	goto	u1421
  1480   00167C  EF42  F00B         	goto	u1420
  1481   001680                     u1421:
  1482   001680  EF5B  F00B         	goto	l2374
  1483   001684                     u1420:
  1484   001684  503D               	movf	fputc@fp^0,w,c
  1485   001686  6ED9               	movwf	fsr2l,c
  1486   001688  6ADA               	clrf	fsr2h,c
  1487   00168A  0E0A               	movlw	10
  1488   00168C  26D9               	addwf	fsr2l,f,c
  1489   00168E  503D               	movf	fputc@fp^0,w,c
  1490   001690  6EE1               	movwf	fsr1l,c
  1491   001692  6AE2               	clrf	fsr1h,c
  1492   001694  0E03               	movlw	3
  1493   001696  26E1               	addwf	fsr1l,f,c
  1494   001698  50DE               	movf	postinc2,w,c
  1495   00169A  5CE6               	subwf	postinc1,w,c
  1496   00169C  50E6               	movf	postinc1,w,c
  1497   00169E  0A80               	xorlw	128
  1498   0016A0  6E42               	movwf	(??_fputc+4)^0,c
  1499   0016A2  50DE               	movf	postinc2,w,c
  1500   0016A4  0A80               	xorlw	128
  1501   0016A6  5842               	subwfb	(??_fputc+4)^0,w,c
  1502   0016A8  B0D8               	btfsc	status,0,c
  1503   0016AA  EF59  F00B         	goto	u1431
  1504   0016AE  EF5B  F00B         	goto	u1430
  1505   0016B2                     u1431:
  1506   0016B2  EF73  F00B         	goto	l1223
  1507   0016B6                     u1430:
  1508   0016B6                     l2374:
  1509   0016B6  503D               	movf	fputc@fp^0,w,c
  1510   0016B8  6ED9               	movwf	fsr2l,c
  1511   0016BA  6ADA               	clrf	fsr2h,c
  1512   0016BC  0E03               	movlw	3
  1513   0016BE  26D9               	addwf	fsr2l,f,c
  1514   0016C0  50DF               	movf	indf2,w,c
  1515   0016C2  6E3E               	movwf	??_fputc^0,c
  1516   0016C4  503D               	movf	fputc@fp^0,w,c
  1517   0016C6  6ED9               	movwf	fsr2l,c
  1518   0016C8  6ADA               	clrf	fsr2h,c
  1519   0016CA  50DF               	movf	indf2,w,c
  1520   0016CC  243E               	addwf	??_fputc^0,w,c
  1521   0016CE  6ED9               	movwf	fsr2l,c
  1522   0016D0  6ADA               	clrf	fsr2h,c
  1523   0016D2  C03B  FFDF         	movff	fputc@c,indf2
  1524   0016D6  503D               	movf	fputc@fp^0,w,c
  1525   0016D8  6ED9               	movwf	fsr2l,c
  1526   0016DA  6ADA               	clrf	fsr2h,c
  1527   0016DC  0E03               	movlw	3
  1528   0016DE  26D9               	addwf	fsr2l,f,c
  1529   0016E0  2ADE               	incf	postinc2,f,c
  1530   0016E2  0E00               	movlw	0
  1531   0016E4  22DD               	addwfc	postdec2,f,c
  1532   0016E6                     l1223:
  1533   0016E6  0012               	return		;funcret
  1534   0016E8                     __end_of_fputc:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _putch *****************
  1538 ;; Defined at:
  1539 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  c               1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  c               1    0[COMRAM] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;Total ram usage:        0 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_fputc
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text8
  1567   001A5C                     __ptext8:
  1568                           	callstack 0
  1569   001A5C                     _putch:
  1570                           	callstack 25
  1571   001A5C  0012               	return		;funcret
  1572   001A5E                     __end_of_putch:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _abs *****************
  1576 ;; Defined at:
  1577 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  a               2    6[COMRAM] int 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2    6[COMRAM] int 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;Total ram usage:        4 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_vfpfcnvrt
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text9
  1605   0019C4                     __ptext9:
  1606                           	callstack 0
  1607   0019C4                     _abs:
  1608                           	callstack 26
  1609   0019C4  BE42               	btfsc	(abs@a+1)^0,7,c
  1610   0019C6  EFE7  F00C         	goto	u1441
  1611   0019CA  EFE9  F00C         	goto	u1440
  1612   0019CE                     u1441:
  1613   0019CE  EFEF  F00C         	goto	l1208
  1614   0019D2                     u1440:
  1615   0019D2  C041  F041         	movff	abs@a,?_abs
  1616   0019D6  C042  F042         	movff	abs@a+1,?_abs+1
  1617   0019DA  EFFB  F00C         	goto	l1211
  1618   0019DE                     l1208:
  1619   0019DE  C041  F043         	movff	abs@a,??_abs
  1620   0019E2  C042  F044         	movff	abs@a+1,??_abs+1
  1621   0019E6  1E43               	comf	??_abs^0,f,c
  1622   0019E8  1E44               	comf	(??_abs+1)^0,f,c
  1623   0019EA  4A43               	infsnz	??_abs^0,f,c
  1624   0019EC  2A44               	incf	(??_abs+1)^0,f,c
  1625   0019EE  C043  F041         	movff	??_abs,?_abs
  1626   0019F2  C044  F042         	movff	??_abs+1,?_abs+1
  1627   0019F6                     l1211:
  1628   0019F6  0012               	return		;funcret
  1629   0019F8                     __end_of_abs:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function ___awmod *****************
  1633 ;; Defined at:
  1634 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  dividend        2    0[COMRAM] int 
  1637 ;;  divisor         2    2[COMRAM] int 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  sign            1    5[COMRAM] unsigned char 
  1640 ;;  counter         1    4[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2    0[COMRAM] int 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;Total ram usage:        6 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_vfpfcnvrt
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text10
  1664   00158E                     __ptext10:
  1665                           	callstack 0
  1666   00158E                     ___awmod:
  1667                           	callstack 26
  1668   00158E  0E00               	movlw	0
  1669   001590  6E40               	movwf	___awmod@sign^0,c
  1670   001592  BE3C               	btfsc	(___awmod@dividend+1)^0,7,c
  1671   001594  EFD0  F00A         	goto	u1340
  1672   001598  EFCE  F00A         	goto	u1341
  1673   00159C                     u1341:
  1674   00159C  EFD6  F00A         	goto	l2336
  1675   0015A0                     u1340:
  1676   0015A0  6C3B               	negf	___awmod@dividend^0,c
  1677   0015A2  1E3C               	comf	(___awmod@dividend+1)^0,f,c
  1678   0015A4  B0D8               	btfsc	status,0,c
  1679   0015A6  2A3C               	incf	(___awmod@dividend+1)^0,f,c
  1680   0015A8  0E01               	movlw	1
  1681   0015AA  6E40               	movwf	___awmod@sign^0,c
  1682   0015AC                     l2336:
  1683   0015AC  BE3E               	btfsc	(___awmod@divisor+1)^0,7,c
  1684   0015AE  EFDD  F00A         	goto	u1350
  1685   0015B2  EFDB  F00A         	goto	u1351
  1686   0015B6                     u1351:
  1687   0015B6  EFE1  F00A         	goto	l2340
  1688   0015BA                     u1350:
  1689   0015BA  6C3D               	negf	___awmod@divisor^0,c
  1690   0015BC  1E3E               	comf	(___awmod@divisor+1)^0,f,c
  1691   0015BE  B0D8               	btfsc	status,0,c
  1692   0015C0  2A3E               	incf	(___awmod@divisor+1)^0,f,c
  1693   0015C2                     l2340:
  1694   0015C2  503D               	movf	___awmod@divisor^0,w,c
  1695   0015C4  103E               	iorwf	(___awmod@divisor+1)^0,w,c
  1696   0015C6  B4D8               	btfsc	status,2,c
  1697   0015C8  EFE8  F00A         	goto	u1361
  1698   0015CC  EFEA  F00A         	goto	u1360
  1699   0015D0                     u1361:
  1700   0015D0  EF0E  F00B         	goto	l2356
  1701   0015D4                     u1360:
  1702   0015D4  0E01               	movlw	1
  1703   0015D6  6E3F               	movwf	___awmod@counter^0,c
  1704   0015D8  EFF2  F00A         	goto	l2346
  1705   0015DC                     l2344:
  1706   0015DC  90D8               	bcf	status,0,c
  1707   0015DE  363D               	rlcf	___awmod@divisor^0,f,c
  1708   0015E0  363E               	rlcf	(___awmod@divisor+1)^0,f,c
  1709   0015E2  2A3F               	incf	___awmod@counter^0,f,c
  1710   0015E4                     l2346:
  1711   0015E4  AE3E               	btfss	(___awmod@divisor+1)^0,7,c
  1712   0015E6  EFF7  F00A         	goto	u1371
  1713   0015EA  EFF9  F00A         	goto	u1370
  1714   0015EE                     u1371:
  1715   0015EE  EFEE  F00A         	goto	l2344
  1716   0015F2                     u1370:
  1717   0015F2                     l2348:
  1718   0015F2  503D               	movf	___awmod@divisor^0,w,c
  1719   0015F4  5C3B               	subwf	___awmod@dividend^0,w,c
  1720   0015F6  503E               	movf	(___awmod@divisor+1)^0,w,c
  1721   0015F8  583C               	subwfb	(___awmod@dividend+1)^0,w,c
  1722   0015FA  A0D8               	btfss	status,0,c
  1723   0015FC  EF02  F00B         	goto	u1381
  1724   001600  EF04  F00B         	goto	u1380
  1725   001604                     u1381:
  1726   001604  EF08  F00B         	goto	l2352
  1727   001608                     u1380:
  1728   001608  503D               	movf	___awmod@divisor^0,w,c
  1729   00160A  5E3B               	subwf	___awmod@dividend^0,f,c
  1730   00160C  503E               	movf	(___awmod@divisor+1)^0,w,c
  1731   00160E  5A3C               	subwfb	(___awmod@dividend+1)^0,f,c
  1732   001610                     l2352:
  1733   001610  90D8               	bcf	status,0,c
  1734   001612  323E               	rrcf	(___awmod@divisor+1)^0,f,c
  1735   001614  323D               	rrcf	___awmod@divisor^0,f,c
  1736   001616  2E3F               	decfsz	___awmod@counter^0,f,c
  1737   001618  EFF9  F00A         	goto	l2348
  1738   00161C                     l2356:
  1739   00161C  5040               	movf	___awmod@sign^0,w,c
  1740   00161E  B4D8               	btfsc	status,2,c
  1741   001620  EF14  F00B         	goto	u1391
  1742   001624  EF16  F00B         	goto	u1390
  1743   001628                     u1391:
  1744   001628  EF1A  F00B         	goto	l2360
  1745   00162C                     u1390:
  1746   00162C  6C3B               	negf	___awmod@dividend^0,c
  1747   00162E  1E3C               	comf	(___awmod@dividend+1)^0,f,c
  1748   001630  B0D8               	btfsc	status,0,c
  1749   001632  2A3C               	incf	(___awmod@dividend+1)^0,f,c
  1750   001634                     l2360:
  1751   001634  C03B  F03B         	movff	___awmod@dividend,?___awmod
  1752   001638  C03C  F03C         	movff	___awmod@dividend+1,?___awmod+1
  1753   00163C  0012               	return		;funcret
  1754   00163E                     __end_of___awmod:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function ___awdiv *****************
  1758 ;; Defined at:
  1759 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  dividend        2    0[COMRAM] int 
  1762 ;;  divisor         2    2[COMRAM] int 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  quotient        2    6[COMRAM] int 
  1765 ;;  sign            1    5[COMRAM] unsigned char 
  1766 ;;  counter         1    4[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2    0[COMRAM] int 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;Total ram usage:        8 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_vfpfcnvrt
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text11
  1790   0014CA                     __ptext11:
  1791                           	callstack 0
  1792   0014CA                     ___awdiv:
  1793                           	callstack 26
  1794   0014CA  0E00               	movlw	0
  1795   0014CC  6E40               	movwf	___awdiv@sign^0,c
  1796   0014CE  BE3E               	btfsc	(___awdiv@divisor+1)^0,7,c
  1797   0014D0  EF6E  F00A         	goto	u1280
  1798   0014D4  EF6C  F00A         	goto	u1281
  1799   0014D8                     u1281:
  1800   0014D8  EF74  F00A         	goto	l2292
  1801   0014DC                     u1280:
  1802   0014DC  6C3D               	negf	___awdiv@divisor^0,c
  1803   0014DE  1E3E               	comf	(___awdiv@divisor+1)^0,f,c
  1804   0014E0  B0D8               	btfsc	status,0,c
  1805   0014E2  2A3E               	incf	(___awdiv@divisor+1)^0,f,c
  1806   0014E4  0E01               	movlw	1
  1807   0014E6  6E40               	movwf	___awdiv@sign^0,c
  1808   0014E8                     l2292:
  1809   0014E8  BE3C               	btfsc	(___awdiv@dividend+1)^0,7,c
  1810   0014EA  EF7B  F00A         	goto	u1290
  1811   0014EE  EF79  F00A         	goto	u1291
  1812   0014F2                     u1291:
  1813   0014F2  EF81  F00A         	goto	l2298
  1814   0014F6                     u1290:
  1815   0014F6  6C3B               	negf	___awdiv@dividend^0,c
  1816   0014F8  1E3C               	comf	(___awdiv@dividend+1)^0,f,c
  1817   0014FA  B0D8               	btfsc	status,0,c
  1818   0014FC  2A3C               	incf	(___awdiv@dividend+1)^0,f,c
  1819   0014FE  0E01               	movlw	1
  1820   001500  1A40               	xorwf	___awdiv@sign^0,f,c
  1821   001502                     l2298:
  1822   001502  0E00               	movlw	0
  1823   001504  6E42               	movwf	(___awdiv@quotient+1)^0,c
  1824   001506  0E00               	movlw	0
  1825   001508  6E41               	movwf	___awdiv@quotient^0,c
  1826   00150A  503D               	movf	___awdiv@divisor^0,w,c
  1827   00150C  103E               	iorwf	(___awdiv@divisor+1)^0,w,c
  1828   00150E  B4D8               	btfsc	status,2,c
  1829   001510  EF8C  F00A         	goto	u1301
  1830   001514  EF8E  F00A         	goto	u1300
  1831   001518                     u1301:
  1832   001518  EFB6  F00A         	goto	l2320
  1833   00151C                     u1300:
  1834   00151C  0E01               	movlw	1
  1835   00151E  6E3F               	movwf	___awdiv@counter^0,c
  1836   001520  EF96  F00A         	goto	l2306
  1837   001524                     l2304:
  1838   001524  90D8               	bcf	status,0,c
  1839   001526  363D               	rlcf	___awdiv@divisor^0,f,c
  1840   001528  363E               	rlcf	(___awdiv@divisor+1)^0,f,c
  1841   00152A  2A3F               	incf	___awdiv@counter^0,f,c
  1842   00152C                     l2306:
  1843   00152C  AE3E               	btfss	(___awdiv@divisor+1)^0,7,c
  1844   00152E  EF9B  F00A         	goto	u1311
  1845   001532  EF9D  F00A         	goto	u1310
  1846   001536                     u1311:
  1847   001536  EF92  F00A         	goto	l2304
  1848   00153A                     u1310:
  1849   00153A                     l2308:
  1850   00153A  90D8               	bcf	status,0,c
  1851   00153C  3641               	rlcf	___awdiv@quotient^0,f,c
  1852   00153E  3642               	rlcf	(___awdiv@quotient+1)^0,f,c
  1853   001540  503D               	movf	___awdiv@divisor^0,w,c
  1854   001542  5C3B               	subwf	___awdiv@dividend^0,w,c
  1855   001544  503E               	movf	(___awdiv@divisor+1)^0,w,c
  1856   001546  583C               	subwfb	(___awdiv@dividend+1)^0,w,c
  1857   001548  A0D8               	btfss	status,0,c
  1858   00154A  EFA9  F00A         	goto	u1321
  1859   00154E  EFAB  F00A         	goto	u1320
  1860   001552                     u1321:
  1861   001552  EFB0  F00A         	goto	l2316
  1862   001556                     u1320:
  1863   001556  503D               	movf	___awdiv@divisor^0,w,c
  1864   001558  5E3B               	subwf	___awdiv@dividend^0,f,c
  1865   00155A  503E               	movf	(___awdiv@divisor+1)^0,w,c
  1866   00155C  5A3C               	subwfb	(___awdiv@dividend+1)^0,f,c
  1867   00155E  8041               	bsf	___awdiv@quotient^0,0,c
  1868   001560                     l2316:
  1869   001560  90D8               	bcf	status,0,c
  1870   001562  323E               	rrcf	(___awdiv@divisor+1)^0,f,c
  1871   001564  323D               	rrcf	___awdiv@divisor^0,f,c
  1872   001566  2E3F               	decfsz	___awdiv@counter^0,f,c
  1873   001568  EF9D  F00A         	goto	l2308
  1874   00156C                     l2320:
  1875   00156C  5040               	movf	___awdiv@sign^0,w,c
  1876   00156E  B4D8               	btfsc	status,2,c
  1877   001570  EFBC  F00A         	goto	u1331
  1878   001574  EFBE  F00A         	goto	u1330
  1879   001578                     u1331:
  1880   001578  EFC2  F00A         	goto	l2324
  1881   00157C                     u1330:
  1882   00157C  6C41               	negf	___awdiv@quotient^0,c
  1883   00157E  1E42               	comf	(___awdiv@quotient+1)^0,f,c
  1884   001580  B0D8               	btfsc	status,0,c
  1885   001582  2A42               	incf	(___awdiv@quotient+1)^0,f,c
  1886   001584                     l2324:
  1887   001584  C041  F03B         	movff	___awdiv@quotient,?___awdiv
  1888   001588  C042  F03C         	movff	___awdiv@quotient+1,?___awdiv+1
  1889   00158C  0012               	return		;funcret
  1890   00158E                     __end_of___awdiv:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _memset *****************
  1894 ;; Defined at:
  1895 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  dest            1    0[COMRAM] PTR void 
  1898 ;;		 -> text(4), 
  1899 ;;  c               2    1[COMRAM] int 
  1900 ;;  n               2    3[COMRAM] unsigned int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  p               1    5[COMRAM] PTR unsigned char 
  1903 ;;		 -> text(4), 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      PTR void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1913 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;Total ram usage:        6 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_convert_uint8_to_string
  1923 ;;		_convert_uint16_to_string
  1924 ;;		_convert_uint32_to_string
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text12
  1929   0019F8                     __ptext12:
  1930                           	callstack 0
  1931   0019F8                     _memset:
  1932                           	callstack 29
  1933   0019F8  C03B  F040         	movff	memset@dest,memset@p
  1934   0019FC  EF06  F00D         	goto	l2584
  1935   001A00                     l2580:
  1936   001A00  5040               	movf	memset@p^0,w,c
  1937   001A02  6ED9               	movwf	fsr2l,c
  1938   001A04  6ADA               	clrf	fsr2h,c
  1939   001A06  C03C  FFDF         	movff	memset@c,indf2
  1940   001A0A  2A40               	incf	memset@p^0,f,c
  1941   001A0C                     l2584:
  1942   001A0C  063E               	decf	memset@n^0,f,c
  1943   001A0E  A0D8               	btfss	status,0,c
  1944   001A10  063F               	decf	(memset@n+1)^0,f,c
  1945   001A12  283E               	incf	memset@n^0,w,c
  1946   001A14  E106               	bnz	u1681
  1947   001A16  283F               	incf	(memset@n+1)^0,w,c
  1948   001A18  A4D8               	btfss	status,2,c
  1949   001A1A  EF11  F00D         	goto	u1681
  1950   001A1E  EF13  F00D         	goto	u1680
  1951   001A22                     u1681:
  1952   001A22  EF00  F00D         	goto	l2580
  1953   001A26                     u1680:
  1954   001A26  0012               	return		;funcret
  1955   001A28                     __end_of_memset:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _application_initialize *****************
  1959 ;; Defined at:
  1960 ;;		line 36 in file "application.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 5
  1981 ;; This function calls:
  1982 ;;		_Ecu_initialize
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text13
  1989   001A54                     __ptext13:
  1990                           	callstack 0
  1991   001A54                     _application_initialize:
  1992                           	callstack 25
  1993   001A54                     
  1994                           ;application.c: 37:     ret = Ecu_initialize();
  1995   001A54  EC25  F00D         	call	_Ecu_initialize	;wreg free
  1996   001A58  6E6C               	movwf	_ret^0,c
  1997   001A5A  0012               	return		;funcret
  1998   001A5C                     __end_of_application_initialize:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _Ecu_initialize *****************
  2002 ;; Defined at:
  2003 ;;		line 40 in file "ECU_Layer/ECU_LAYER.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      unsigned char 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;Total ram usage:        0 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 4
  2024 ;; This function calls:
  2025 ;;		_lcd_8bit_initialize
  2026 ;; This function is called by:
  2027 ;;		_application_initialize
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text14
  2032   001A4A                     __ptext14:
  2033                           	callstack 0
  2034   001A4A                     _Ecu_initialize:
  2035                           	callstack 25
  2036   001A4A                     
  2037                           ;ECU_Layer/ECU_LAYER.c: 43:     lcd_8bit_initialize(&lcd1);
  2038   001A4A  0E31               	movlw	low _lcd1
  2039   001A4C  6E4A               	movwf	lcd_8bit_initialize@lcd^0,c
  2040   001A4E  ECFC  F009         	call	_lcd_8bit_initialize	;wreg free
  2041   001A52  0012               	return		;funcret
  2042   001A54                     __end_of_Ecu_initialize:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _lcd_8bit_initialize *****************
  2046 ;; Defined at:
  2047 ;;		line 19 in file "ECU_Layer/LCD/ecu_lcd.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  lcd             1   15[COMRAM] PTR const struct .
  2050 ;;		 -> lcd1(10), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  counter         1   18[COMRAM] unsigned char 
  2053 ;;  ret             1   17[COMRAM] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      unsigned char 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2063 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;Total ram usage:        4 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 3
  2070 ;; This function calls:
  2071 ;;		_gpio_pin_initialize
  2072 ;;		_lcd_8bit_send_command
  2073 ;; This function is called by:
  2074 ;;		_Ecu_initialize
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text15
  2079   0013F8                     __ptext15:
  2080                           	callstack 0
  2081   0013F8                     _lcd_8bit_initialize:
  2082                           	callstack 25
  2083   0013F8                     
  2084                           ;ECU_Layer/LCD/ecu_lcd.c: 21:     uint8 counter = 0;
  2085   0013F8  0E00               	movlw	0
  2086   0013FA  6E4D               	movwf	lcd_8bit_initialize@counter^0,c
  2087                           
  2088                           ;ECU_Layer/LCD/ecu_lcd.c: 22:     if(((void*)0) == lcd){
  2089   0013FC  504A               	movf	lcd_8bit_initialize@lcd^0,w,c
  2090   0013FE  A4D8               	btfss	status,2,c
  2091   001400  EF04  F00A         	goto	u1591
  2092   001404  EF06  F00A         	goto	u1590
  2093   001408                     u1591:
  2094   001408  EF08  F00A         	goto	l2470
  2095   00140C                     u1590:
  2096   00140C                     
  2097                           ;ECU_Layer/LCD/ecu_lcd.c: 24:     }
  2098   00140C  EF64  F00A         	goto	l102
  2099   001410                     l2470:
  2100                           
  2101                           ;ECU_Layer/LCD/ecu_lcd.c: 26:         ret = gpio_pin_initialize(&(lcd->rs));
  2102   001410  C04A  F043         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  2103   001414  EC71  F00C         	call	_gpio_pin_initialize	;wreg free
  2104   001418  6E4C               	movwf	lcd_8bit_initialize@ret^0,c
  2105                           
  2106                           ;ECU_Layer/LCD/ecu_lcd.c: 27:         ret = gpio_pin_initialize(&(lcd->enable));
  2107   00141A  284A               	incf	lcd_8bit_initialize@lcd^0,w,c
  2108   00141C  6E43               	movwf	gpio_pin_initialize@_pin_config^0,c
  2109   00141E  EC71  F00C         	call	_gpio_pin_initialize	;wreg free
  2110   001422  6E4C               	movwf	lcd_8bit_initialize@ret^0,c
  2111   001424                     
  2112                           ;ECU_Layer/LCD/ecu_lcd.c: 28:         for(counter = 0;counter < 8;counter++){
  2113   001424  0E00               	movlw	0
  2114   001426  6E4D               	movwf	lcd_8bit_initialize@counter^0,c
  2115   001428                     l2478:
  2116   001428  504A               	movf	lcd_8bit_initialize@lcd^0,w,c
  2117   00142A  244D               	addwf	lcd_8bit_initialize@counter^0,w,c
  2118   00142C  0F02               	addlw	2
  2119   00142E  6E43               	movwf	gpio_pin_initialize@_pin_config^0,c
  2120   001430  EC71  F00C         	call	_gpio_pin_initialize	;wreg free
  2121   001434                     
  2122                           ;ECU_Layer/LCD/ecu_lcd.c: 30:         }
  2123   001434  2A4D               	incf	lcd_8bit_initialize@counter^0,f,c
  2124   001436  0E07               	movlw	7
  2125   001438  644D               	cpfsgt	lcd_8bit_initialize@counter^0,c
  2126   00143A  EF21  F00A         	goto	u1601
  2127   00143E  EF23  F00A         	goto	u1600
  2128   001442                     u1601:
  2129   001442  EF14  F00A         	goto	l2478
  2130   001446                     u1600:
  2131   001446                     
  2132                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         _delay((unsigned long)((20)*(8000000/4000.0)));
  2133   001446  0E34               	movlw	52
  2134   001448  6E4B               	movwf	??_lcd_8bit_initialize^0,c
  2135   00144A  0EF2               	movlw	242
  2136   00144C                     u2157:
  2137   00144C  2EE8               	decfsz	wreg,f,c
  2138   00144E  D7FE               	bra	u2157
  2139   001450  2E4B               	decfsz	??_lcd_8bit_initialize^0,f,c
  2140   001452  D7FC               	bra	u2157
  2141   001454                     
  2142                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         lcd_8bit_send_command(lcd,0x38);
  2143   001454  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2144   001458  0E38               	movlw	56
  2145   00145A  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2146   00145C  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2147   001460                     
  2148                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         _delay((unsigned long)((5)*(8000000/4000.0)));
  2149   001460  0E0D               	movlw	13
  2150   001462  6E4B               	movwf	??_lcd_8bit_initialize^0,c
  2151   001464  0EFC               	movlw	252
  2152   001466                     u2167:
  2153   001466  2EE8               	decfsz	wreg,f,c
  2154   001468  D7FE               	bra	u2167
  2155   00146A  2E4B               	decfsz	??_lcd_8bit_initialize^0,f,c
  2156   00146C  D7FC               	bra	u2167
  2157                           
  2158                           ;ECU_Layer/LCD/ecu_lcd.c: 34:         lcd_8bit_send_command(lcd,0x38);
  2159   00146E  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2160   001472  0E38               	movlw	56
  2161   001474  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2162   001476  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2163   00147A                     
  2164                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         _delay((unsigned long)((150)*(8000000/4000000.0)))
      +                          ;
  2165   00147A  0E64               	movlw	100
  2166   00147C                     u2177:
  2167   00147C  2EE8               	decfsz	wreg,f,c
  2168   00147E  D7FE               	bra	u2177
  2169   001480                     
  2170                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         lcd_8bit_send_command(lcd,0x38);
  2171   001480  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2172   001484  0E38               	movlw	56
  2173   001486  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2174   001488  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2175   00148C                     
  2176                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         lcd_8bit_send_command(lcd,0x01);
  2177   00148C  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2178   001490  0E01               	movlw	1
  2179   001492  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2180   001494  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2181   001498                     
  2182                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         lcd_8bit_send_command(lcd,0x02);
  2183   001498  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2184   00149C  0E02               	movlw	2
  2185   00149E  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2186   0014A0  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2187   0014A4                     
  2188                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         lcd_8bit_send_command(lcd,0x06);
  2189   0014A4  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2190   0014A8  0E06               	movlw	6
  2191   0014AA  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2192   0014AC  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2193   0014B0                     
  2194                           ;ECU_Layer/LCD/ecu_lcd.c: 40:         lcd_8bit_send_command(lcd,0x0C);
  2195   0014B0  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2196   0014B4  0E0C               	movlw	12
  2197   0014B6  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2198   0014B8  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2199   0014BC                     
  2200                           ;ECU_Layer/LCD/ecu_lcd.c: 41:         lcd_8bit_send_command(lcd,0x38);
  2201   0014BC  C04A  F044         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2202   0014C0  0E38               	movlw	56
  2203   0014C2  6E45               	movwf	lcd_8bit_send_command@command^0,c
  2204   0014C4  ECAF  F00B         	call	_lcd_8bit_send_command	;wreg free
  2205   0014C8                     l102:
  2206   0014C8  0012               	return		;funcret
  2207   0014CA                     __end_of_lcd_8bit_initialize:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _lcd_8bit_send_command *****************
  2211 ;; Defined at:
  2212 ;;		line 45 in file "ECU_Layer/LCD/ecu_lcd.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  lcd             1    9[COMRAM] PTR const struct .
  2215 ;;		 -> lcd1(10), 
  2216 ;;  command         1   10[COMRAM] unsigned char 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  counter         1   14[COMRAM] unsigned char 
  2219 ;;  ret             1   13[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      unsigned char 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;Total ram usage:        6 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 2
  2236 ;; This function calls:
  2237 ;;		_enable_signal_8bits
  2238 ;;		_gpio_pin_write_logic
  2239 ;; This function is called by:
  2240 ;;		_lcd_8bit_initialize
  2241 ;;		_lcd_8bit_custom_character
  2242 ;;		_lcd_8bits_set_cursor
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text16
  2247   00175E                     __ptext16:
  2248                           	callstack 0
  2249   00175E                     _lcd_8bit_send_command:
  2250                           	callstack 25
  2251   00175E                     
  2252                           ;ECU_Layer/LCD/ecu_lcd.c: 48:     uint8 counter = 0;
  2253   00175E  0E00               	movlw	0
  2254   001760  6E49               	movwf	lcd_8bit_send_command@counter^0,c
  2255                           
  2256                           ;ECU_Layer/LCD/ecu_lcd.c: 49:     if(((void*)0) == lcd){
  2257   001762  5044               	movf	lcd_8bit_send_command@lcd^0,w,c
  2258   001764  A4D8               	btfss	status,2,c
  2259   001766  EFB7  F00B         	goto	u1461
  2260   00176A  EFB9  F00B         	goto	u1460
  2261   00176E                     u1461:
  2262   00176E  EFBD  F00B         	goto	l2396
  2263   001772                     u1460:
  2264   001772                     
  2265                           ;ECU_Layer/LCD/ecu_lcd.c: 50:         ret = (std_ReturnType)0x00;
  2266   001772  0E00               	movlw	0
  2267   001774  6E48               	movwf	lcd_8bit_send_command@ret^0,c
  2268                           
  2269                           ;ECU_Layer/LCD/ecu_lcd.c: 51:     }
  2270   001776  EFE8  F00B         	goto	l2412
  2271   00177A                     l2396:
  2272   00177A  C044  F03B         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2273   00177E  0E00               	movlw	0
  2274   001780  6E3C               	movwf	gpio_pin_write_logic@logic^0,c
  2275   001782  EC84  F009         	call	_gpio_pin_write_logic	;wreg free
  2276   001786                     
  2277                           ;ECU_Layer/LCD/ecu_lcd.c: 54:         for(counter = 0;counter < 8;counter++){
  2278   001786  0E00               	movlw	0
  2279   001788  6E49               	movwf	lcd_8bit_send_command@counter^0,c
  2280   00178A                     l2404:
  2281                           
  2282                           ;ECU_Layer/LCD/ecu_lcd.c: 55:             ret = gpio_pin_write_logic(&(lcd->data_pins[co
      +                          unter]),(command >> counter) & (uint8)0x01);
  2283   00178A  5044               	movf	lcd_8bit_send_command@lcd^0,w,c
  2284   00178C  2449               	addwf	lcd_8bit_send_command@counter^0,w,c
  2285   00178E  0F02               	addlw	2
  2286   001790  6E3B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2287   001792  C049  F046         	movff	lcd_8bit_send_command@counter,??_lcd_8bit_send_command
  2288   001796  C045  F047         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  2289   00179A  2A46               	incf	??_lcd_8bit_send_command^0,f,c
  2290   00179C  EFD2  F00B         	goto	u1474
  2291   0017A0                     u1475:
  2292   0017A0  90D8               	bcf	status,0,c
  2293   0017A2  3247               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  2294   0017A4                     u1474:
  2295   0017A4  2E46               	decfsz	??_lcd_8bit_send_command^0,f,c
  2296   0017A6  EFD0  F00B         	goto	u1475
  2297   0017AA  5047               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  2298   0017AC  0B01               	andlw	1
  2299   0017AE  6E3C               	movwf	gpio_pin_write_logic@logic^0,c
  2300   0017B0  EC84  F009         	call	_gpio_pin_write_logic	;wreg free
  2301   0017B4  6E48               	movwf	lcd_8bit_send_command@ret^0,c
  2302   0017B6                     
  2303                           ;ECU_Layer/LCD/ecu_lcd.c: 56:         }
  2304   0017B6  2A49               	incf	lcd_8bit_send_command@counter^0,f,c
  2305   0017B8  0E07               	movlw	7
  2306   0017BA  6449               	cpfsgt	lcd_8bit_send_command@counter^0,c
  2307   0017BC  EFE2  F00B         	goto	u1481
  2308   0017C0  EFE4  F00B         	goto	u1480
  2309   0017C4                     u1481:
  2310   0017C4  EFC5  F00B         	goto	l2404
  2311   0017C8                     u1480:
  2312   0017C8                     
  2313                           ;ECU_Layer/LCD/ecu_lcd.c: 58:         enable_signal_8bits(lcd);
  2314   0017C8  C044  F043         	movff	lcd_8bit_send_command@lcd,enable_signal_8bits@lcd
  2315   0017CC  ECAD  F00C         	call	_enable_signal_8bits	;wreg free
  2316   0017D0                     l2412:
  2317                           
  2318                           ;ECU_Layer/LCD/ecu_lcd.c: 60:     return ret;
  2319   0017D0  5048               	movf	lcd_8bit_send_command@ret^0,w,c
  2320   0017D2  0012               	return		;funcret
  2321   0017D4                     __end_of_lcd_8bit_send_command:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _enable_signal_8bits *****************
  2325 ;; Defined at:
  2326 ;;		line 299 in file "ECU_Layer/LCD/ecu_lcd.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  lcd             1    8[COMRAM] PTR const struct .
  2329 ;;		 -> lcd1(10), 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  ret             1    0        unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      unsigned char 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;Total ram usage:        1 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 1
  2348 ;; This function calls:
  2349 ;;		_gpio_pin_write_logic
  2350 ;; This function is called by:
  2351 ;;		_lcd_8bit_send_command
  2352 ;;		_lcd_8bit_send_char
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text17
  2357   00195A                     __ptext17:
  2358                           	callstack 0
  2359   00195A                     _enable_signal_8bits:
  2360                           	callstack 27
  2361   00195A                     
  2362                           ;ECU_Layer/LCD/ecu_lcd.c: 301:     if(((void*)0) == lcd){
  2363   00195A  5043               	movf	enable_signal_8bits@lcd^0,w,c
  2364   00195C  A4D8               	btfss	status,2,c
  2365   00195E  EFB3  F00C         	goto	u1271
  2366   001962  EFB5  F00C         	goto	u1270
  2367   001966                     u1271:
  2368   001966  EFB7  F00C         	goto	l2276
  2369   00196A                     u1270:
  2370   00196A                     
  2371                           ;ECU_Layer/LCD/ecu_lcd.c: 303:     }
  2372   00196A  EFC7  F00C         	goto	l204
  2373   00196E                     l2276:
  2374   00196E  2843               	incf	enable_signal_8bits@lcd^0,w,c
  2375   001970  6E3B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2376   001972  0E01               	movlw	1
  2377   001974  6E3C               	movwf	gpio_pin_write_logic@logic^0,c
  2378   001976  EC84  F009         	call	_gpio_pin_write_logic	;wreg free
  2379   00197A                     
  2380                           ;ECU_Layer/LCD/ecu_lcd.c: 306:         _delay((unsigned long)((5)*(8000000/4000000.0)));
  2381   00197A  0E03               	movlw	3
  2382   00197C                     u2187:
  2383   00197C  2EE8               	decfsz	wreg,f,c
  2384   00197E  D7FE               	bra	u2187
  2385   001980  0000               	nop	
  2386   001982  2843               	incf	enable_signal_8bits@lcd^0,w,c
  2387   001984  6E3B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2388   001986  0E00               	movlw	0
  2389   001988  6E3C               	movwf	gpio_pin_write_logic@logic^0,c
  2390   00198A  EC84  F009         	call	_gpio_pin_write_logic	;wreg free
  2391   00198E                     l204:
  2392   00198E  0012               	return		;funcret
  2393   001990                     __end_of_enable_signal_8bits:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _gpio_pin_initialize *****************
  2397 ;; Defined at:
  2398 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  2401 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  ret             1    9[COMRAM] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      unsigned char 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 1
  2420 ;; This function calls:
  2421 ;;		_gpio_pin_direction_intialize
  2422 ;;		_gpio_pin_write_logic
  2423 ;; This function is called by:
  2424 ;;		_lcd_8bit_initialize
  2425 ;;		_sev_seg_initialize
  2426 ;;		_keypad_initialize
  2427 ;;		_lcd_4bit_initialize
  2428 ;;		_led_initialize
  2429 ;;		_motor_initialize
  2430 ;;		_relay_initialization
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text18
  2435   0018E2                     __ptext18:
  2436                           	callstack 0
  2437   0018E2                     _gpio_pin_initialize:
  2438                           	callstack 26
  2439   0018E2                     
  2440                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:     std_ReturnType ret = (std_ReturnType)0x01;
  2441   0018E2  0E01               	movlw	1
  2442   0018E4  6E44               	movwf	gpio_pin_initialize@ret^0,c
  2443                           
  2444                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config ){
  2445   0018E6  5043               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2446   0018E8  A4D8               	btfss	status,2,c
  2447   0018EA  EF79  F00C         	goto	u1451
  2448   0018EE  EF7B  F00C         	goto	u1450
  2449   0018F2                     u1451:
  2450   0018F2  EF7F  F00C         	goto	l2386
  2451   0018F6                     u1450:
  2452   0018F6                     
  2453                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:         ret = (std_ReturnType)0x00;
  2454   0018F6  0E00               	movlw	0
  2455   0018F8  6E44               	movwf	gpio_pin_initialize@ret^0,c
  2456                           
  2457                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:     }
  2458   0018FA  EF8E  F00C         	goto	l2388
  2459   0018FE                     l2386:
  2460                           
  2461                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:         gpio_pin_direction_intialize(_pin_config);
  2462   0018FE  C043  F03B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  2463   001902  ECFB  F008         	call	_gpio_pin_direction_intialize	;wreg free
  2464                           
  2465                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:         gpio_pin_write_logic(_pin_config,_pin_config->
      +                          logic);
  2466   001906  C043  F03B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2467   00190A  5043               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2468   00190C  6ED9               	movwf	fsr2l,c
  2469   00190E  6ADA               	clrf	fsr2h,c
  2470   001910  0E00               	movlw	0
  2471   001912  BEDF               	btfsc	indf2,7,c
  2472   001914  0E01               	movlw	1
  2473   001916  6E3C               	movwf	gpio_pin_write_logic@logic^0,c
  2474   001918  EC84  F009         	call	_gpio_pin_write_logic	;wreg free
  2475   00191C                     l2388:
  2476                           
  2477                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     return ret;
  2478   00191C  5044               	movf	gpio_pin_initialize@ret^0,w,c
  2479   00191E  0012               	return		;funcret
  2480   001920                     __end_of_gpio_pin_initialize:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _gpio_pin_write_logic *****************
  2484 ;; Defined at:
  2485 ;;		line 68 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2488 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  2489 ;;		 -> relay_initialization@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2490 ;;  logic           1    1[COMRAM] enum E2981
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  ret             1    7[COMRAM] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      unsigned char 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:        8 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_lcd_8bit_send_command
  2512 ;;		_lcd_8bit_send_char
  2513 ;;		_enable_signal_8bits
  2514 ;;		_gpio_pin_initialize
  2515 ;;		_sev_seg_write_number
  2516 ;;		_keypad_read_value
  2517 ;;		_lcd_4bit_send_command
  2518 ;;		_lcd_4bit_send_char
  2519 ;;		_lcd_send_8bits
  2520 ;;		_lcd_send_4bits
  2521 ;;		_enable_signal_4bits
  2522 ;;		_led_turn_on
  2523 ;;		_led_turn_off
  2524 ;;		_motor_turn_right
  2525 ;;		_motor_turn_left
  2526 ;;		_motor_stop
  2527 ;;		_relay_turn_on
  2528 ;;		_relay_turn_off
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text19
  2533   001308                     __ptext19:
  2534                           	callstack 0
  2535   001308                     _gpio_pin_write_logic:
  2536                           	callstack 28
  2537   001308                     
  2538                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:     std_ReturnType ret = (std_ReturnType)0x01;
  2539   001308  0E01               	movlw	1
  2540   00130A  6E42               	movwf	gpio_pin_write_logic@ret^0,c
  2541                           
  2542                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:     if(((void*)0) == _pin_config){
  2543   00130C  503B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2544   00130E  A4D8               	btfss	status,2,c
  2545   001310  EF8C  F009         	goto	u1191
  2546   001314  EF8E  F009         	goto	u1190
  2547   001318                     u1191:
  2548   001318  EFE5  F009         	goto	l2244
  2549   00131C                     u1190:
  2550   00131C                     
  2551                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:         ret = (std_ReturnType)0x00;
  2552   00131C  0E00               	movlw	0
  2553   00131E  6E42               	movwf	gpio_pin_write_logic@ret^0,c
  2554                           
  2555                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     }
  2556   001320  EFFA  F009         	goto	l2246
  2557   001324                     l2238:
  2558                           
  2559                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
  2560   001324  503B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2561   001326  6ED9               	movwf	fsr2l,c
  2562   001328  6ADA               	clrf	fsr2h,c
  2563   00132A  30DF               	rrcf	223,w,c
  2564   00132C  32E8               	rrcf	wreg,f,c
  2565   00132E  32E8               	rrcf	wreg,f,c
  2566   001330  0B07               	andlw	7
  2567   001332  6E3D               	movwf	??_gpio_pin_write_logic^0,c
  2568   001334  0E01               	movlw	1
  2569   001336  6E3E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2570   001338  2A3D               	incf	??_gpio_pin_write_logic^0,f,c
  2571   00133A  EFA1  F009         	goto	u1204
  2572   00133E                     u1205:
  2573   00133E  90D8               	bcf	status,0,c
  2574   001340  363E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2575   001342                     u1204:
  2576   001342  2E3D               	decfsz	??_gpio_pin_write_logic^0,f,c
  2577   001344  EF9F  F009         	goto	u1205
  2578   001348  503E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2579   00134A  0AFF               	xorlw	255
  2580   00134C  6E3F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2581   00134E  503B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2582   001350  6ED9               	movwf	fsr2l,c
  2583   001352  6ADA               	clrf	fsr2h,c
  2584   001354  50DF               	movf	223,w,c
  2585   001356  0B07               	andlw	7
  2586   001358  0D02               	mullw	2
  2587   00135A  50F3               	movf	243,w,c
  2588   00135C  0F1B               	addlw	low _lat_registers
  2589   00135E  6ED9               	movwf	fsr2l,c
  2590   001360  6ADA               	clrf	fsr2h,c
  2591   001362  CFDE F040          	movff	postinc2,??_gpio_pin_write_logic+3
  2592   001366  CFDD F041          	movff	postdec2,??_gpio_pin_write_logic+4
  2593   00136A  C040  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2594   00136E  C041  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2595   001372  503F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2596   001374  16DF               	andwf	indf2,f,c
  2597                           
  2598                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 break;
  2599   001376  EFFA  F009         	goto	l2246
  2600   00137A                     l2240:
  2601                           
  2602                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  2603   00137A  503B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2604   00137C  6ED9               	movwf	fsr2l,c
  2605   00137E  6ADA               	clrf	fsr2h,c
  2606   001380  30DF               	rrcf	223,w,c
  2607   001382  32E8               	rrcf	wreg,f,c
  2608   001384  32E8               	rrcf	wreg,f,c
  2609   001386  0B07               	andlw	7
  2610   001388  6E3D               	movwf	??_gpio_pin_write_logic^0,c
  2611   00138A  0E01               	movlw	1
  2612   00138C  6E3E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2613   00138E  2A3D               	incf	??_gpio_pin_write_logic^0,f,c
  2614   001390  EFCC  F009         	goto	u1214
  2615   001394                     u1215:
  2616   001394  90D8               	bcf	status,0,c
  2617   001396  363E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2618   001398                     u1214:
  2619   001398  2E3D               	decfsz	??_gpio_pin_write_logic^0,f,c
  2620   00139A  EFCA  F009         	goto	u1215
  2621   00139E  503B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2622   0013A0  6ED9               	movwf	fsr2l,c
  2623   0013A2  6ADA               	clrf	fsr2h,c
  2624   0013A4  50DF               	movf	223,w,c
  2625   0013A6  0B07               	andlw	7
  2626   0013A8  0D02               	mullw	2
  2627   0013AA  50F3               	movf	243,w,c
  2628   0013AC  0F1B               	addlw	low _lat_registers
  2629   0013AE  6ED9               	movwf	fsr2l,c
  2630   0013B0  6ADA               	clrf	fsr2h,c
  2631   0013B2  CFDE F03F          	movff	postinc2,??_gpio_pin_write_logic+2
  2632   0013B6  CFDD F040          	movff	postdec2,??_gpio_pin_write_logic+3
  2633   0013BA  C03F  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2634   0013BE  C040  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2635   0013C2  503E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2636   0013C4  12DF               	iorwf	indf2,f,c
  2637                           
  2638                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 break;
  2639   0013C6  EFFA  F009         	goto	l2246
  2640   0013CA                     l2244:
  2641   0013CA  503C               	movf	gpio_pin_write_logic@logic^0,w,c
  2642   0013CC  6E3D               	movwf	??_gpio_pin_write_logic^0,c
  2643   0013CE  6A3E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2644                           
  2645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2646                           ; Switch size 1, requested type "simple"
  2647                           ; Number of cases is 1, Range of values is 0 to 0
  2648                           ; switch strategies available:
  2649                           ; Name         Instructions Cycles
  2650                           ; simple_byte            4     3 (average)
  2651                           ;	Chosen strategy is simple_byte
  2652   0013D0  503E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2653   0013D2  0A00               	xorlw	0	; case 0
  2654   0013D4  B4D8               	btfsc	status,2,c
  2655   0013D6  EFEF  F009         	goto	l3096
  2656   0013DA  EFFA  F009         	goto	l2246
  2657   0013DE                     l3096:
  2658                           
  2659                           ; Switch size 1, requested type "simple"
  2660                           ; Number of cases is 2, Range of values is 0 to 1
  2661                           ; switch strategies available:
  2662                           ; Name         Instructions Cycles
  2663                           ; simple_byte            7     4 (average)
  2664                           ;	Chosen strategy is simple_byte
  2665   0013DE  503D               	movf	??_gpio_pin_write_logic^0,w,c
  2666   0013E0  0A00               	xorlw	0	; case 0
  2667   0013E2  B4D8               	btfsc	status,2,c
  2668   0013E4  EF92  F009         	goto	l2238
  2669   0013E8  0A01               	xorlw	1	; case 1
  2670   0013EA  B4D8               	btfsc	status,2,c
  2671   0013EC  EFBD  F009         	goto	l2240
  2672   0013F0  EFFA  F009         	goto	l2246
  2673   0013F4                     l2246:
  2674                           
  2675                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     return ret;
  2676   0013F4  5042               	movf	gpio_pin_write_logic@ret^0,w,c
  2677   0013F6  0012               	return		;funcret
  2678   0013F8                     __end_of_gpio_pin_write_logic:
  2679                           	callstack 0
  2680                           
  2681 ;; *************** function _gpio_pin_direction_intialize *****************
  2682 ;; Defined at:
  2683 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2686 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  ret             1    6[COMRAM] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      unsigned char 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2698 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;Total ram usage:        7 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_gpio_pin_initialize
  2708 ;;		_button_initialize
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text20
  2713   0011F6                     __ptext20:
  2714                           	callstack 0
  2715   0011F6                     _gpio_pin_direction_intialize:
  2716                           	callstack 26
  2717   0011F6                     
  2718                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     std_ReturnType ret = (std_ReturnType)0x01;
  2719   0011F6  0E01               	movlw	1
  2720   0011F8  6E41               	movwf	gpio_pin_direction_intialize@ret^0,c
  2721                           
  2722                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 - 1){
  2723   0011FA  503B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2724   0011FC  B4D8               	btfsc	status,2,c
  2725   0011FE  EF03  F009         	goto	u1221
  2726   001202  EF05  F009         	goto	u1220
  2727   001206                     u1221:
  2728   001206  EF15  F009         	goto	l2258
  2729   00120A                     u1220:
  2730   00120A  503B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2731   00120C  6ED9               	movwf	fsr2l,c
  2732   00120E  6ADA               	clrf	fsr2h,c
  2733   001210  30DF               	rrcf	223,w,c
  2734   001212  32E8               	rrcf	wreg,f,c
  2735   001214  32E8               	rrcf	wreg,f,c
  2736   001216  0B07               	andlw	7
  2737   001218  6E3C               	movwf	??_gpio_pin_direction_intialize^0,c
  2738   00121A  0E07               	movlw	7
  2739   00121C  643C               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2740   00121E  EF13  F009         	goto	u1231
  2741   001222  EF15  F009         	goto	u1230
  2742   001226                     u1231:
  2743   001226  EF6C  F009         	goto	l2266
  2744   00122A                     u1230:
  2745   00122A                     l2258:
  2746                           
  2747                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:         ret = (std_ReturnType)0x00;
  2748   00122A  0E00               	movlw	0
  2749   00122C  6E41               	movwf	gpio_pin_direction_intialize@ret^0,c
  2750                           
  2751                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     }
  2752   00122E  EF82  F009         	goto	l2268
  2753   001232                     l2260:
  2754                           
  2755                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1<<_pin_config->pin));
  2756   001232  503B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2757   001234  6ED9               	movwf	fsr2l,c
  2758   001236  6ADA               	clrf	fsr2h,c
  2759   001238  30DF               	rrcf	223,w,c
  2760   00123A  32E8               	rrcf	wreg,f,c
  2761   00123C  32E8               	rrcf	wreg,f,c
  2762   00123E  0B07               	andlw	7
  2763   001240  6E3C               	movwf	??_gpio_pin_direction_intialize^0,c
  2764   001242  0E01               	movlw	1
  2765   001244  6E3D               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2766   001246  2A3C               	incf	??_gpio_pin_direction_intialize^0,f,c
  2767   001248  EF28  F009         	goto	u1244
  2768   00124C                     u1245:
  2769   00124C  90D8               	bcf	status,0,c
  2770   00124E  363D               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2771   001250                     u1244:
  2772   001250  2E3C               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2773   001252  EF26  F009         	goto	u1245
  2774   001256  503D               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2775   001258  0AFF               	xorlw	255
  2776   00125A  6E3E               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2777   00125C  503B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2778   00125E  6ED9               	movwf	fsr2l,c
  2779   001260  6ADA               	clrf	fsr2h,c
  2780   001262  50DF               	movf	223,w,c
  2781   001264  0B07               	andlw	7
  2782   001266  0D02               	mullw	2
  2783   001268  50F3               	movf	243,w,c
  2784   00126A  0F25               	addlw	low _tris_registers
  2785   00126C  6ED9               	movwf	fsr2l,c
  2786   00126E  6ADA               	clrf	fsr2h,c
  2787   001270  CFDE F03F          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2788   001274  CFDD F040          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2789   001278  C03F  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2790   00127C  C040  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2791   001280  503E               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2792   001282  16DF               	andwf	indf2,f,c
  2793                           
  2794                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:             break;
  2795   001284  EF82  F009         	goto	l2268
  2796   001288                     l2262:
  2797                           
  2798                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  2799   001288  503B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2800   00128A  6ED9               	movwf	fsr2l,c
  2801   00128C  6ADA               	clrf	fsr2h,c
  2802   00128E  30DF               	rrcf	223,w,c
  2803   001290  32E8               	rrcf	wreg,f,c
  2804   001292  32E8               	rrcf	wreg,f,c
  2805   001294  0B07               	andlw	7
  2806   001296  6E3C               	movwf	??_gpio_pin_direction_intialize^0,c
  2807   001298  0E01               	movlw	1
  2808   00129A  6E3D               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2809   00129C  2A3C               	incf	??_gpio_pin_direction_intialize^0,f,c
  2810   00129E  EF53  F009         	goto	u1254
  2811   0012A2                     u1255:
  2812   0012A2  90D8               	bcf	status,0,c
  2813   0012A4  363D               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2814   0012A6                     u1254:
  2815   0012A6  2E3C               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2816   0012A8  EF51  F009         	goto	u1255
  2817   0012AC  503B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2818   0012AE  6ED9               	movwf	fsr2l,c
  2819   0012B0  6ADA               	clrf	fsr2h,c
  2820   0012B2  50DF               	movf	223,w,c
  2821   0012B4  0B07               	andlw	7
  2822   0012B6  0D02               	mullw	2
  2823   0012B8  50F3               	movf	243,w,c
  2824   0012BA  0F25               	addlw	low _tris_registers
  2825   0012BC  6ED9               	movwf	fsr2l,c
  2826   0012BE  6ADA               	clrf	fsr2h,c
  2827   0012C0  CFDE F03E          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2828   0012C4  CFDD F03F          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2829   0012C8  C03E  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2830   0012CC  C03F  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2831   0012D0  503D               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2832   0012D2  12DF               	iorwf	indf2,f,c
  2833                           
  2834                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             break;
  2835   0012D4  EF82  F009         	goto	l2268
  2836   0012D8                     l2266:
  2837   0012D8  503B               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2838   0012DA  6ED9               	movwf	fsr2l,c
  2839   0012DC  6ADA               	clrf	fsr2h,c
  2840   0012DE  BCDF               	btfsc	indf2,6,c
  2841   0012E0  EF74  F009         	goto	u1261
  2842   0012E4  EF77  F009         	goto	u1260
  2843   0012E8                     u1261:
  2844   0012E8  0E01               	movlw	1
  2845   0012EA  EF78  F009         	goto	u1266
  2846   0012EE                     u1260:
  2847   0012EE  0E00               	movlw	0
  2848   0012F0                     u1266:
  2849                           
  2850                           ; Switch size 1, requested type "simple"
  2851                           ; Number of cases is 2, Range of values is 0 to 1
  2852                           ; switch strategies available:
  2853                           ; Name         Instructions Cycles
  2854                           ; simple_byte            7     4 (average)
  2855                           ;	Chosen strategy is simple_byte
  2856   0012F0  0A00               	xorlw	0	; case 0
  2857   0012F2  B4D8               	btfsc	status,2,c
  2858   0012F4  EF19  F009         	goto	l2260
  2859   0012F8  0A01               	xorlw	1	; case 1
  2860   0012FA  B4D8               	btfsc	status,2,c
  2861   0012FC  EF44  F009         	goto	l2262
  2862   001300  EF15  F009         	goto	l2258
  2863   001304                     l2268:
  2864                           
  2865                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  2866   001304  5041               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2867   001306  0012               	return		;funcret
  2868   001308                     __end_of_gpio_pin_direction_intialize:
  2869                           	callstack 0
  2870                           
  2871                           	psect	rparam
  2872   000000                     
  2873                           	psect	config
  2874                           
  2875                           ; Padding undefined space
  2876   300000                     	org	3145728
  2877   300000  FF                 	db	255
  2878                           
  2879                           ;Config register CONFIG1H @ 0x300001
  2880                           ;	Oscillator Selection bits
  2881                           ;	OSC = HS, HS oscillator
  2882                           ;	Fail-Safe Clock Monitor Enable bit
  2883                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2884                           ;	Internal/External Oscillator Switchover bit
  2885                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2886   300001                     	org	3145729
  2887   300001  02                 	db	2
  2888                           
  2889                           ;Config register CONFIG2L @ 0x300002
  2890                           ;	Power-up Timer Enable bit
  2891                           ;	PWRT = OFF, PWRT disabled
  2892                           ;	Brown-out Reset Enable bits
  2893                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2894                           ;	Brown Out Reset Voltage bits
  2895                           ;	BORV = 1, 
  2896   300002                     	org	3145730
  2897   300002  09                 	db	9
  2898                           
  2899                           ;Config register CONFIG2H @ 0x300003
  2900                           ;	Watchdog Timer Enable bit
  2901                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2902                           ;	Watchdog Timer Postscale Select bits
  2903                           ;	WDTPS = 32768, 1:32768
  2904   300003                     	org	3145731
  2905   300003  1E                 	db	30
  2906                           
  2907                           ; Padding undefined space
  2908   300004                     	org	3145732
  2909   300004  FF                 	db	255
  2910                           
  2911                           ;Config register CONFIG3H @ 0x300005
  2912                           ;	CCP2 MUX bit
  2913                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2914                           ;	PORTB A/D Enable bit
  2915                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2916                           ;	Low-Power Timer1 Oscillator Enable bit
  2917                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2918                           ;	MCLR Pin Enable bit
  2919                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2920   300005                     	org	3145733
  2921   300005  81                 	db	129
  2922                           
  2923                           ;Config register CONFIG4L @ 0x300006
  2924                           ;	Stack Full/Underflow Reset Enable bit
  2925                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2926                           ;	Single-Supply ICSP Enable bit
  2927                           ;	LVP = OFF, Single-Supply ICSP disabled
  2928                           ;	Extended Instruction Set Enable bit
  2929                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2930                           ;	Background Debugger Enable bit
  2931                           ;	DEBUG = 0x1, unprogrammed default
  2932   300006                     	org	3145734
  2933   300006  81                 	db	129
  2934                           
  2935                           ; Padding undefined space
  2936   300007                     	org	3145735
  2937   300007  FF                 	db	255
  2938                           
  2939                           ;Config register CONFIG5L @ 0x300008
  2940                           ;	Code Protection bit
  2941                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2942                           ;	Code Protection bit
  2943                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2944                           ;	Code Protection bit
  2945                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2946                           ;	Code Protection bit
  2947                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2948   300008                     	org	3145736
  2949   300008  0F                 	db	15
  2950                           
  2951                           ;Config register CONFIG5H @ 0x300009
  2952                           ;	Boot Block Code Protection bit
  2953                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2954                           ;	Data EEPROM Code Protection bit
  2955                           ;	CPD = OFF, Data EEPROM not code-protected
  2956   300009                     	org	3145737
  2957   300009  C0                 	db	192
  2958                           
  2959                           ;Config register CONFIG6L @ 0x30000A
  2960                           ;	Write Protection bit
  2961                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2962                           ;	Write Protection bit
  2963                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2964                           ;	Write Protection bit
  2965                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2966                           ;	Write Protection bit
  2967                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2968   30000A                     	org	3145738
  2969   30000A  0F                 	db	15
  2970                           
  2971                           ;Config register CONFIG6H @ 0x30000B
  2972                           ;	Configuration Register Write Protection bit
  2973                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2974                           ;	Boot Block Write Protection bit
  2975                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2976                           ;	Data EEPROM Write Protection bit
  2977                           ;	WRTD = OFF, Data EEPROM not write-protected
  2978   30000B                     	org	3145739
  2979   30000B  E0                 	db	224
  2980                           
  2981                           ;Config register CONFIG7L @ 0x30000C
  2982                           ;	Table Read Protection bit
  2983                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2984                           ;	Table Read Protection bit
  2985                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2986                           ;	Table Read Protection bit
  2987                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2988                           ;	Table Read Protection bit
  2989                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2990   30000C                     	org	3145740
  2991   30000C  0F                 	db	15
  2992                           
  2993                           ;Config register CONFIG7H @ 0x30000D
  2994                           ;	Boot Block Table Read Protection bit
  2995                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2996   30000D                     	org	3145741
  2997   30000D  40                 	db	64
  2998                           tosu	equ	0xFFF
  2999                           tosh	equ	0xFFE
  3000                           tosl	equ	0xFFD
  3001                           stkptr	equ	0xFFC
  3002                           pclatu	equ	0xFFB
  3003                           pclath	equ	0xFFA
  3004                           pcl	equ	0xFF9
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           indf0	equ	0xFEF
  3012                           postinc0	equ	0xFEE
  3013                           postdec0	equ	0xFED
  3014                           preinc0	equ	0xFEC
  3015                           plusw0	equ	0xFEB
  3016                           fsr0h	equ	0xFEA
  3017                           fsr0l	equ	0xFE9
  3018                           wreg	equ	0xFE8
  3019                           indf1	equ	0xFE7
  3020                           postinc1	equ	0xFE6
  3021                           postdec1	equ	0xFE5
  3022                           preinc1	equ	0xFE4
  3023                           plusw1	equ	0xFE3
  3024                           fsr1h	equ	0xFE2
  3025                           fsr1l	equ	0xFE1
  3026                           bsr	equ	0xFE0
  3027                           indf2	equ	0xFDF
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           preinc2	equ	0xFDC
  3031                           plusw2	equ	0xFDB
  3032                           fsr2h	equ	0xFDA
  3033                           fsr2l	equ	0xFD9
  3034                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    56
    Data        58
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44     119
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    convert_uint8_to_string@str	PTR unsigned char  size(1) Largest target is 4
		 -> text(COMRAM[4]), 

    enable_signal_8bits@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_char@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 4
		 -> text(COMRAM[4]), 

    memset@dest	PTR void  size(1) Largest target is 4
		 -> text(COMRAM[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> text(COMRAM[4]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1266$buffer	PTR unsigned char  size(2) Largest target is 0

    S1266$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 4
		 -> text(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> text(COMRAM[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint8_to_string
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_enable_signal_8bits
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Ecu_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_enable_signal_8bits
    _enable_signal_8bits->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35482
             _application_initialize
            _convert_uint8_to_string
               _lcd_8bit_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string                                 3     1      2   11369
                                             15 COMRAM     3     1      2
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char                                   6     4      2   10951
                                              9 COMRAM     6     4      2
                _enable_signal_8bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_string                              3     2      1    4543
                                             42 COMRAM     2     1      1
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3591
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   19570
                     _Ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _Ecu_initialize                                       0     0      0   19570
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19570
                                             15 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                6     4      2   12471
                                              9 COMRAM     6     4      2
                _enable_signal_8bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _enable_signal_8bits                                  2     1      1    5248
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  2     1      1    6679
                                              8 COMRAM     2     1      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    5020
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _Ecu_initialize
       _lcd_8bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_8bit_send_command
           _enable_signal_8bits
             _gpio_pin_write_logic
           _gpio_pin_write_logic
   _convert_uint8_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_8bit_send_string
     _lcd_8bit_send_char
       _enable_signal_8bits
       _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      77       1       93.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      97      39        0.0%
DATA                 0      0      97       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jul 07 05:44:32 2024

             __end_of_lcd_8bit_send_char 175E                             ___awdiv@sign 0040  
                                    l102 14C8                                      l204 198E  
                                    l116 175C                                      l109 17D2  
                                    l321 1A52                                      l129 181E  
                                    l403 191E                                      l181 18A2  
                                    l720 163C                                      l369 1306  
                                    l473 1A5A                                      l386 13F6  
                                    l707 158C                                      _abs 19C4  
                                    _ret 006C                             ___awmod@sign 0040  
                    led_initialize@F3062 0073                                      wreg 0FE8  
                                   l1211 19F6             __end_of_lcd_8bit_send_string 1820  
                                   ?_abs 0041                                     l1204 18E0  
                                   l1223 16E6                                     l1208 19DE  
                                   l1160 19C2                                     l1153 1A26  
                                   l1234 1A5C                                     l2300 150A  
                                   l2310 1540                                     l2302 151C  
                                   l2240 137A                                     l2312 1556  
                                   l2304 1524                                     l2320 156C  
                                   l2234 1308                                     l2410 17C8  
                                   l2322 157C                                     l2314 155E  
                                   l2306 152C                                     l2330 1592  
                                   l2260 1232                                     l2236 131C  
                                   l2244 13CA                                     l2404 178A  
                                   l2412 17D0                                     l2500 14B0  
                                   l2324 1584                                     l2316 1560  
                                   l2308 153A                                     l2340 15C2  
                                   l2332 15A0                                     l2420 1068  
                                   l2262 1288                                     l2254 11F6  
                                   l2238 1324                                     l2246 13F4  
                                   l2406 17B6                                     l2502 14BC  
                                   l2318 1566                                     l2350 1608  
                                   l2342 15D4                                     l2334 15A8  
                                   l1198 11F4                                     l2430 10BA  
                                   l2422 1074                                     l2510 18BC  
                                   l2256 120A                                     l2280 1982  
                                   l2272 195A                                     l2408 17B8  
                                   l2360 1634                                     l2352 1610  
                                   l2344 15DC                                     l2336 15AC  
                                   l2328 158E                                     l2440 1140  
                                   l2432 10D2                                     l2424 1078  
                                   l2416 103E                                     l2512 18D8  
                                   l2520 1704                                     l2266 12D8  
                                   l2258 122A                                     l2274 196A  
                                   l2290 14E4                                     l2354 1616  
                                   l2346 15E4                                     l2338 15BA  
                                   l2370 1668                                     l2450 1194  
                                   l2442 1152                                     l2434 10DC  
                                   l2426 1082                                     l2418 1060  
                                   l2506 18A4                                     l2530 1740  
                                   l2522 1710                                     l3090 1A36  
                                   l2268 1304                                     l2276 196E  
                                   l2292 14E8                                     l2284 14CA  
                                   l2348 15F2                                     l2356 161C  
                                   l2380 19D2                                     l2372 1684  
                                   l2364 163E                                     l2452 11AE  
                                   l2444 1162                                     l2436 10F4  
                                   l2428 109E                                     l2460 11D2  
                                   l2508 18AC                                     l2532 1742  
                                   l2516 16E8                                     l2620 1806  
                                   l2612 17D4                                     l2382 18E2  
                                   l2278 197A                                     l2470 1410  
                                   l2294 14F6                                     l2286 14CE  
                                   l2358 162C                                     l2374 16B6  
                                   l2366 164E                                     l2446 1172  
                                   l2454 11B0                                     l2438 1124  
                                   l2534 1752                                     l2518 16FC  
                                   l2622 181C                                     l2614 17E8  
                                   l3086 1A28                                     l3096 13DE  
                                   l2384 18F6                                     l2392 175E  
                                   l2480 1434                                     l2472 1424  
                                   l2296 14FE                                     l2288 14DC  
                                   l2368 165E                                     l2448 1182  
                                   l2456 11C6                                     l2528 1714  
                                   l2536 175A                                     l2616 17F0  
                                   l3088 1A32                                     l2386 18FE  
                                   l2394 1772                                     l2490 147A  
                                   l2482 1436                                     l2466 13F8  
                                   l2298 1502                                     l2378 19C4  
                                   l2618 1804                                     l2388 191C  
                                   l2396 177A                                     l2492 1480  
                                   l2484 1446                                     l2468 140C  
                                   l2580 1A00                                     l2660 1890  
                                   l2652 1864                                     l2398 1786  
                                   l2494 148C                                     l2486 1454  
                                   l2478 1428                                     l2582 1A0A  
                                   l2590 19A0                                     l2654 1864  
                                   l2496 1498                                     l2488 1460  
                                   l2664 1A54                                     l2584 1A0C  
                                   l2592 19A8                                     l2656 1874  
                                   l2498 14A4                                     l2578 19F8  
                                   l2594 19B8                                     l2586 1990  
                                   l2658 1878                                     l2588 1998  
                                   l2598 1A4A                                     STR_1 1039  
                                   u1220 120A                                     u1204 1342  
                                   u1300 151C                                     u1221 1206  
                                   u1205 133E                                     u1301 1518  
                                   u1230 122A                                     u1214 1398  
                                   u1310 153A                                     u1231 1226  
                                   u1215 1394                                     u1311 1536  
                                   u1320 1556                                     u1400 164E  
                                   u1321 1552                                     u1401 164A  
                                   u1330 157C                                     u1410 165E  
                                   u1331 1578                                     u1411 165A  
                                   u1260 12EE                                     u1244 1250  
                                   u1340 15A0                                     u1420 1684  
                                   u1500 109E                                     u1261 12E8  
                                   u1245 124C                                     u1341 159C  
                                   u1421 1680                                     u1501 109A  
                                   _LATA 0F89                                     u1254 12A6  
                                   u1190 131C                                     u1270 196A  
                                   u1350 15BA                                     u1430 16B6  
                                   u1510 10BA                                     _LATB 0F8A  
                                   u1255 12A2                                     u1191 1318  
                                   u1271 1966                                     u1351 15B6  
                                   u1431 16B2                                     u1511 10B6  
                                   _LATC 0F8B                                     u1600 1446  
                                   u1280 14DC                                     u1360 15D4  
                                   u1440 19D2                                     u1520 10F0  
                                   _LATD 0F8C                                     u1601 1442  
                                   u1281 14D8                                     u1361 15D0  
                                   u1441 19CE                                     u1521 10EA  
                                   _LATE 0F8D                                     u1266 12F0  
                                   u1450 18F6                                     u1290 14F6  
                                   u1370 15F2                                     u1530 10F2  
                                   u1610 18D8                                     u1451 18F2  
                                   u1291 14F2                                     u1371 15EE  
                                   u1611 18D4                                     u1460 1772  
                                   u1380 1608                                     u1540 1152  
                                   u1620 16FC                                     u1700 17E8  
                                   u1461 176E                                     u2157 144C  
                                   u1381 1604                                     u1541 114E  
                                   u1621 16F8                                     u1701 17E4  
                                   u1390 162C                                     u1550 1162  
                                   u1710 181C                                     u2167 1466  
                                   u1391 1628                                     u1551 115E  
                                   u1711 1818                                     u1480 17C8  
                                   u1560 1172                                     u1640 1752  
                                   u1481 17C4                                     u2177 147C  
                                   u1561 116E                                     u1641 174E  
                                   u1474 17A4                                     u1570 1182  
                                   u1490 1060                                     u1634 172E  
                                   u2187 197C                                     u1475 17A0  
                                   u1571 117E                                     u1491 105C  
                                   u1635 172A                                     u1580 11C2  
                                   u1581 11BE                                     u1590 140C  
                                   u1750 1874                                     u1591 1408  
                                   u1751 1870                                     u1680 1A26  
                                   u1681 1A22                                     abs@a 0041  
                                   _lcd1 0031                                     _led1 0030  
                                   _dbuf 0080                                     _main 1A28  
                                   _prec 0069                                     _text 0074  
                                   fsr1h 0FE2                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000               lcd_8bit_initialize@counter 004D  
          __end_of_lcd_8bit_send_command 17D4                             ___param_bank 0000  
                                  ??_abs 0043                     _gpio_pin_write_logic 1308  
                                  ?_main 003B                 ??_application_initialize 004E  
                        __end_of___awdiv 158E                          __end_of___awmod 163E  
                        ___awdiv@divisor 003D                          ___awdiv@counter 003F  
                    relay_turn_off@F3065 006D                             vfpfcnvrt@fmt 0046  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                                  _flags 006B                                    _fputc 163E  
                                  _value 002F                                    _width 0067  
                                  _putch 1A5C                                    tablat 0FF5  
                                  status 0FD8                          __end_of_sprintf 19C4  
                        __initialization 1820                             __end_of_main 1A4A  
                  ?_gpio_pin_write_logic 003B                            _lat_registers 001B  
                                 ??_main 0067                           _Ecu_initialize 1A4A  
                          __activetblptr 0002                         led_turn_on@F3067 0072  
                                 ?_fputc 003B                         ___awdiv@dividend 003B  
                                 ?_putch 003B                            vfpfcnvrt@done 0049  
                           vfprintf@cfmt 0053                                ??___awdiv 003F  
                              ??___awmod 003F                     _lcd_8bit_send_string 17D4  
                                 _memset 19F8                   __end_of_Ecu_initialize 1A54  
                                 clear_0 1846                                   clear_1 1852  
                       ___awdiv@quotient 0041                          ___awmod@divisor 003D  
                                 isa$std 0001                          ___awmod@counter 003F  
gpio_pin_direction_intialize@_pin_config 003B                                   fputc@c 003B  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                                   putch@c 003B  
                       __end_of_vfprintf 18E2                                ??_sprintf 0058  
                _convert_uint8_to_string 1862                               __accesstop 0080  
                __end_of__initialization 1858                            ___rparam_used 0001  
             convert_uint8_to_string@str 0065                   ??_gpio_pin_write_logic 003D  
                         __pcstackCOMRAM 003B                            __end_of_fputc 16E8  
                  ?_lcd_8bit_send_string 004A                            __end_of_putch 1A5E  
                        ?_Ecu_initialize 003B                       _lcd_8bit_send_char 16E8  
                                ??_fputc 003E                                  ??_putch 003B  
                             __pbssBANK0 0080                      ?_lcd_8bit_send_char 0044  
                 _application_initialize 1A54                      _enable_signal_8bits 195A  
                 lcd_8bit_initialize@lcd 004A                   lcd_8bit_initialize@ret 004C  
                      led_turn_off@F3072 0071                                  ?_memset 003B  
                   ??_lcd_8bit_send_char 0046                     ?_enable_signal_8bits 0043  
                          _keypad_values 0001                     led_turn_toggle@F3077 0070  
              ??_convert_uint8_to_string 0066                           _tris_registers 0025  
                                __Hparam 0000                                  __Lparam 0000  
                 ??_lcd_8bit_send_string 004C                      _gpio_pin_initialize 18E2  
                  _lcd_8bit_send_command 175E                                  ___awdiv 14CA  
                                ___awmod 158E                                ?_vfprintf 0050  
                           __psmallconst 1000                                  __pcinit 1820  
                                __ramtop 1000                               _customChar 1031  
                                __ptext0 1A28                                  __ptext1 17D4  
                                __ptext2 16E8                                  __ptext3 1862  
                                __ptext4 1990                                  __ptext5 18A4  
                                __ptext6 103E                                  __ptext7 163E  
                                __ptext8 1A5C                                  __ptext9 19C4  
                  ??_enable_signal_8bits 0044                         ___awmod@dividend 003B  
                   ?_gpio_pin_initialize 0043                                  _sprintf 1990  
                   end_of_initialization 1858                                  fputc@fp 003D  
                                memset@c 003C                                  memset@n 003E  
                                memset@p 0040                            __Lmediumconst 0000  
                      __end_of_vfpfcnvrt 11F6          __end_of_convert_uint8_to_string 18A4  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc1 0FE6  
                                postinc2 0FDE                         vfpfcnvrt@convarg 004B  
                             ??_vfprintf 0053     __end_of_gpio_pin_direction_intialize 1308  
           _gpio_pin_direction_intialize 11F6                    ??_gpio_pin_initialize 0044  
                       ??_Ecu_initialize 004E                       relay_turn_on@F3060 006E  
                 ?_lcd_8bit_send_command 0044                   enable_signal_8bits@lcd 0043  
                            vfpfcnvrt@ap 0047                              vfpfcnvrt@cp 004A  
                            vfpfcnvrt@fp 0045                            __pidataCOMRAM 1920  
                         __end_of_memset 1A28                      start_initialization 1820  
                    _lcd_8bit_initialize 13F8                              __end_of_abs 19F8  
              lcd_8bit_send_char@counter 0049            ?_gpio_pin_direction_intialize 003B  
                ?_application_initialize 003B                     ?_lcd_8bit_initialize 004A  
                            vfprintf@fmt 0051                                 ??_memset 0040  
                             memset@dest 003B                 lcd_8bit_send_command@lcd 0044  
               lcd_8bit_send_command@ret 0048                              __pbssCOMRAM 0067  
         __end_of_application_initialize 1A5C             convert_uint8_to_string@value 0066  
        gpio_pin_direction_intialize@ret 0041                    ??_lcd_8bit_initialize 004B  
        gpio_pin_write_logic@_pin_config 003B                                 ?___awdiv 003B  
                               ?___awmod 003B                gpio_pin_write_logic@logic 003C  
                            __smallconst 1000                                 ?_sprintf 0054  
                    __end_of_customChar2 1031                      __end_of_customChar3 1029  
                    __end_of_customChar4 1021                      __end_of_customChar5 1019  
                    __end_of_customChar6 1011                      __end_of_customChar7 1009  
         ??_gpio_pin_direction_intialize 003C                  lcd_8bit_send_char@_char 0045  
            __end_of_enable_signal_8bits 1990                                _vfpfcnvrt 103E  
               ?_convert_uint8_to_string 0065                   gpio_pin_initialize@ret 0044  
                             vfpfcnvrt@c 004F                  gpio_pin_write_logic@ret 0042  
                              copy_data0 1834                relay_initialization@F3055 006F  
                ??_lcd_8bit_send_command 0046                                 __Hrparam 0000  
                             vfprintf@ap 0052                                 __Lrparam 0000  
                             vfprintf@fp 0050                               ?_vfpfcnvrt 0045  
            __end_of_gpio_pin_initialize 1920           gpio_pin_initialize@_pin_config 0043  
                             sprintf@fmt 0055                              _customChar2 1029  
                            _customChar3 1021                              _customChar4 1019  
                            _customChar5 1011                              _customChar6 1009  
                            _customChar7 1001                                 __ptext10 158E  
                               __ptext11 14CA                                 __ptext20 11F6  
                               __ptext12 19F8                                 __ptext13 1A54  
                               __ptext14 1A4A                                 __ptext15 13F8  
                               __ptext16 175E                                 __ptext17 195A  
                               __ptext18 18E2                                 __ptext19 1308  
                     __end_of_customChar 1039                                 isa$xinst 0000  
                               _vfprintf 18A4             __end_of_gpio_pin_write_logic 13F8  
                              sprintf@ap 0058                    lcd_8bit_send_char@lcd 0044  
                  lcd_8bit_send_char@ret 0048                              ??_vfpfcnvrt 0048  
                               sprintf@f 0059                                 sprintf@s 0054  
                         _port_registers 0011                  lcd_8bit_send_string@lcd 004A  
                lcd_8bit_send_string@ret 004C                  lcd_8bit_send_string@str 004B  
            __end_of_lcd_8bit_initialize 14CA             lcd_8bit_send_command@command 0045  
           lcd_8bit_send_command@counter 0049  
