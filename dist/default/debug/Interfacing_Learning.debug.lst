

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Aug 04 05:28:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   001600                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _keypad_values
    74   001600  37                 	db	55
    75   001601  38                 	db	56
    76   001602  39                 	db	57
    77   001603  2F                 	db	47
    78   001604  34                 	db	52
    79   001605  35                 	db	53
    80   001606  36                 	db	54
    81   001607  2A                 	db	42
    82   001608  31                 	db	49
    83   001609  32                 	db	50
    84   00160A  33                 	db	51
    85   00160B  2D                 	db	45
    86   00160C  23                 	db	35
    87   00160D  30                 	db	48
    88   00160E  3D                 	db	61
    89   00160F  2B                 	db	43
    90                           
    91                           ;initializer for _port_registers
    92   001610  80                 	db	128
    93   001611  0F                 	db	15
    94   001612  81                 	db	129
    95   001613  0F                 	db	15
    96   001614  82                 	db	130
    97   001615  0F                 	db	15
    98   001616  83                 	db	131
    99   001617  0F                 	db	15
   100   001618  84                 	db	132
   101   001619  0F                 	db	15
   102                           
   103                           ;initializer for _lat_registers
   104   00161A  89                 	db	137
   105   00161B  0F                 	db	15
   106   00161C  8A                 	db	138
   107   00161D  0F                 	db	15
   108   00161E  8B                 	db	139
   109   00161F  0F                 	db	15
   110   001620  8C                 	db	140
   111   001621  0F                 	db	15
   112   001622  8D                 	db	141
   113   001623  0F                 	db	15
   114                           
   115                           ;initializer for _tris_registers
   116   001624  92                 	db	146
   117   001625  0F                 	db	15
   118   001626  93                 	db	147
   119   001627  0F                 	db	15
   120   001628  94                 	db	148
   121   001629  0F                 	db	15
   122   00162A  95                 	db	149
   123   00162B  0F                 	db	15
   124   00162C  96                 	db	150
   125   00162D  0F                 	db	15
   126                           
   127                           ;initializer for _RB7_F
   128   00162E  01                 	db	1
   129                           
   130                           ;initializer for _RB6_F
   131   00162F  01                 	db	1
   132                           
   133                           ;initializer for _RB5_F
   134   001630  01                 	db	1
   135                           
   136                           ;initializer for _RB4_F
   137   001631  01                 	db	1
   138                           
   139                           ;initializer for _adc1
   140   001632  05                 	db	5
   141   001633  05                 	db	5
   142   001634  00                 	db	0
   143   001635  02                 	db	2
   144                           
   145                           ;initializer for _led3
   146   001636  12                 	db	18
   147                           
   148                           ;initializer for _led2
   149   001637  0A                 	db	10
   150                           
   151                           ;initializer for _led1
   152   001638  02                 	db	2
   153                           
   154                           	psect	smallconst
   155   001000                     __psmallconst:
   156                           	callstack 0
   157   001000  00                 	db	0
   158   001001                     _customChar7:
   159                           	callstack 0
   160   001001  04                 	db	4
   161   001002  0A                 	db	10
   162   001003  04                 	db	4
   163   001004  04                 	db	4
   164   001005  04                 	db	4
   165   001006  0E                 	db	14
   166   001007  15                 	db	21
   167   001008  0E                 	db	14
   168   001009                     __end_of_customChar7:
   169                           	callstack 0
   170   001009                     _customChar6:
   171                           	callstack 0
   172   001009  0E                 	db	14
   173   00100A  0E                 	db	14
   174   00100B  1F                 	db	31
   175   00100C  1F                 	db	31
   176   00100D  1F                 	db	31
   177   00100E  1F                 	db	31
   178   00100F  1F                 	db	31
   179   001010  00                 	db	0
   180   001011                     __end_of_customChar6:
   181                           	callstack 0
   182   001011                     _customChar5:
   183                           	callstack 0
   184   001011  0E                 	db	14
   185   001012  0A                 	db	10
   186   001013  1F                 	db	31
   187   001014  1F                 	db	31
   188   001015  1F                 	db	31
   189   001016  1F                 	db	31
   190   001017  1F                 	db	31
   191   001018  00                 	db	0
   192   001019                     __end_of_customChar5:
   193                           	callstack 0
   194   001019                     _customChar4:
   195                           	callstack 0
   196   001019  0E                 	db	14
   197   00101A  0A                 	db	10
   198   00101B  11                 	db	17
   199   00101C  1F                 	db	31
   200   00101D  1F                 	db	31
   201   00101E  1F                 	db	31
   202   00101F  1F                 	db	31
   203   001020  00                 	db	0
   204   001021                     __end_of_customChar4:
   205                           	callstack 0
   206   001021                     _customChar3:
   207                           	callstack 0
   208   001021  0E                 	db	14
   209   001022  0A                 	db	10
   210   001023  11                 	db	17
   211   001024  11                 	db	17
   212   001025  1F                 	db	31
   213   001026  1F                 	db	31
   214   001027  1F                 	db	31
   215   001028  00                 	db	0
   216   001029                     __end_of_customChar3:
   217                           	callstack 0
   218   001029                     _customChar2:
   219                           	callstack 0
   220   001029  0E                 	db	14
   221   00102A  0A                 	db	10
   222   00102B  11                 	db	17
   223   00102C  11                 	db	17
   224   00102D  11                 	db	17
   225   00102E  1F                 	db	31
   226   00102F  1F                 	db	31
   227   001030  00                 	db	0
   228   001031                     __end_of_customChar2:
   229                           	callstack 0
   230   001031                     _customChar:
   231                           	callstack 0
   232   001031  0E                 	db	14
   233   001032  0A                 	db	10
   234   001033  11                 	db	17
   235   001034  11                 	db	17
   236   001035  11                 	db	17
   237   001036  11                 	db	17
   238   001037  1F                 	db	31
   239   001038  00                 	db	0
   240   001039                     __end_of_customChar:
   241                           	callstack 0
   242   000000                     _INTCON2bits	set	4081
   243   000000                     _EECON2	set	4007
   244   000000                     _PORTBbits	set	3969
   245   000000                     _EECON1bits	set	4006
   246   000000                     _EEDATA	set	4008
   247   000000                     _EEADR	set	4009
   248   000000                     _EEADRH	set	4010
   249   000000                     _INTCONbits	set	4082
   250   000000                     _PORTE	set	3972
   251   000000                     _PORTD	set	3971
   252   000000                     _PORTC	set	3970
   253   000000                     _PORTB	set	3969
   254   000000                     _PORTA	set	3968
   255   000000                     _LATA	set	3977
   256   000000                     _TRISA	set	3986
   257   000000                     _ADCON2bits	set	4032
   258   000000                     _ADCON1bits	set	4033
   259   000000                     _ADCON0bits	set	4034
   260   000000                     _INTCON3bits	set	4080
   261   000000                     _TRISE	set	3990
   262   000000                     _TRISD	set	3989
   263   000000                     _TRISC	set	3988
   264   000000                     _TRISB	set	3987
   265   000000                     _LATE	set	3981
   266   000000                     _LATD	set	3980
   267   000000                     _LATC	set	3979
   268   000000                     _LATB	set	3978
   269   000000                     _ADRESH	set	4036
   270   000000                     _ADRESL	set	4035
   271   001039                     STR_2:
   272   001039  25                 	db	37
   273   00103A  69                 	db	105	;'i'
   274   00103B  00                 	db	0
   275   00103C  25                 	db	37
   276   00103D  75                 	db	117	;'u'
   277   00103E  00                 	db	0
   278   00103F  00                 	db	0	; dummy byte at the end
   279   000000                     
   280                           ; #config settings
   281                           
   282                           	psect	cinit
   283   00163A                     __pcinit:
   284                           	callstack 0
   285   00163A                     start_initialization:
   286                           	callstack 0
   287   00163A                     __initialization:
   288                           	callstack 0
   289                           
   290                           ; Initialize objects allocated to COMRAM (57 bytes)
   291                           ; load TBLPTR registers with __pidataCOMRAM
   292   00163A  0E00               	movlw	low __pidataCOMRAM
   293   00163C  6EF6               	movwf	tblptrl,c
   294   00163E  0E16               	movlw	high __pidataCOMRAM
   295   001640  6EF7               	movwf	tblptrh,c
   296   001642  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   297   001644  6EF8               	movwf	tblptru,c
   298   001646  EE00  F001         	lfsr	0,__pdataCOMRAM
   299   00164A  EE10 F039          	lfsr	1,57
   300   00164E                     copy_data0:
   301   00164E  0009               	tblrd		*+
   302   001650  CFF5 FFEE          	movff	tablat,postinc0
   303   001654  50E5               	movf	postdec1,w,c
   304   001656  50E1               	movf	fsr1l,w,c
   305   001658  E1FA               	bnz	copy_data0
   306                           
   307                           ; Clear objects allocated to COMRAM (32 bytes)
   308   00165A  EE00  F03A         	lfsr	0,__pbssCOMRAM
   309   00165E  0E20               	movlw	32
   310   001660                     clear_0:
   311   001660  6AEE               	clrf	postinc0,c
   312   001662  06E8               	decf	wreg,f,c
   313   001664  E1FD               	bnz	clear_0
   314   001666                     end_of_initialization:
   315                           	callstack 0
   316   001666                     __end_of__initialization:
   317                           	callstack 0
   318   001666  9066               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   319   001668  9266               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   320   00166A  0100               	movlb	0
   321   00166C  EF4A  F00B         	goto	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMRAM
   324   00003A                     __pbssCOMRAM:
   325                           	callstack 0
   326   00003A                     _RB7_INTERRUPTHANDLERLOW:
   327                           	callstack 0
   328   00003A                     	ds	2
   329   00003C                     _RB7_INTERRUPTHANDLERHIGH:
   330                           	callstack 0
   331   00003C                     	ds	2
   332   00003E                     _RB6_INTERRUPTHANDLERLOW:
   333                           	callstack 0
   334   00003E                     	ds	2
   335   000040                     _RB6_INTERRUPTHANDLERHIGH:
   336                           	callstack 0
   337   000040                     	ds	2
   338   000042                     _RB5_INTERRUPTHANDLERLOW:
   339                           	callstack 0
   340   000042                     	ds	2
   341   000044                     _RB5_INTERRUPTHANDLERHIGH:
   342                           	callstack 0
   343   000044                     	ds	2
   344   000046                     _RB4_INTERRUPTHANDLERLOW:
   345                           	callstack 0
   346   000046                     	ds	2
   347   000048                     _RB4_INTERRUPTHANDLERHIGH:
   348                           	callstack 0
   349   000048                     	ds	2
   350   00004A                     _INT2_INTERRUPTHANDLER:
   351                           	callstack 0
   352   00004A                     	ds	2
   353   00004C                     _INT1_INTERRUPTHANDLER:
   354                           	callstack 0
   355   00004C                     	ds	2
   356   00004E                     _INT0_INTERRUPTHANDLER:
   357                           	callstack 0
   358   00004E                     	ds	2
   359   000050                     _ret:
   360                           	callstack 0
   361   000050                     	ds	1
   362   000051                     relay_turn_off@F3065:
   363                           	callstack 0
   364   000051                     	ds	1
   365   000052                     relay_turn_on@F3060:
   366                           	callstack 0
   367   000052                     	ds	1
   368   000053                     relay_initialization@F3055:
   369                           	callstack 0
   370   000053                     	ds	1
   371   000054                     led_turn_toggle@F3077:
   372                           	callstack 0
   373   000054                     	ds	1
   374   000055                     led_turn_off@F3072:
   375                           	callstack 0
   376   000055                     	ds	1
   377   000056                     led_turn_on@F3067:
   378                           	callstack 0
   379   000056                     	ds	1
   380   000057                     led_initialize@F3062:
   381                           	callstack 0
   382   000057                     	ds	1
   383   000058                     _value:
   384                           	callstack 0
   385   000058                     	ds	2
   386                           
   387                           	psect	dataCOMRAM
   388   000001                     __pdataCOMRAM:
   389                           	callstack 0
   390   000001                     _keypad_values:
   391                           	callstack 0
   392   000001                     	ds	16
   393   000011                     _port_registers:
   394                           	callstack 0
   395   000011                     	ds	10
   396   00001B                     _lat_registers:
   397                           	callstack 0
   398   00001B                     	ds	10
   399   000025                     _tris_registers:
   400                           	callstack 0
   401   000025                     	ds	10
   402   00002F                     _RB7_F:
   403                           	callstack 0
   404   00002F                     	ds	1
   405   000030                     _RB6_F:
   406                           	callstack 0
   407   000030                     	ds	1
   408   000031                     _RB5_F:
   409                           	callstack 0
   410   000031                     	ds	1
   411   000032                     _RB4_F:
   412                           	callstack 0
   413   000032                     	ds	1
   414   000033                     _adc1:
   415                           	callstack 0
   416   000033                     	ds	4
   417   000037                     _led3:
   418                           	callstack 0
   419   000037                     	ds	1
   420   000038                     _led2:
   421                           	callstack 0
   422   000038                     	ds	1
   423   000039                     _led1:
   424                           	callstack 0
   425   000039                     	ds	1
   426                           
   427                           	psect	cstackCOMRAM
   428   00005A                     __pcstackCOMRAM:
   429                           	callstack 0
   430   00005A                     RB4_ISR@n:
   431                           	callstack 0
   432   00005A                     RB5_ISR@n:
   433                           	callstack 0
   434   00005A                     RB6_ISR@n:
   435                           	callstack 0
   436   00005A                     RB7_ISR@n:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x0
   440   00005A                     	ds	1
   441   00005B                     ??_ADC_Configure_Port:
   442   00005B                     ADC_Start_Conversion@adc:
   443                           	callstack 0
   444   00005B                     ADC_Get_Conversion_Result@adc:
   445                           	callstack 0
   446   00005B                     ADC_Select_Voltage_Refrence@adc:
   447                           	callstack 0
   448   00005B                     ADC_Select_result_format@adc:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x1
   452   00005B                     	ds	1
   453   00005C                     ADC_Start_Conversion@ret:
   454                           	callstack 0
   455   00005C                     ADC_Get_Conversion_Result@result:
   456                           	callstack 0
   457   00005C                     ADC_Select_Voltage_Refrence@voltage:
   458                           	callstack 0
   459   00005C                     ADC_Select_result_format@format:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x2
   463   00005C                     	ds	1
   464   00005D                     ??_ADC_Get_Conversion_Result:
   465   00005D                     ADC_Configure_Port@channel:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x3
   469   00005D                     	ds	1
   470   00005E                     ADC_Init@adc:
   471                           	callstack 0
   472   00005E                     ADC_Select_Channel@adc:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x4
   476   00005E                     	ds	1
   477   00005F                     ??_ADC_Init:
   478   00005F                     ADC_Select_Channel@channels:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x5
   482   00005F                     	ds	1
   483   000060                     ??_ADC_Select_Channel:
   484                           
   485                           ; 1 bytes @ 0x6
   486   000060                     	ds	1
   487   000061                     ADC_Select_Channel@ret:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x7
   491   000061                     	ds	1
   492   000062                     ADC_Get_Conversion_Result@ret:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x8
   496   000062                     	ds	1
   497   000063                     ADC_Get_Conversion_Blocking@adc:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501   000063                     	ds	1
   502   000064                     ADC_Get_Conversion_Blocking@channel:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xA
   506   000064                     	ds	1
   507   000065                     ADC_Get_Conversion_Blocking@result:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0xB
   511   000065                     	ds	1
   512   000066                     
   513                           ; 1 bytes @ 0xC
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 13 in file "application.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  2  758[None  ] int 
   526 ;; Registers used:
   527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels required when called: 5
   539 ;; This function calls:
   540 ;;		_ADC_Get_Conversion_Blocking
   541 ;;		_ADC_Init
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548   001694                     __ptext0:
   549                           	callstack 0
   550   001694                     _main:
   551                           	callstack 26
   552   001694                     
   553                           ;application.c: 14: ADC_Init(&adc1);
   554   001694  0E33               	movlw	low _adc1
   555   001696  6E5E               	movwf	ADC_Init@adc^0,c
   556   001698  ECCF  F009         	call	_ADC_Init	;wreg free
   557   00169C                     l759:
   558                           
   559                           ;application.c: 18:         ADC_Get_Conversion_Blocking(&adc1,CHANNEL0,&value);
   560   00169C  0E33               	movlw	low _adc1
   561   00169E  6E63               	movwf	ADC_Get_Conversion_Blocking@adc^0,c
   562   0016A0  0E00               	movlw	0
   563   0016A2  6E64               	movwf	ADC_Get_Conversion_Blocking@channel^0,c
   564   0016A4  0E58               	movlw	low _value
   565   0016A6  6E65               	movwf	ADC_Get_Conversion_Blocking@result^0,c
   566   0016A8  EC9C  F00A         	call	_ADC_Get_Conversion_Blocking	;wreg free
   567   0016AC  EF4E  F00B         	goto	l759
   568   0016B0  EF07  F000         	goto	start
   569   0016B4                     __end_of_main:
   570                           	callstack 0
   571                           
   572 ;; *************** function _ADC_Init *****************
   573 ;; Defined at:
   574 ;;		line 16 in file "MCAL_Layer/ADC/hal_adc.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;  adc             1    4[COMRAM] PTR const struct .
   577 ;;		 -> adc1(4), 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  ret             1    0        unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      unsigned char 
   582 ;; Registers used:
   583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        2 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 3
   596 ;; This function calls:
   597 ;;		_ADC_Configure_Port
   598 ;;		_ADC_Select_Voltage_Refrence
   599 ;;		_ADC_Select_result_format
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text1
   606   00139E                     __ptext1:
   607                           	callstack 0
   608   00139E                     _ADC_Init:
   609                           	callstack 27
   610   00139E                     
   611                           ;MCAL_Layer/ADC/hal_adc.c: 18:     if(adc == ((void*)0)){
   612   00139E  505E               	movf	ADC_Init@adc^0,w,c
   613   0013A0  A4D8               	btfss	status,2,c
   614   0013A2  EFD5  F009         	goto	u1811
   615   0013A6  EFD7  F009         	goto	u1810
   616   0013AA                     u1811:
   617   0013AA  EFD9  F009         	goto	l790
   618   0013AE                     u1810:
   619   0013AE                     
   620                           ;MCAL_Layer/ADC/hal_adc.c: 20:     }
   621   0013AE  EF27  F00A         	goto	l794
   622   0013B2                     l790:
   623                           
   624                           ;MCAL_Layer/ADC/hal_adc.c: 22:         (ADCON0bits.ADON = 0);;
   625   0013B2  90C2               	bcf	194,0,c	;volatile
   626                           
   627                           ;MCAL_Layer/ADC/hal_adc.c: 23:         (ADCON0bits.GO_nDONE = 0);;
   628   0013B4  92C2               	bcf	194,1,c	;volatile
   629   0013B6  9AC1               	bcf	193,5,c	;volatile
   630   0013B8  98C1               	bcf	193,4,c	;volatile
   631   0013BA                     
   632                           ;MCAL_Layer/ADC/hal_adc.c: 25:         ADCON2bits.ADCS = adc->time;
   633   0013BA  505E               	movf	ADC_Init@adc^0,w,c
   634   0013BC  6ED9               	movwf	fsr2l,c
   635   0013BE  6ADA               	clrf	fsr2h,c
   636   0013C0  50DF               	movf	indf2,w,c
   637   0013C2  6E5F               	movwf	??_ADC_Init^0,c
   638   0013C4  50C0               	movf	192,w,c	;volatile
   639   0013C6  185F               	xorwf	??_ADC_Init^0,w,c
   640   0013C8  0BF8               	andlw	-8
   641   0013CA  185F               	xorwf	??_ADC_Init^0,w,c
   642   0013CC  6EC0               	movwf	192,c	;volatile
   643                           
   644                           ;MCAL_Layer/ADC/hal_adc.c: 26:         ADCON2bits.ACQT = adc->tad;
   645   0013CE  505E               	movf	ADC_Init@adc^0,w,c
   646   0013D0  6ED9               	movwf	fsr2l,c
   647   0013D2  6ADA               	clrf	fsr2h,c
   648   0013D4  0E01               	movlw	1
   649   0013D6  26D9               	addwf	fsr2l,f,c
   650   0013D8  50DF               	movf	indf2,w,c
   651   0013DA  6E5F               	movwf	??_ADC_Init^0,c
   652   0013DC  465F               	rlncf	??_ADC_Init^0,f,c
   653   0013DE  465F               	rlncf	??_ADC_Init^0,f,c
   654   0013E0  465F               	rlncf	??_ADC_Init^0,f,c
   655   0013E2  50C0               	movf	192,w,c	;volatile
   656   0013E4  185F               	xorwf	??_ADC_Init^0,w,c
   657   0013E6  0BC7               	andlw	-57
   658   0013E8  185F               	xorwf	??_ADC_Init^0,w,c
   659   0013EA  6EC0               	movwf	192,c	;volatile
   660                           
   661                           ;MCAL_Layer/ADC/hal_adc.c: 27:         ADCON0bits.CHS = adc->channel;
   662   0013EC  505E               	movf	ADC_Init@adc^0,w,c
   663   0013EE  6ED9               	movwf	fsr2l,c
   664   0013F0  6ADA               	clrf	fsr2h,c
   665   0013F2  0E02               	movlw	2
   666   0013F4  26D9               	addwf	fsr2l,f,c
   667   0013F6  50DF               	movf	indf2,w,c
   668   0013F8  6E5F               	movwf	??_ADC_Init^0,c
   669   0013FA  465F               	rlncf	??_ADC_Init^0,f,c
   670   0013FC  465F               	rlncf	??_ADC_Init^0,f,c
   671   0013FE  50C2               	movf	194,w,c	;volatile
   672   001400  185F               	xorwf	??_ADC_Init^0,w,c
   673   001402  0BC3               	andlw	-61
   674   001404  185F               	xorwf	??_ADC_Init^0,w,c
   675   001406  6EC2               	movwf	194,c	;volatile
   676   001408                     
   677                           ;MCAL_Layer/ADC/hal_adc.c: 28:         ADC_Configure_Port(adc->channel);
   678   001408  505E               	movf	ADC_Init@adc^0,w,c
   679   00140A  6ED9               	movwf	fsr2l,c
   680   00140C  6ADA               	clrf	fsr2h,c
   681   00140E  0E02               	movlw	2
   682   001410  26D9               	addwf	fsr2l,f,c
   683   001412  50DF               	movf	indf2,w,c
   684   001414  EC63  F009         	call	_ADC_Configure_Port
   685   001418                     
   686                           ;MCAL_Layer/ADC/hal_adc.c: 29:         ADC_Select_Voltage_Refrence(adc,adc->voltage_refr
      +                          ence);
   687   001418  C05E  F05B         	movff	ADC_Init@adc,ADC_Select_Voltage_Refrence@adc
   688   00141C  505E               	movf	ADC_Init@adc^0,w,c
   689   00141E  6ED9               	movwf	fsr2l,c
   690   001420  6ADA               	clrf	fsr2h,c
   691   001422  0E03               	movlw	3
   692   001424  26D9               	addwf	fsr2l,f,c
   693   001426  0E00               	movlw	0
   694   001428  B0DF               	btfsc	indf2,0,c
   695   00142A  0E01               	movlw	1
   696   00142C  6E5C               	movwf	ADC_Select_Voltage_Refrence@voltage^0,c
   697   00142E  ECBE  F00A         	call	_ADC_Select_Voltage_Refrence	;wreg free
   698   001432                     
   699                           ;MCAL_Layer/ADC/hal_adc.c: 30:         ADC_Select_result_format(adc,adc->result_format);
   700   001432  C05E  F05B         	movff	ADC_Init@adc,ADC_Select_result_format@adc
   701   001436  505E               	movf	ADC_Init@adc^0,w,c
   702   001438  6ED9               	movwf	fsr2l,c
   703   00143A  6ADA               	clrf	fsr2h,c
   704   00143C  0E03               	movlw	3
   705   00143E  26D9               	addwf	fsr2l,f,c
   706   001440  0E00               	movlw	0
   707   001442  B2DF               	btfsc	indf2,1,c
   708   001444  0E01               	movlw	1
   709   001446  6E5C               	movwf	ADC_Select_result_format@format^0,c
   710   001448  EC7A  F00A         	call	_ADC_Select_result_format	;wreg free
   711   00144C                     
   712                           ;MCAL_Layer/ADC/hal_adc.c: 32:         (ADCON0bits.ADON = 1);;
   713   00144C  80C2               	bsf	194,0,c	;volatile
   714   00144E                     l794:
   715   00144E  0012               	return		;funcret
   716   001450                     __end_of_ADC_Init:
   717                           	callstack 0
   718                           
   719 ;; *************** function _ADC_Select_result_format *****************
   720 ;; Defined at:
   721 ;;		line 125 in file "MCAL_Layer/ADC/hal_adc.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  adc             1    1[COMRAM] PTR const struct .
   724 ;;		 -> adc1(4), 
   725 ;;  format          1    2[COMRAM] unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  ret             1    0        unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      unsigned char 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;Total ram usage:        2 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 2
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_ADC_Init
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text2
   752   0014F4                     __ptext2:
   753                           	callstack 0
   754   0014F4                     _ADC_Select_result_format:
   755                           	callstack 27
   756   0014F4                     
   757                           ;MCAL_Layer/ADC/hal_adc.c: 127:     if(adc == ((void*)0)){
   758   0014F4  505B               	movf	ADC_Select_result_format@adc^0,w,c
   759   0014F6  A4D8               	btfss	status,2,c
   760   0014F8  EF80  F00A         	goto	u1721
   761   0014FC  EF82  F00A         	goto	u1720
   762   001500                     u1721:
   763   001500  EF84  F00A         	goto	l2986
   764   001504                     u1720:
   765   001504                     
   766                           ;MCAL_Layer/ADC/hal_adc.c: 129:     }
   767   001504  EF9B  F00A         	goto	l853
   768   001508                     l2986:
   769                           
   770                           ;MCAL_Layer/ADC/hal_adc.c: 131:         if(format == RIGHT_JUSTIFIED){
   771   001508  045C               	decf	ADC_Select_result_format@format^0,w,c
   772   00150A  A4D8               	btfss	status,2,c
   773   00150C  EF8A  F00A         	goto	u1731
   774   001510  EF8C  F00A         	goto	u1730
   775   001514                     u1731:
   776   001514  EF8F  F00A         	goto	l2990
   777   001518                     u1730:
   778   001518                     
   779                           ;MCAL_Layer/ADC/hal_adc.c: 132:             ADCON2bits.ADFM = 1;
   780   001518  8EC0               	bsf	192,7,c	;volatile
   781                           
   782                           ;MCAL_Layer/ADC/hal_adc.c: 133:         }
   783   00151A  EF9B  F00A         	goto	l853
   784   00151E                     l2990:
   785   00151E  505C               	movf	ADC_Select_result_format@format^0,w,c
   786   001520  A4D8               	btfss	status,2,c
   787   001522  EF95  F00A         	goto	u1741
   788   001526  EF97  F00A         	goto	u1740
   789   00152A                     u1741:
   790   00152A  EF9A  F00A         	goto	l851
   791   00152E                     u1740:
   792   00152E                     
   793                           ;MCAL_Layer/ADC/hal_adc.c: 135:             ADCON2bits.ADFM = 0;
   794   00152E  9EC0               	bcf	192,7,c	;volatile
   795                           
   796                           ;MCAL_Layer/ADC/hal_adc.c: 136:         }
   797   001530  EF9B  F00A         	goto	l853
   798   001534                     l851:
   799   001534  8EC0               	bsf	192,7,c	;volatile
   800   001536                     l853:
   801   001536  0012               	return		;funcret
   802   001538                     __end_of_ADC_Select_result_format:
   803                           	callstack 0
   804                           
   805 ;; *************** function _ADC_Select_Voltage_Refrence *****************
   806 ;; Defined at:
   807 ;;		line 109 in file "MCAL_Layer/ADC/hal_adc.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  adc             1    1[COMRAM] PTR const struct .
   810 ;;		 -> adc1(4), 
   811 ;;  voltage         1    2[COMRAM] unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  ret             1    0        unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      unsigned char 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 2
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_ADC_Init
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text3
   838   00157C                     __ptext3:
   839                           	callstack 0
   840   00157C                     _ADC_Select_Voltage_Refrence:
   841                           	callstack 27
   842   00157C                     
   843                           ;MCAL_Layer/ADC/hal_adc.c: 111:     if(adc == ((void*)0)){
   844   00157C  505B               	movf	ADC_Select_Voltage_Refrence@adc^0,w,c
   845   00157E  A4D8               	btfss	status,2,c
   846   001580  EFC4  F00A         	goto	u1691
   847   001584  EFC6  F00A         	goto	u1690
   848   001588                     u1691:
   849   001588  EFC8  F00A         	goto	l2974
   850   00158C                     u1690:
   851   00158C                     l2972:
   852                           
   853                           ;MCAL_Layer/ADC/hal_adc.c: 113:     }
   854   00158C  EFDE  F00A         	goto	l844
   855   001590                     l2974:
   856                           
   857                           ;MCAL_Layer/ADC/hal_adc.c: 115:         if(voltage == 0x00){
   858   001590  505C               	movf	ADC_Select_Voltage_Refrence@voltage^0,w,c
   859   001592  A4D8               	btfss	status,2,c
   860   001594  EFCE  F00A         	goto	u1701
   861   001598  EFD0  F00A         	goto	u1700
   862   00159C                     u1701:
   863   00159C  EFD4  F00A         	goto	l2976
   864   0015A0                     u1700:
   865   0015A0  9AC1               	bcf	193,5,c	;volatile
   866   0015A2  98C1               	bcf	193,4,c	;volatile
   867   0015A4  EFDE  F00A         	goto	l844
   868   0015A8                     l2976:
   869   0015A8  045C               	decf	ADC_Select_Voltage_Refrence@voltage^0,w,c
   870   0015AA  A4D8               	btfss	status,2,c
   871   0015AC  EFDA  F00A         	goto	u1711
   872   0015B0  EFDC  F00A         	goto	u1710
   873   0015B4                     u1711:
   874   0015B4  EFC6  F00A         	goto	l2972
   875   0015B8                     u1710:
   876   0015B8  8AC1               	bsf	193,5,c	;volatile
   877   0015BA  88C1               	bsf	193,4,c	;volatile
   878   0015BC                     l844:
   879   0015BC  0012               	return		;funcret
   880   0015BE                     __end_of_ADC_Select_Voltage_Refrence:
   881                           	callstack 0
   882                           
   883 ;; *************** function _ADC_Get_Conversion_Blocking *****************
   884 ;; Defined at:
   885 ;;		line 96 in file "MCAL_Layer/ADC/hal_adc.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  adc             1    9[COMRAM] PTR const struct .
   888 ;;		 -> adc1(4), 
   889 ;;  channel         1   10[COMRAM] enum E3041
   890 ;;  result          1   11[COMRAM] PTR unsigned short 
   891 ;;		 -> value(2), 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  ret             1    0        unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      unsigned char 
   896 ;; Registers used:
   897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;Total ram usage:        3 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 4
   910 ;; This function calls:
   911 ;;		_ADC_Get_Conversion_Result
   912 ;;		_ADC_Select_Channel
   913 ;;		_ADC_Start_Conversion
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text4
   920   001538                     __ptext4:
   921                           	callstack 0
   922   001538                     _ADC_Get_Conversion_Blocking:
   923                           	callstack 26
   924   001538                     
   925                           ;MCAL_Layer/ADC/hal_adc.c: 98:     if(adc == ((void*)0)){
   926   001538  5063               	movf	ADC_Get_Conversion_Blocking@adc^0,w,c
   927   00153A  A4D8               	btfss	status,2,c
   928   00153C  EFA2  F00A         	goto	u1821
   929   001540  EFA4  F00A         	goto	u1820
   930   001544                     u1821:
   931   001544  EFA6  F00A         	goto	l3052
   932   001548                     u1820:
   933   001548                     
   934                           ;MCAL_Layer/ADC/hal_adc.c: 100:     }
   935   001548  EFBD  F00A         	goto	l831
   936   00154C                     l3052:
   937   00154C  C063  F05E         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Select_Channel@adc
   938   001550  C064  F05F         	movff	ADC_Get_Conversion_Blocking@channel,ADC_Select_Channel@channels
   939   001554  ECDF  F00A         	call	_ADC_Select_Channel	;wreg free
   940   001558  C063  F05B         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Start_Conversion@adc
   941   00155C  EC38  F00B         	call	_ADC_Start_Conversion	;wreg free
   942   001560                     l828:
   943   001560  B2C2               	btfsc	194,1,c	;volatile
   944   001562  EFB5  F00A         	goto	u1831
   945   001566  EFB7  F00A         	goto	u1830
   946   00156A                     u1831:
   947   00156A  EFB0  F00A         	goto	l828
   948   00156E                     u1830:
   949   00156E  C063  F05B         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Get_Conversion_Result@adc
   950   001572  C065  F05C         	movff	ADC_Get_Conversion_Blocking@result,ADC_Get_Conversion_Result@result
   951   001576  EC28  F00A         	call	_ADC_Get_Conversion_Result	;wreg free
   952   00157A                     l831:
   953   00157A  0012               	return		;funcret
   954   00157C                     __end_of_ADC_Get_Conversion_Blocking:
   955                           	callstack 0
   956                           
   957 ;; *************** function _ADC_Start_Conversion *****************
   958 ;; Defined at:
   959 ;;		line 57 in file "MCAL_Layer/ADC/hal_adc.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  adc             1    1[COMRAM] PTR const struct .
   962 ;;		 -> adc1(4), 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  ret             1    2[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      unsigned char 
   967 ;; Registers used:
   968 ;;		wreg, status,2
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;Total ram usage:        2 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 2
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_ADC_Get_Conversion_Blocking
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text5
   989   001670                     __ptext5:
   990                           	callstack 0
   991   001670                     _ADC_Start_Conversion:
   992                           	callstack 27
   993   001670                     
   994                           ;MCAL_Layer/ADC/hal_adc.c: 58:     std_ReturnType ret = (std_ReturnType)0x01;
   995   001670  0E01               	movlw	1
   996   001672  6E5C               	movwf	ADC_Start_Conversion@ret^0,c
   997                           
   998                           ;MCAL_Layer/ADC/hal_adc.c: 59:     if(adc == ((void*)0)){
   999   001674  505B               	movf	ADC_Start_Conversion@adc^0,w,c
  1000   001676  A4D8               	btfss	status,2,c
  1001   001678  EF40  F00B         	goto	u1761
  1002   00167C  EF42  F00B         	goto	u1760
  1003   001680                     u1761:
  1004   001680  EF46  F00B         	goto	l807
  1005   001684                     u1760:
  1006   001684                     
  1007                           ;MCAL_Layer/ADC/hal_adc.c: 60:         ret = (std_ReturnType)0x00;
  1008   001684  0E00               	movlw	0
  1009   001686  6E5C               	movwf	ADC_Start_Conversion@ret^0,c
  1010                           
  1011                           ;MCAL_Layer/ADC/hal_adc.c: 61:     }
  1012   001688  EF48  F00B         	goto	l3010
  1013   00168C                     l807:
  1014                           
  1015                           ;MCAL_Layer/ADC/hal_adc.c: 63:         (ADCON0bits.GO_nDONE = 0);;
  1016   00168C  92C2               	bcf	194,1,c	;volatile
  1017                           
  1018                           ;MCAL_Layer/ADC/hal_adc.c: 64:         (ADCON0bits.GO_nDONE = 1);;
  1019   00168E  82C2               	bsf	194,1,c	;volatile
  1020   001690                     l3010:
  1021                           
  1022                           ;MCAL_Layer/ADC/hal_adc.c: 66:     return ret;
  1023   001690  505C               	movf	ADC_Start_Conversion@ret^0,w,c
  1024   001692  0012               	return		;funcret
  1025   001694                     __end_of_ADC_Start_Conversion:
  1026                           	callstack 0
  1027                           
  1028 ;; *************** function _ADC_Select_Channel *****************
  1029 ;; Defined at:
  1030 ;;		line 46 in file "MCAL_Layer/ADC/hal_adc.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  adc             1    4[COMRAM] PTR const struct .
  1033 ;;		 -> adc1(4), 
  1034 ;;  channels        1    5[COMRAM] unsigned char 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  ret             1    7[COMRAM] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      unsigned char 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;Total ram usage:        4 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 3
  1053 ;; This function calls:
  1054 ;;		_ADC_Configure_Port
  1055 ;; This function is called by:
  1056 ;;		_ADC_Get_Conversion_Blocking
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text6
  1061   0015BE                     __ptext6:
  1062                           	callstack 0
  1063   0015BE                     _ADC_Select_Channel:
  1064                           	callstack 26
  1065   0015BE                     
  1066                           ;MCAL_Layer/ADC/hal_adc.c: 47:     std_ReturnType ret = (std_ReturnType)0x01;
  1067   0015BE  0E01               	movlw	1
  1068   0015C0  6E61               	movwf	ADC_Select_Channel@ret^0,c
  1069                           
  1070                           ;MCAL_Layer/ADC/hal_adc.c: 48:     if(adc == ((void*)0)){
  1071   0015C2  505E               	movf	ADC_Select_Channel@adc^0,w,c
  1072   0015C4  A4D8               	btfss	status,2,c
  1073   0015C6  EFE7  F00A         	goto	u1751
  1074   0015CA  EFE9  F00A         	goto	u1750
  1075   0015CE                     u1751:
  1076   0015CE  EFED  F00A         	goto	l2998
  1077   0015D2                     u1750:
  1078   0015D2                     
  1079                           ;MCAL_Layer/ADC/hal_adc.c: 49:         ret = (std_ReturnType)0x00;
  1080   0015D2  0E00               	movlw	0
  1081   0015D4  6E61               	movwf	ADC_Select_Channel@ret^0,c
  1082                           
  1083                           ;MCAL_Layer/ADC/hal_adc.c: 50:     }
  1084   0015D6  EFFE  F00A         	goto	l3002
  1085   0015DA                     l2998:
  1086                           
  1087                           ;MCAL_Layer/ADC/hal_adc.c: 52:         ADCON0bits.CHS = channels;
  1088   0015DA  C05F  F060         	movff	ADC_Select_Channel@channels,??_ADC_Select_Channel
  1089   0015DE  4660               	rlncf	??_ADC_Select_Channel^0,f,c
  1090   0015E0  4660               	rlncf	??_ADC_Select_Channel^0,f,c
  1091   0015E2  50C2               	movf	194,w,c	;volatile
  1092   0015E4  1860               	xorwf	??_ADC_Select_Channel^0,w,c
  1093   0015E6  0BC3               	andlw	-61
  1094   0015E8  1860               	xorwf	??_ADC_Select_Channel^0,w,c
  1095   0015EA  6EC2               	movwf	194,c	;volatile
  1096   0015EC                     
  1097                           ;MCAL_Layer/ADC/hal_adc.c: 53:         ADC_Configure_Port(adc->channel);
  1098   0015EC  505E               	movf	ADC_Select_Channel@adc^0,w,c
  1099   0015EE  6ED9               	movwf	fsr2l,c
  1100   0015F0  6ADA               	clrf	fsr2h,c
  1101   0015F2  0E02               	movlw	2
  1102   0015F4  26D9               	addwf	fsr2l,f,c
  1103   0015F6  50DF               	movf	indf2,w,c
  1104   0015F8  EC63  F009         	call	_ADC_Configure_Port
  1105   0015FC                     l3002:
  1106                           
  1107                           ;MCAL_Layer/ADC/hal_adc.c: 55:     return ret;
  1108   0015FC  5061               	movf	ADC_Select_Channel@ret^0,w,c
  1109   0015FE  0012               	return		;funcret
  1110   001600                     __end_of_ADC_Select_Channel:
  1111                           	callstack 0
  1112                           
  1113 ;; *************** function _ADC_Configure_Port *****************
  1114 ;; Defined at:
  1115 ;;		line 141 in file "MCAL_Layer/ADC/hal_adc.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  channel         1    wreg     enum E3041
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  channel         1    3[COMRAM] enum E3041
  1120 ;;  ret             1    0        unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      unsigned char 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        3 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 2
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_ADC_Init
  1141 ;;		_ADC_Select_Channel
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text7
  1146   0012C6                     __ptext7:
  1147                           	callstack 0
  1148   0012C6                     _ADC_Configure_Port:
  1149                           	callstack 27
  1150                           
  1151                           ;incstack = 0
  1152                           ;ADC_Configure_Port@channel stored from wreg
  1153   0012C6  6E5D               	movwf	ADC_Configure_Port@channel^0,c
  1154   0012C8                     
  1155                           ;MCAL_Layer/ADC/hal_adc.c: 143:         switch(channel){
  1156   0012C8  EF8D  F009         	goto	l1638
  1157   0012CC                     l1610:
  1158   0012CC  8092               	bsf	146,0,c	;volatile
  1159   0012CE  EFCE  F009         	goto	l871
  1160   0012D2                     l1612:
  1161   0012D2  8292               	bsf	146,1,c	;volatile
  1162   0012D4  EFCE  F009         	goto	l871
  1163   0012D8                     l1614:
  1164   0012D8  8492               	bsf	146,2,c	;volatile
  1165   0012DA  EFCE  F009         	goto	l871
  1166   0012DE                     l1616:
  1167   0012DE  8692               	bsf	146,3,c	;volatile
  1168   0012E0  EFCE  F009         	goto	l871
  1169   0012E4                     l1618:
  1170   0012E4  8A92               	bsf	146,5,c	;volatile
  1171   0012E6  EFCE  F009         	goto	l871
  1172   0012EA                     l1620:
  1173   0012EA  8096               	bsf	150,0,c	;volatile
  1174   0012EC  EFCE  F009         	goto	l871
  1175   0012F0                     l1622:
  1176   0012F0  8296               	bsf	150,1,c	;volatile
  1177   0012F2  EFCE  F009         	goto	l871
  1178   0012F6                     l1624:
  1179   0012F6  8496               	bsf	150,2,c	;volatile
  1180   0012F8  EFCE  F009         	goto	l871
  1181   0012FC                     l1626:
  1182   0012FC  8493               	bsf	147,2,c	;volatile
  1183   0012FE  EFCE  F009         	goto	l871
  1184   001302                     l1628:
  1185   001302  8693               	bsf	147,3,c	;volatile
  1186   001304  EFCE  F009         	goto	l871
  1187   001308                     l1630:
  1188   001308  8293               	bsf	147,1,c	;volatile
  1189   00130A  EFCE  F009         	goto	l871
  1190   00130E                     l1632:
  1191   00130E  8893               	bsf	147,4,c	;volatile
  1192   001310  EFCE  F009         	goto	l871
  1193   001314                     l1634:
  1194   001314  8093               	bsf	147,0,c	;volatile
  1195   001316  EFCE  F009         	goto	l871
  1196   00131A                     l1638:
  1197   00131A  505D               	movf	ADC_Configure_Port@channel^0,w,c
  1198   00131C  6E5B               	movwf	??_ADC_Configure_Port^0,c
  1199   00131E  6A5C               	clrf	(??_ADC_Configure_Port+1)^0,c
  1200                           
  1201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1202                           ; Switch size 1, requested type "simple"
  1203                           ; Number of cases is 1, Range of values is 0 to 0
  1204                           ; switch strategies available:
  1205                           ; Name         Instructions Cycles
  1206                           ; simple_byte            4     3 (average)
  1207                           ;	Chosen strategy is simple_byte
  1208   001320  505C               	movf	(??_ADC_Configure_Port+1)^0,w,c
  1209   001322  0A00               	xorlw	0	; case 0
  1210   001324  B4D8               	btfsc	status,2,c
  1211   001326  EF97  F009         	goto	l3066
  1212   00132A  EFCE  F009         	goto	l871
  1213   00132E                     l3066:
  1214                           
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 13, Range of values is 2 to 14
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte           40    21 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221   00132E  505B               	movf	??_ADC_Configure_Port^0,w,c
  1222   001330  0A02               	xorlw	2	; case 2
  1223   001332  B4D8               	btfsc	status,2,c
  1224   001334  EF8A  F009         	goto	l1634
  1225   001338  0A01               	xorlw	1	; case 3
  1226   00133A  B4D8               	btfsc	status,2,c
  1227   00133C  EF87  F009         	goto	l1632
  1228   001340  0A07               	xorlw	7	; case 4
  1229   001342  B4D8               	btfsc	status,2,c
  1230   001344  EF84  F009         	goto	l1630
  1231   001348  0A01               	xorlw	1	; case 5
  1232   00134A  B4D8               	btfsc	status,2,c
  1233   00134C  EF81  F009         	goto	l1628
  1234   001350  0A03               	xorlw	3	; case 6
  1235   001352  B4D8               	btfsc	status,2,c
  1236   001354  EF7E  F009         	goto	l1626
  1237   001358  0A01               	xorlw	1	; case 7
  1238   00135A  B4D8               	btfsc	status,2,c
  1239   00135C  EF7B  F009         	goto	l1624
  1240   001360  0A0F               	xorlw	15	; case 8
  1241   001362  B4D8               	btfsc	status,2,c
  1242   001364  EF78  F009         	goto	l1622
  1243   001368  0A01               	xorlw	1	; case 9
  1244   00136A  B4D8               	btfsc	status,2,c
  1245   00136C  EF75  F009         	goto	l1620
  1246   001370  0A03               	xorlw	3	; case 10
  1247   001372  B4D8               	btfsc	status,2,c
  1248   001374  EF72  F009         	goto	l1618
  1249   001378  0A01               	xorlw	1	; case 11
  1250   00137A  B4D8               	btfsc	status,2,c
  1251   00137C  EF6F  F009         	goto	l1616
  1252   001380  0A07               	xorlw	7	; case 12
  1253   001382  B4D8               	btfsc	status,2,c
  1254   001384  EF6C  F009         	goto	l1614
  1255   001388  0A01               	xorlw	1	; case 13
  1256   00138A  B4D8               	btfsc	status,2,c
  1257   00138C  EF69  F009         	goto	l1612
  1258   001390  0A03               	xorlw	3	; case 14
  1259   001392  B4D8               	btfsc	status,2,c
  1260   001394  EF66  F009         	goto	l1610
  1261   001398  EFCE  F009         	goto	l871
  1262   00139C                     l871:
  1263   00139C  0012               	return		;funcret
  1264   00139E                     __end_of_ADC_Configure_Port:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _ADC_Get_Conversion_Result *****************
  1268 ;; Defined at:
  1269 ;;		line 78 in file "MCAL_Layer/ADC/hal_adc.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  adc             1    1[COMRAM] PTR const struct .
  1272 ;;		 -> adc1(4), 
  1273 ;;  result          1    2[COMRAM] PTR unsigned short 
  1274 ;;		 -> value(2), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  ret             1    8[COMRAM] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      unsigned char 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;Total ram usage:        8 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 2
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_ADC_Get_Conversion_Blocking
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text8
  1301   001450                     __ptext8:
  1302                           	callstack 0
  1303   001450                     _ADC_Get_Conversion_Result:
  1304                           	callstack 27
  1305   001450                     
  1306                           ;MCAL_Layer/ADC/hal_adc.c: 79:     std_ReturnType ret = (std_ReturnType)0x01;
  1307   001450  0E01               	movlw	1
  1308   001452  6E62               	movwf	ADC_Get_Conversion_Result@ret^0,c
  1309                           
  1310                           ;MCAL_Layer/ADC/hal_adc.c: 80:     if(adc == ((void*)0)){
  1311   001454  505B               	movf	ADC_Get_Conversion_Result@adc^0,w,c
  1312   001456  A4D8               	btfss	status,2,c
  1313   001458  EF30  F00A         	goto	u1771
  1314   00145C  EF32  F00A         	goto	u1770
  1315   001460                     u1771:
  1316   001460  EF36  F00A         	goto	l3018
  1317   001464                     u1770:
  1318   001464                     
  1319                           ;MCAL_Layer/ADC/hal_adc.c: 81:         ret = (std_ReturnType)0x00;
  1320   001464  0E00               	movlw	0
  1321   001466  6E62               	movwf	ADC_Get_Conversion_Result@ret^0,c
  1322                           
  1323                           ;MCAL_Layer/ADC/hal_adc.c: 82:     }
  1324   001468  EF78  F00A         	goto	l3028
  1325   00146C                     l3018:
  1326                           
  1327                           ;MCAL_Layer/ADC/hal_adc.c: 84:         if(adc->result_format == RIGHT_JUSTIFIED){
  1328   00146C  505B               	movf	ADC_Get_Conversion_Result@adc^0,w,c
  1329   00146E  6ED9               	movwf	fsr2l,c
  1330   001470  6ADA               	clrf	fsr2h,c
  1331   001472  0E03               	movlw	3
  1332   001474  26D9               	addwf	fsr2l,f,c
  1333   001476  A2DF               	btfss	indf2,1,c
  1334   001478  EF40  F00A         	goto	u1781
  1335   00147C  EF42  F00A         	goto	u1780
  1336   001480                     u1781:
  1337   001480  EF54  F00A         	goto	l3022
  1338   001484                     u1780:
  1339   001484                     l3020:
  1340                           
  1341                           ;MCAL_Layer/ADC/hal_adc.c: 85:             *result = (uint16)(ADRESL + (ADRESH << 8));
  1342   001484  50C4               	movf	196,w,c	;volatile
  1343   001486  6E5E               	movwf	(??_ADC_Get_Conversion_Result+1)^0,c
  1344   001488  6A5D               	clrf	??_ADC_Get_Conversion_Result^0,c
  1345   00148A  50C3               	movf	195,w,c	;volatile
  1346   00148C  245D               	addwf	??_ADC_Get_Conversion_Result^0,w,c
  1347   00148E  6E5F               	movwf	(??_ADC_Get_Conversion_Result+2)^0,c
  1348   001490  0E00               	movlw	0
  1349   001492  205E               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,w,c
  1350   001494  6E60               	movwf	(??_ADC_Get_Conversion_Result+3)^0,c
  1351   001496  505C               	movf	ADC_Get_Conversion_Result@result^0,w,c
  1352   001498  6ED9               	movwf	fsr2l,c
  1353   00149A  6ADA               	clrf	fsr2h,c
  1354   00149C  C05F  FFDE         	movff	??_ADC_Get_Conversion_Result+2,postinc2
  1355   0014A0  C060  FFDD         	movff	??_ADC_Get_Conversion_Result+3,postdec2
  1356                           
  1357                           ;MCAL_Layer/ADC/hal_adc.c: 86:         }
  1358   0014A4  EF78  F00A         	goto	l3028
  1359   0014A8                     l3022:
  1360   0014A8  505B               	movf	ADC_Get_Conversion_Result@adc^0,w,c
  1361   0014AA  6ED9               	movwf	fsr2l,c
  1362   0014AC  6ADA               	clrf	fsr2h,c
  1363   0014AE  0E03               	movlw	3
  1364   0014B0  26D9               	addwf	fsr2l,f,c
  1365   0014B2  B2DF               	btfsc	indf2,1,c
  1366   0014B4  EF5E  F00A         	goto	u1791
  1367   0014B8  EF60  F00A         	goto	u1790
  1368   0014BC                     u1791:
  1369   0014BC  EF42  F00A         	goto	l3020
  1370   0014C0                     u1790:
  1371   0014C0                     
  1372                           ;MCAL_Layer/ADC/hal_adc.c: 88:             *result = (uint16)((ADRESL + (ADRESH << 8)) >
      +                          > 6);
  1373   0014C0  50C4               	movf	196,w,c	;volatile
  1374   0014C2  6E5E               	movwf	(??_ADC_Get_Conversion_Result+1)^0,c
  1375   0014C4  6A5D               	clrf	??_ADC_Get_Conversion_Result^0,c
  1376   0014C6  50C3               	movf	195,w,c	;volatile
  1377   0014C8  245D               	addwf	??_ADC_Get_Conversion_Result^0,w,c
  1378   0014CA  6E5F               	movwf	(??_ADC_Get_Conversion_Result+2)^0,c
  1379   0014CC  0E00               	movlw	0
  1380   0014CE  205E               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,w,c
  1381   0014D0  6E60               	movwf	(??_ADC_Get_Conversion_Result+3)^0,c
  1382   0014D2  0E06               	movlw	6
  1383   0014D4  6E61               	movwf	(??_ADC_Get_Conversion_Result+4)^0,c
  1384   0014D6                     u1805:
  1385   0014D6  3460               	rlcf	(??_ADC_Get_Conversion_Result+3)^0,w,c
  1386   0014D8  3260               	rrcf	(??_ADC_Get_Conversion_Result+3)^0,f,c
  1387   0014DA  325F               	rrcf	(??_ADC_Get_Conversion_Result+2)^0,f,c
  1388   0014DC  2E61               	decfsz	(??_ADC_Get_Conversion_Result+4)^0,f,c
  1389   0014DE  EF6B  F00A         	goto	u1805
  1390   0014E2  505C               	movf	ADC_Get_Conversion_Result@result^0,w,c
  1391   0014E4  6ED9               	movwf	fsr2l,c
  1392   0014E6  6ADA               	clrf	fsr2h,c
  1393   0014E8  C05F  FFDE         	movff	??_ADC_Get_Conversion_Result+2,postinc2
  1394   0014EC  C060  FFDD         	movff	??_ADC_Get_Conversion_Result+3,postdec2
  1395   0014F0                     l3028:
  1396                           
  1397                           ;MCAL_Layer/ADC/hal_adc.c: 94:     return ret;
  1398   0014F0  5062               	movf	ADC_Get_Conversion_Result@ret^0,w,c
  1399   0014F2  0012               	return		;funcret
  1400   0014F4                     __end_of_ADC_Get_Conversion_Result:
  1401                           	callstack 0
  1402                           
  1403 ;; *************** function _InterruptMangaer *****************
  1404 ;; Defined at:
  1405 ;;		line 38 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 1
  1426 ;; This function calls:
  1427 ;;		_INT0_ISR
  1428 ;;		_INT1_ISR
  1429 ;;		_INT2_ISR
  1430 ;;		_RB4_ISR
  1431 ;;		_RB5_ISR
  1432 ;;		_RB6_ISR
  1433 ;;		_RB7_ISR
  1434 ;; This function is called by:
  1435 ;;		Interrupt level 2
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	intcode
  1440   000008                     __pintcode:
  1441                           	callstack 0
  1442   000008                     _InterruptMangaer:
  1443                           	callstack 26
  1444                           
  1445                           ;incstack = 0
  1446   000008  8266               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1447   00000A  ED20  F008         	call	int_func,f	;refresh shadow registers
  1448                           
  1449                           	psect	intcode_body
  1450   001040                     __pintcode_body:
  1451                           	callstack 26
  1452   001040                     int_func:
  1453                           	callstack 26
  1454   001040  0006               	pop		; remove dummy address from shadow register refresh
  1455   001042                     
  1456                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:     if((INTCONbits.INT0IE == 1) && (
      +                          INTCONbits.INT0IF == 1)){
  1457   001042  A8F2               	btfss	242,4,c	;volatile
  1458   001044  EF26  F008         	goto	i2u129_41
  1459   001048  EF28  F008         	goto	i2u129_40
  1460   00104C                     i2u129_41:
  1461   00104C  EF31  F008         	goto	i2l707
  1462   001050                     i2u129_40:
  1463   001050  A2F2               	btfss	242,1,c	;volatile
  1464   001052  EF2D  F008         	goto	i2u130_41
  1465   001056  EF2F  F008         	goto	i2u130_40
  1466   00105A                     i2u130_41:
  1467   00105A  EF31  F008         	goto	i2l707
  1468   00105E                     i2u130_40:
  1469   00105E                     
  1470                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 40:         INT0_ISR();
  1471   00105E  EC93  F00B         	call	_INT0_ISR	;wreg free
  1472   001062                     i2l707:
  1473                           
  1474                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  1475   001062  A6F0               	btfss	240,3,c	;volatile
  1476   001064  EF36  F008         	goto	i2u131_41
  1477   001068  EF38  F008         	goto	i2u131_40
  1478   00106C                     i2u131_41:
  1479   00106C  EF41  F008         	goto	i2l709
  1480   001070                     i2u131_40:
  1481   001070  A0F0               	btfss	240,0,c	;volatile
  1482   001072  EF3D  F008         	goto	i2u132_41
  1483   001076  EF3F  F008         	goto	i2u132_40
  1484   00107A                     i2u132_41:
  1485   00107A  EF41  F008         	goto	i2l709
  1486   00107E                     i2u132_40:
  1487   00107E                     
  1488                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 46:         INT1_ISR();
  1489   00107E  EC91  F00B         	call	_INT1_ISR	;wreg free
  1490   001082                     i2l709:
  1491                           
  1492                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  1493   001082  A8F0               	btfss	240,4,c	;volatile
  1494   001084  EF46  F008         	goto	i2u133_41
  1495   001088  EF48  F008         	goto	i2u133_40
  1496   00108C                     i2u133_41:
  1497   00108C  EF51  F008         	goto	i2l711
  1498   001090                     i2u133_40:
  1499   001090  A2F0               	btfss	240,1,c	;volatile
  1500   001092  EF4D  F008         	goto	i2u134_41
  1501   001096  EF4F  F008         	goto	i2u134_40
  1502   00109A                     i2u134_41:
  1503   00109A  EF51  F008         	goto	i2l711
  1504   00109E                     i2u134_40:
  1505   00109E                     
  1506                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:         INT2_ISR();
  1507   00109E  EC8F  F00B         	call	_INT2_ISR	;wreg free
  1508   0010A2                     i2l711:
  1509                           
  1510                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB4 == GPIO_HIGH) && (RB4_F == 1)){
  1511   0010A2  A6F2               	btfss	242,3,c	;volatile
  1512   0010A4  EF56  F008         	goto	i2u135_41
  1513   0010A8  EF58  F008         	goto	i2u135_40
  1514   0010AC                     i2u135_41:
  1515   0010AC  EF73  F008         	goto	i2l713
  1516   0010B0                     i2u135_40:
  1517   0010B0  A0F2               	btfss	242,0,c	;volatile
  1518   0010B2  EF5D  F008         	goto	i2u136_41
  1519   0010B6  EF5F  F008         	goto	i2u136_40
  1520   0010BA                     i2u136_41:
  1521   0010BA  EF73  F008         	goto	i2l713
  1522   0010BE                     i2u136_40:
  1523   0010BE  A881               	btfss	129,4,c	;volatile
  1524   0010C0  EF64  F008         	goto	i2u137_41
  1525   0010C4  EF66  F008         	goto	i2u137_40
  1526   0010C8                     i2u137_41:
  1527   0010C8  EF73  F008         	goto	i2l713
  1528   0010CC                     i2u137_40:
  1529   0010CC  0432               	decf	_RB4_F^0,w,c	;volatile
  1530   0010CE  A4D8               	btfss	status,2,c
  1531   0010D0  EF6C  F008         	goto	i2u138_41
  1532   0010D4  EF6E  F008         	goto	i2u138_40
  1533   0010D8                     i2u138_41:
  1534   0010D8  EF73  F008         	goto	i2l713
  1535   0010DC                     i2u138_40:
  1536   0010DC                     
  1537                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:         RB4_F = 0;
  1538   0010DC  0E00               	movlw	0
  1539   0010DE  6E32               	movwf	_RB4_F^0,c	;volatile
  1540   0010E0                     
  1541                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:         RB4_ISR(0);
  1542   0010E0  0E00               	movlw	0
  1543   0010E2  EC5A  F00B         	call	_RB4_ISR
  1544   0010E6                     i2l713:
  1545                           
  1546                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB4 == GPIO_LOW) && (RB4_F == 0)){
  1547   0010E6  A6F2               	btfss	242,3,c	;volatile
  1548   0010E8  EF78  F008         	goto	i2u139_41
  1549   0010EC  EF7A  F008         	goto	i2u139_40
  1550   0010F0                     i2u139_41:
  1551   0010F0  EF95  F008         	goto	i2l715
  1552   0010F4                     i2u139_40:
  1553   0010F4  A0F2               	btfss	242,0,c	;volatile
  1554   0010F6  EF7F  F008         	goto	i2u140_41
  1555   0010FA  EF81  F008         	goto	i2u140_40
  1556   0010FE                     i2u140_41:
  1557   0010FE  EF95  F008         	goto	i2l715
  1558   001102                     i2u140_40:
  1559   001102  B881               	btfsc	129,4,c	;volatile
  1560   001104  EF86  F008         	goto	i2u141_41
  1561   001108  EF88  F008         	goto	i2u141_40
  1562   00110C                     i2u141_41:
  1563   00110C  EF95  F008         	goto	i2l715
  1564   001110                     i2u141_40:
  1565   001110  5032               	movf	_RB4_F^0,w,c	;volatile
  1566   001112  A4D8               	btfss	status,2,c
  1567   001114  EF8E  F008         	goto	i2u142_41
  1568   001118  EF90  F008         	goto	i2u142_40
  1569   00111C                     i2u142_41:
  1570   00111C  EF95  F008         	goto	i2l715
  1571   001120                     i2u142_40:
  1572   001120                     
  1573                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:         RB4_F = 1;
  1574   001120  0E01               	movlw	1
  1575   001122  6E32               	movwf	_RB4_F^0,c	;volatile
  1576   001124                     
  1577                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:         RB4_ISR(1);
  1578   001124  0E01               	movlw	1
  1579   001126  EC5A  F00B         	call	_RB4_ISR
  1580   00112A                     i2l715:
  1581                           
  1582                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB5 == GPIO_HIGH) && (RB5_F == 1)){
  1583   00112A  A6F2               	btfss	242,3,c	;volatile
  1584   00112C  EF9A  F008         	goto	i2u143_41
  1585   001130  EF9C  F008         	goto	i2u143_40
  1586   001134                     i2u143_41:
  1587   001134  EFB7  F008         	goto	i2l717
  1588   001138                     i2u143_40:
  1589   001138  A0F2               	btfss	242,0,c	;volatile
  1590   00113A  EFA1  F008         	goto	i2u144_41
  1591   00113E  EFA3  F008         	goto	i2u144_40
  1592   001142                     i2u144_41:
  1593   001142  EFB7  F008         	goto	i2l717
  1594   001146                     i2u144_40:
  1595   001146  AA81               	btfss	129,5,c	;volatile
  1596   001148  EFA8  F008         	goto	i2u145_41
  1597   00114C  EFAA  F008         	goto	i2u145_40
  1598   001150                     i2u145_41:
  1599   001150  EFB7  F008         	goto	i2l717
  1600   001154                     i2u145_40:
  1601   001154  0431               	decf	_RB5_F^0,w,c	;volatile
  1602   001156  A4D8               	btfss	status,2,c
  1603   001158  EFB0  F008         	goto	i2u146_41
  1604   00115C  EFB2  F008         	goto	i2u146_40
  1605   001160                     i2u146_41:
  1606   001160  EFB7  F008         	goto	i2l717
  1607   001164                     i2u146_40:
  1608   001164                     
  1609                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_F = 0;
  1610   001164  0E00               	movlw	0
  1611   001166  6E31               	movwf	_RB5_F^0,c	;volatile
  1612   001168                     
  1613                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:         RB5_ISR(0);
  1614   001168  0E00               	movlw	0
  1615   00116A  EC82  F00B         	call	_RB5_ISR
  1616   00116E                     i2l717:
  1617                           
  1618                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB5 == GPIO_LOW) && (RB5_F == 0)){
  1619   00116E  A6F2               	btfss	242,3,c	;volatile
  1620   001170  EFBC  F008         	goto	i2u147_41
  1621   001174  EFBE  F008         	goto	i2u147_40
  1622   001178                     i2u147_41:
  1623   001178  EFD9  F008         	goto	i2l719
  1624   00117C                     i2u147_40:
  1625   00117C  A0F2               	btfss	242,0,c	;volatile
  1626   00117E  EFC3  F008         	goto	i2u148_41
  1627   001182  EFC5  F008         	goto	i2u148_40
  1628   001186                     i2u148_41:
  1629   001186  EFD9  F008         	goto	i2l719
  1630   00118A                     i2u148_40:
  1631   00118A  BA81               	btfsc	129,5,c	;volatile
  1632   00118C  EFCA  F008         	goto	i2u149_41
  1633   001190  EFCC  F008         	goto	i2u149_40
  1634   001194                     i2u149_41:
  1635   001194  EFD9  F008         	goto	i2l719
  1636   001198                     i2u149_40:
  1637   001198  5031               	movf	_RB5_F^0,w,c	;volatile
  1638   00119A  A4D8               	btfss	status,2,c
  1639   00119C  EFD2  F008         	goto	i2u150_41
  1640   0011A0  EFD4  F008         	goto	i2u150_40
  1641   0011A4                     i2u150_41:
  1642   0011A4  EFD9  F008         	goto	i2l719
  1643   0011A8                     i2u150_40:
  1644   0011A8                     
  1645                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_F = 1;
  1646   0011A8  0E01               	movlw	1
  1647   0011AA  6E31               	movwf	_RB5_F^0,c	;volatile
  1648   0011AC                     
  1649                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
  1650   0011AC  0E01               	movlw	1
  1651   0011AE  EC82  F00B         	call	_RB5_ISR
  1652   0011B2                     i2l719:
  1653                           
  1654                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB6 == GPIO_HIGH) && (RB6_F == 1)){
  1655   0011B2  A6F2               	btfss	242,3,c	;volatile
  1656   0011B4  EFDE  F008         	goto	i2u151_41
  1657   0011B8  EFE0  F008         	goto	i2u151_40
  1658   0011BC                     i2u151_41:
  1659   0011BC  EFFB  F008         	goto	i2l721
  1660   0011C0                     i2u151_40:
  1661   0011C0  A0F2               	btfss	242,0,c	;volatile
  1662   0011C2  EFE5  F008         	goto	i2u152_41
  1663   0011C6  EFE7  F008         	goto	i2u152_40
  1664   0011CA                     i2u152_41:
  1665   0011CA  EFFB  F008         	goto	i2l721
  1666   0011CE                     i2u152_40:
  1667   0011CE  AC81               	btfss	129,6,c	;volatile
  1668   0011D0  EFEC  F008         	goto	i2u153_41
  1669   0011D4  EFEE  F008         	goto	i2u153_40
  1670   0011D8                     i2u153_41:
  1671   0011D8  EFFB  F008         	goto	i2l721
  1672   0011DC                     i2u153_40:
  1673   0011DC  0430               	decf	_RB6_F^0,w,c	;volatile
  1674   0011DE  A4D8               	btfss	status,2,c
  1675   0011E0  EFF4  F008         	goto	i2u154_41
  1676   0011E4  EFF6  F008         	goto	i2u154_40
  1677   0011E8                     i2u154_41:
  1678   0011E8  EFFB  F008         	goto	i2l721
  1679   0011EC                     i2u154_40:
  1680   0011EC                     
  1681                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:         RB6_F = 0;
  1682   0011EC  0E00               	movlw	0
  1683   0011EE  6E30               	movwf	_RB6_F^0,c	;volatile
  1684   0011F0                     
  1685                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_ISR(0);
  1686   0011F0  0E00               	movlw	0
  1687   0011F2  EC75  F00B         	call	_RB6_ISR
  1688   0011F6                     i2l721:
  1689                           
  1690                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB6 == GPIO_LOW) && (RB6_F == 0)){
  1691   0011F6  A6F2               	btfss	242,3,c	;volatile
  1692   0011F8  EF00  F009         	goto	i2u155_41
  1693   0011FC  EF02  F009         	goto	i2u155_40
  1694   001200                     i2u155_41:
  1695   001200  EF1D  F009         	goto	i2l723
  1696   001204                     i2u155_40:
  1697   001204  A0F2               	btfss	242,0,c	;volatile
  1698   001206  EF07  F009         	goto	i2u156_41
  1699   00120A  EF09  F009         	goto	i2u156_40
  1700   00120E                     i2u156_41:
  1701   00120E  EF1D  F009         	goto	i2l723
  1702   001212                     i2u156_40:
  1703   001212  BC81               	btfsc	129,6,c	;volatile
  1704   001214  EF0E  F009         	goto	i2u157_41
  1705   001218  EF10  F009         	goto	i2u157_40
  1706   00121C                     i2u157_41:
  1707   00121C  EF1D  F009         	goto	i2l723
  1708   001220                     i2u157_40:
  1709   001220  5030               	movf	_RB6_F^0,w,c	;volatile
  1710   001222  A4D8               	btfss	status,2,c
  1711   001224  EF16  F009         	goto	i2u158_41
  1712   001228  EF18  F009         	goto	i2u158_40
  1713   00122C                     i2u158_41:
  1714   00122C  EF1D  F009         	goto	i2l723
  1715   001230                     i2u158_40:
  1716   001230                     
  1717                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:         RB6_F = 1;
  1718   001230  0E01               	movlw	1
  1719   001232  6E30               	movwf	_RB6_F^0,c	;volatile
  1720   001234                     
  1721                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:         RB4_ISR(1);
  1722   001234  0E01               	movlw	1
  1723   001236  EC5A  F00B         	call	_RB4_ISR
  1724   00123A                     i2l723:
  1725                           
  1726                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB7 == GPIO_HIGH) && (RB7_F == 1)){
  1727   00123A  A6F2               	btfss	242,3,c	;volatile
  1728   00123C  EF22  F009         	goto	i2u159_41
  1729   001240  EF24  F009         	goto	i2u159_40
  1730   001244                     i2u159_41:
  1731   001244  EF3F  F009         	goto	i2l725
  1732   001248                     i2u159_40:
  1733   001248  A0F2               	btfss	242,0,c	;volatile
  1734   00124A  EF29  F009         	goto	i2u160_41
  1735   00124E  EF2B  F009         	goto	i2u160_40
  1736   001252                     i2u160_41:
  1737   001252  EF3F  F009         	goto	i2l725
  1738   001256                     i2u160_40:
  1739   001256  AE81               	btfss	129,7,c	;volatile
  1740   001258  EF30  F009         	goto	i2u161_41
  1741   00125C  EF32  F009         	goto	i2u161_40
  1742   001260                     i2u161_41:
  1743   001260  EF3F  F009         	goto	i2l725
  1744   001264                     i2u161_40:
  1745   001264  042F               	decf	_RB7_F^0,w,c	;volatile
  1746   001266  A4D8               	btfss	status,2,c
  1747   001268  EF38  F009         	goto	i2u162_41
  1748   00126C  EF3A  F009         	goto	i2u162_40
  1749   001270                     i2u162_41:
  1750   001270  EF3F  F009         	goto	i2l725
  1751   001274                     i2u162_40:
  1752   001274                     
  1753                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84:         RB7_F = 0;
  1754   001274  0E00               	movlw	0
  1755   001276  6E2F               	movwf	_RB7_F^0,c	;volatile
  1756   001278                     
  1757                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:         RB7_ISR(0);
  1758   001278  0E00               	movlw	0
  1759   00127A  EC68  F00B         	call	_RB7_ISR
  1760   00127E                     i2l725:
  1761   00127E  A6F2               	btfss	242,3,c	;volatile
  1762   001280  EF44  F009         	goto	i2u163_41
  1763   001284  EF46  F009         	goto	i2u163_40
  1764   001288                     i2u163_41:
  1765   001288  EF61  F009         	goto	i2l728
  1766   00128C                     i2u163_40:
  1767   00128C  A0F2               	btfss	242,0,c	;volatile
  1768   00128E  EF4B  F009         	goto	i2u164_41
  1769   001292  EF4D  F009         	goto	i2u164_40
  1770   001296                     i2u164_41:
  1771   001296  EF61  F009         	goto	i2l728
  1772   00129A                     i2u164_40:
  1773   00129A  AE81               	btfss	129,7,c	;volatile
  1774   00129C  EF52  F009         	goto	i2u165_41
  1775   0012A0  EF54  F009         	goto	i2u165_40
  1776   0012A4                     i2u165_41:
  1777   0012A4  EF61  F009         	goto	i2l728
  1778   0012A8                     i2u165_40:
  1779   0012A8  502F               	movf	_RB7_F^0,w,c	;volatile
  1780   0012AA  A4D8               	btfss	status,2,c
  1781   0012AC  EF5A  F009         	goto	i2u166_41
  1782   0012B0  EF5C  F009         	goto	i2u166_40
  1783   0012B4                     i2u166_41:
  1784   0012B4  EF61  F009         	goto	i2l728
  1785   0012B8                     i2u166_40:
  1786   0012B8                     
  1787                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_F = 0;
  1788   0012B8  0E00               	movlw	0
  1789   0012BA  6E2F               	movwf	_RB7_F^0,c	;volatile
  1790   0012BC                     
  1791                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:         RB7_ISR(1);
  1792   0012BC  0E01               	movlw	1
  1793   0012BE  EC68  F00B         	call	_RB7_ISR
  1794   0012C2                     i2l728:
  1795   0012C2  9266               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1796   0012C4  0011               	retfie		f
  1797   0012C6                     __end_of_InterruptMangaer:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _RB7_ISR *****************
  1801 ;; Defined at:
  1802 ;;		line 170 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  n               1    wreg     unsigned char 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  n               1    0[COMRAM] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;Total ram usage:        1 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_InterruptMangaer
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text10
  1830   0016D0                     __ptext10:
  1831                           	callstack 0
  1832   0016D0                     _RB7_ISR:
  1833                           	callstack 26
  1834                           
  1835                           ;incstack = 0
  1836                           ;RB7_ISR@n stored from wreg
  1837   0016D0  6E5A               	movwf	RB7_ISR@n^0,c
  1838   0016D2                     
  1839                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 172:     (INTCONbits.RBIF = 0);
  1840   0016D2  90F2               	bcf	242,0,c	;volatile
  1841   0016D4                     
  1842                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 176:    if(!n){
  1843   0016D4  505A               	movf	RB7_ISR@n^0,w,c
  1844   0016D6  A4D8               	btfss	status,2,c
  1845   0016D8  EF70  F00B         	goto	i2u44_41
  1846   0016DC  EF72  F00B         	goto	i2u44_40
  1847   0016E0                     i2u44_41:
  1848   0016E0  EF74  F00B         	goto	i2l1966
  1849   0016E4                     i2u44_40:
  1850   0016E4  EF74  F00B         	goto	i2l570
  1851   0016E8                     i2l1966:
  1852   0016E8                     i2l570:
  1853   0016E8  0012               	return		;funcret
  1854   0016EA                     __end_of_RB7_ISR:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _RB6_ISR *****************
  1858 ;; Defined at:
  1859 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  n               1    wreg     unsigned char 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  n               1    0[COMRAM] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;Total ram usage:        1 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_InterruptMangaer
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text11
  1887   0016EA                     __ptext11:
  1888                           	callstack 0
  1889   0016EA                     _RB6_ISR:
  1890                           	callstack 26
  1891                           
  1892                           ;incstack = 0
  1893                           ;RB6_ISR@n stored from wreg
  1894   0016EA  6E5A               	movwf	RB6_ISR@n^0,c
  1895   0016EC                     
  1896                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  1897   0016EC  90F2               	bcf	242,0,c	;volatile
  1898   0016EE                     
  1899                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 151:     if(!n){
  1900   0016EE  505A               	movf	RB6_ISR@n^0,w,c
  1901   0016F0  A4D8               	btfss	status,2,c
  1902   0016F2  EF7D  F00B         	goto	i2u43_41
  1903   0016F6  EF7F  F00B         	goto	i2u43_40
  1904   0016FA                     i2u43_41:
  1905   0016FA  EF81  F00B         	goto	i2l1952
  1906   0016FE                     i2u43_40:
  1907   0016FE  EF81  F00B         	goto	i2l559
  1908   001702                     i2l1952:
  1909   001702                     i2l559:
  1910   001702  0012               	return		;funcret
  1911   001704                     __end_of_RB6_ISR:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _RB5_ISR *****************
  1915 ;; Defined at:
  1916 ;;		line 121 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  n               1    wreg     unsigned char 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  n               1    0[COMRAM] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        1 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_InterruptMangaer
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text12
  1944   001704                     __ptext12:
  1945                           	callstack 0
  1946   001704                     _RB5_ISR:
  1947                           	callstack 26
  1948                           
  1949                           ;incstack = 0
  1950                           ;RB5_ISR@n stored from wreg
  1951   001704  6E5A               	movwf	RB5_ISR@n^0,c
  1952   001706                     
  1953                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 123:     (INTCONbits.RBIF = 0);
  1954   001706  90F2               	bcf	242,0,c	;volatile
  1955   001708                     
  1956                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 127:     if(!n){
  1957   001708  505A               	movf	RB5_ISR@n^0,w,c
  1958   00170A  A4D8               	btfss	status,2,c
  1959   00170C  EF8A  F00B         	goto	i2u42_41
  1960   001710  EF8C  F00B         	goto	i2u42_40
  1961   001714                     i2u42_41:
  1962   001714  EF8E  F00B         	goto	i2l1938
  1963   001718                     i2u42_40:
  1964   001718  EF8E  F00B         	goto	i2l548
  1965   00171C                     i2l1938:
  1966   00171C                     i2l548:
  1967   00171C  0012               	return		;funcret
  1968   00171E                     __end_of_RB5_ISR:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _RB4_ISR *****************
  1972 ;; Defined at:
  1973 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  n               1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  n               1    0[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_InterruptMangaer
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text13
  2001   0016B4                     __ptext13:
  2002                           	callstack 0
  2003   0016B4                     _RB4_ISR:
  2004                           	callstack 26
  2005                           
  2006                           ;incstack = 0
  2007                           ;RB4_ISR@n stored from wreg
  2008   0016B4  6E5A               	movwf	RB4_ISR@n^0,c
  2009   0016B6                     
  2010                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCONbits.RBIF = 0);
  2011   0016B6  90F2               	bcf	242,0,c	;volatile
  2012   0016B8                     
  2013                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 101:     if(!n){
  2014   0016B8  505A               	movf	RB4_ISR@n^0,w,c
  2015   0016BA  A4D8               	btfss	status,2,c
  2016   0016BC  EF62  F00B         	goto	i2u41_41
  2017   0016C0  EF64  F00B         	goto	i2u41_40
  2018   0016C4                     i2u41_41:
  2019   0016C4  EF66  F00B         	goto	i2l1924
  2020   0016C8                     i2u41_40:
  2021   0016C8  EF66  F00B         	goto	i2l532
  2022   0016CC                     i2l1924:
  2023   0016CC                     i2l532:
  2024                           
  2025                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 118:         (INTCONbits.RBIF = 0);
  2026   0016CC  90F2               	bcf	242,0,c	;volatile
  2027   0016CE  0012               	return		;funcret
  2028   0016D0                     __end_of_RB4_ISR:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _INT2_ISR *****************
  2032 ;; Defined at:
  2033 ;;		line 81 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		None
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_InterruptMangaer
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text14
  2061   00171E                     __ptext14:
  2062                           	callstack 0
  2063   00171E                     _INT2_ISR:
  2064                           	callstack 26
  2065   00171E                     
  2066                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 83:     (INTCON3bits.INT2IF = 0);
  2067   00171E  92F0               	bcf	240,1,c	;volatile
  2068   001720  0012               	return		;funcret
  2069   001722                     __end_of_INT2_ISR:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _INT1_ISR *****************
  2073 ;; Defined at:
  2074 ;;		line 67 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		None
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_InterruptMangaer
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text15
  2102   001722                     __ptext15:
  2103                           	callstack 0
  2104   001722                     _INT1_ISR:
  2105                           	callstack 26
  2106   001722                     
  2107                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 69:     (INTCON3bits.INT1IF = 0);
  2108   001722  90F0               	bcf	240,0,c	;volatile
  2109   001724  0012               	return		;funcret
  2110   001726                     __end_of_INT1_ISR:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _INT0_ISR *****************
  2114 ;; Defined at:
  2115 ;;		line 53 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		None
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_InterruptMangaer
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text16
  2143   001726                     __ptext16:
  2144                           	callstack 0
  2145   001726                     _INT0_ISR:
  2146                           	callstack 26
  2147   001726                     
  2148                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 55:     (INTCONbits.INT0IF = 0);
  2149   001726  92F2               	bcf	242,1,c	;volatile
  2150   001728  0012               	return		;funcret
  2151   00172A                     __end_of_INT0_ISR:
  2152                           	callstack 0
  2153                           
  2154                           	psect	rparam
  2155   000000                     
  2156                           	psect	temp
  2157   000066                     btemp:
  2158                           	callstack 0
  2159   000066                     	ds	1
  2160   000000                     int$flags	set	btemp
  2161   000000                     wtemp8	set	btemp+1
  2162   000000                     ttemp5	set	btemp+1
  2163   000000                     ttemp6	set	btemp+4
  2164   000000                     ttemp7	set	btemp+8
  2165                           
  2166                           	psect	config
  2167                           
  2168                           ; Padding undefined space
  2169   300000                     	org	3145728
  2170   300000  FF                 	db	255
  2171                           
  2172                           ;Config register CONFIG1H @ 0x300001
  2173                           ;	Oscillator Selection bits
  2174                           ;	OSC = HS, HS oscillator
  2175                           ;	Fail-Safe Clock Monitor Enable bit
  2176                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2177                           ;	Internal/External Oscillator Switchover bit
  2178                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2179   300001                     	org	3145729
  2180   300001  02                 	db	2
  2181                           
  2182                           ;Config register CONFIG2L @ 0x300002
  2183                           ;	Power-up Timer Enable bit
  2184                           ;	PWRT = OFF, PWRT disabled
  2185                           ;	Brown-out Reset Enable bits
  2186                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2187                           ;	Brown Out Reset Voltage bits
  2188                           ;	BORV = 1, 
  2189   300002                     	org	3145730
  2190   300002  09                 	db	9
  2191                           
  2192                           ;Config register CONFIG2H @ 0x300003
  2193                           ;	Watchdog Timer Enable bit
  2194                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2195                           ;	Watchdog Timer Postscale Select bits
  2196                           ;	WDTPS = 32768, 1:32768
  2197   300003                     	org	3145731
  2198   300003  1E                 	db	30
  2199                           
  2200                           ; Padding undefined space
  2201   300004                     	org	3145732
  2202   300004  FF                 	db	255
  2203                           
  2204                           ;Config register CONFIG3H @ 0x300005
  2205                           ;	CCP2 MUX bit
  2206                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2207                           ;	PORTB A/D Enable bit
  2208                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2209                           ;	Low-Power Timer1 Oscillator Enable bit
  2210                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2211                           ;	MCLR Pin Enable bit
  2212                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2213   300005                     	org	3145733
  2214   300005  81                 	db	129
  2215                           
  2216                           ;Config register CONFIG4L @ 0x300006
  2217                           ;	Stack Full/Underflow Reset Enable bit
  2218                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2219                           ;	Single-Supply ICSP Enable bit
  2220                           ;	LVP = OFF, Single-Supply ICSP disabled
  2221                           ;	Extended Instruction Set Enable bit
  2222                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2223                           ;	Background Debugger Enable bit
  2224                           ;	DEBUG = 0x1, unprogrammed default
  2225   300006                     	org	3145734
  2226   300006  81                 	db	129
  2227                           
  2228                           ; Padding undefined space
  2229   300007                     	org	3145735
  2230   300007  FF                 	db	255
  2231                           
  2232                           ;Config register CONFIG5L @ 0x300008
  2233                           ;	Code Protection bit
  2234                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2235                           ;	Code Protection bit
  2236                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2237                           ;	Code Protection bit
  2238                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2239                           ;	Code Protection bit
  2240                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2241   300008                     	org	3145736
  2242   300008  0F                 	db	15
  2243                           
  2244                           ;Config register CONFIG5H @ 0x300009
  2245                           ;	Boot Block Code Protection bit
  2246                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2247                           ;	Data EEPROM Code Protection bit
  2248                           ;	CPD = OFF, Data EEPROM not code-protected
  2249   300009                     	org	3145737
  2250   300009  C0                 	db	192
  2251                           
  2252                           ;Config register CONFIG6L @ 0x30000A
  2253                           ;	Write Protection bit
  2254                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2255                           ;	Write Protection bit
  2256                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2257                           ;	Write Protection bit
  2258                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2259                           ;	Write Protection bit
  2260                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2261   30000A                     	org	3145738
  2262   30000A  0F                 	db	15
  2263                           
  2264                           ;Config register CONFIG6H @ 0x30000B
  2265                           ;	Configuration Register Write Protection bit
  2266                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2267                           ;	Boot Block Write Protection bit
  2268                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2269                           ;	Data EEPROM Write Protection bit
  2270                           ;	WRTD = OFF, Data EEPROM not write-protected
  2271   30000B                     	org	3145739
  2272   30000B  E0                 	db	224
  2273                           
  2274                           ;Config register CONFIG7L @ 0x30000C
  2275                           ;	Table Read Protection bit
  2276                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2277                           ;	Table Read Protection bit
  2278                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2279                           ;	Table Read Protection bit
  2280                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2281                           ;	Table Read Protection bit
  2282                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2283   30000C                     	org	3145740
  2284   30000C  0F                 	db	15
  2285                           
  2286                           ;Config register CONFIG7H @ 0x30000D
  2287                           ;	Boot Block Table Read Protection bit
  2288                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2289   30000D                     	org	3145741
  2290   30000D  40                 	db	64
  2291                           tosu	equ	0xFFF
  2292                           tosh	equ	0xFFE
  2293                           tosl	equ	0xFFD
  2294                           stkptr	equ	0xFFC
  2295                           pclatu	equ	0xFFB
  2296                           pclath	equ	0xFFA
  2297                           pcl	equ	0xFF9
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           prodh	equ	0xFF4
  2303                           prodl	equ	0xFF3
  2304                           indf0	equ	0xFEF
  2305                           postinc0	equ	0xFEE
  2306                           postdec0	equ	0xFED
  2307                           preinc0	equ	0xFEC
  2308                           plusw0	equ	0xFEB
  2309                           fsr0h	equ	0xFEA
  2310                           fsr0l	equ	0xFE9
  2311                           wreg	equ	0xFE8
  2312                           indf1	equ	0xFE7
  2313                           postinc1	equ	0xFE6
  2314                           postdec1	equ	0xFE5
  2315                           preinc1	equ	0xFE4
  2316                           plusw1	equ	0xFE3
  2317                           fsr1h	equ	0xFE2
  2318                           fsr1l	equ	0xFE1
  2319                           bsr	equ	0xFE0
  2320                           indf2	equ	0xFDF
  2321                           postinc2	equ	0xFDE
  2322                           postdec2	equ	0xFDD
  2323                           preinc2	equ	0xFDC
  2324                           plusw2	equ	0xFDB
  2325                           fsr2h	equ	0xFDA
  2326                           fsr2l	equ	0xFD9
  2327                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    56
    Data        57
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     12     101
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Blocking@adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    ADC_Get_Conversion_Blocking@result	PTR unsigned short  size(1) Largest target is 2
		 -> value(COMRAM[2]), 

    ADC_Get_Conversion_Result@adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    ADC_Get_Conversion_Result@result	PTR unsigned short  size(1) Largest target is 2
		 -> value(COMRAM[2]), 

    ADC_Init@adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    ADC_Select_Channel@adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    ADC_Select_result_format@adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    ADC_Select_Voltage_Refrence@adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    ADC_Start_Conversion@adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT0_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Src@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_INTERRUPT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_INTERRUPT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1041$EXT_INTERRUPT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1041$EXT_INTERRUPT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    S2215$buffer	PTR unsigned char  size(2) Largest target is 0

    S2215$source	PTR const unsigned char  size(2) Largest target is 0

    S925$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Set_Interrupt_Handler@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(BITBIGSFRlllh[1]), TRISC(BITBIGSFRlllh[1]), TRISD(BITBIGSFRlllh[1]), 
		 -> TRISE(BITBIGSFRlllh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ADC_Get_Conversion_Blocking
    _ADC_Init->_ADC_Configure_Port
    _ADC_Get_Conversion_Blocking->_ADC_Get_Conversion_Result
    _ADC_Select_Channel->_ADC_Configure_Port

Critical Paths under _InterruptMangaer in COMRAM

    _InterruptMangaer->_RB4_ISR
    _InterruptMangaer->_RB5_ISR
    _InterruptMangaer->_RB6_ISR
    _InterruptMangaer->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptMangaer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptMangaer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptMangaer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptMangaer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptMangaer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptMangaer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptMangaer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptMangaer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptMangaer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptMangaer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptMangaer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptMangaer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptMangaer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptMangaer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptMangaer in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptMangaer in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1818
        _ADC_Get_Conversion_Blocking
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     2      1     755
                                              4 COMRAM     2     1      1
                 _ADC_Configure_Port
        _ADC_Select_Voltage_Refrence
           _ADC_Select_result_format
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_result_format                             3     1      2     226
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Voltage_Refrence                          3     1      2     227
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Get_Conversion_Blocking                          4     1      3    1063
                                              9 COMRAM     3     0      3
          _ADC_Get_Conversion_Result
                 _ADC_Select_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 2     1      1     122
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   4     2      2     262
                                              4 COMRAM     4     2      2
                 _ADC_Configure_Port
 ---------------------------------------------------------------------------------
 (2) _ADC_Configure_Port                                   4     4      0      20
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result                            8     6      2     308
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptMangaer                                     0     0      0     120
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get_Conversion_Blocking
     _ADC_Get_Conversion_Result
     _ADC_Select_Channel
       _ADC_Configure_Port
     _ADC_Start_Conversion
   _ADC_Init
     _ADC_Configure_Port
     _ADC_Select_Voltage_Refrence
     _ADC_Select_result_format

 _InterruptMangaer (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      C      65       1       80.2%
BITBIGSFRlhlh       2B      0       0      37        0.0%
BITBIGSFRlhll       15      0       0      38        0.0%
BITBIGSFRlllh        F      0       0      39        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRllllh       4      0       0      40        0.0%
BITBIGSFRlllll       4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65      42        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Aug 04 05:28:51 2024

       ADC_Get_Conversion_Result@adc 005B                   ??_InterruptMangaer 005B  
       ADC_Get_Conversion_Result@ret 0062            ADC_Configure_Port@channel 005D  
__end_of_ADC_Select_Voltage_Refrence 15BE          _ADC_Select_Voltage_Refrence 157C  
              _INT0_INTERRUPTHANDLER 004E                                  l804 15FE  
                                l823 14F2                                  l807 168C  
                                l831 157A                                  l809 1692  
                                l841 15B8                                  l851 1534  
                                l828 1560                                  l844 15BC  
                                l837 15A0                                  l853 1536  
                                l790 13B2                                  l871 139C  
                                l759 169C                                  l792 13B6  
                                l794 144E                                  _ret 0050  
                led_initialize@F3062 0057                                  wreg 0FE8  
         ADC_Select_Channel@channels 005F        ??_ADC_Select_Voltage_Refrence 005D  
                    __end_of_RB4_ISR 16D0                      __end_of_RB5_ISR 171E  
                    __end_of_RB6_ISR 1704                      __end_of_RB7_ISR 16EA  
                               l3000 15EC                                 l3002 15FC  
                               l3010 1690                                 l3020 1484  
                               l3022 14A8                                 l3014 1450  
                               l3006 1670                                 l3024 14C0  
                               l3016 1464                                 l3008 1684  
                               l3040 1418                                 l3032 139E  
                               l3018 146C                                 l1610 12CC  
                               l3050 1548                                 l3042 1432  
                               l3034 13AE                                 l3028 14F0  
                               l1620 12EA                                 l1612 12D2  
                               l3052 154C                                 l3044 144C  
                               l3036 13BA                                 l3060 1694  
                               l1630 1308                                 l1622 12F0  
                               l1614 12D8                                 l3054 1558  
                               l3038 1408                                 l1632 130E  
                               l1624 12F6                                 l1616 12DE  
                               l1608 12C8                                 l3056 156E  
                               l3048 1538                                 l3066 132E  
                               l1634 1314                                 l1626 12FC  
                               l1618 12E4                                 l1628 1302  
                               l1638 131A                                 l2970 157C  
                               l2972 158C                                 l2974 1590  
                               l2990 151E                                 l2982 14F4  
                               l2976 15A8                                 l2992 152E  
                               l2984 1504                                 l2994 15BE  
                               l2986 1508                                 l2996 15D2  
                               l2988 1518                                 l2998 15DA  
                 _ADC_Configure_Port 12C6                                 STR_1 103C  
                               STR_2 1039                                 _LATA 0F89  
                               _LATB 0F8A                                 _LATC 0F8B  
                               _LATD 0F8C                                 _LATE 0F8D  
                               u1700 15A0                                 u1701 159C  
                               u1710 15B8                                 u1711 15B4  
                               u1720 1504                                 u1721 1500  
                               u1730 1518                                 u1810 13AE  
                               u1731 1514                                 u1811 13AA  
                               u1820 1548                                 u1740 152E  
                               u1805 14D6                                 u1821 1544  
                               u1741 152A                                 u1750 15D2  
                               u1830 156E                                 u1751 15CE  
                               u1831 156A                                 u1760 1684  
                               u1761 1680                                 u1770 1464  
                               u1690 158C                                 u1771 1460  
                               u1691 1588                                 u1780 1484  
                               u1781 1480                                 u1790 14C0  
                               u1791 14BC                                 _adc1 0033  
                               _led1 0039                                 _led2 0038  
                               _led3 0037                                 _main 1694  
                               fsr2h 0FDA                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               btemp 0066                     __end_of_ADC_Init 1450  
                               start 000E                  ?_ADC_Configure_Port 005A  
                       ___param_bank 0000           __end_of_ADC_Select_Channel 1600  
     ADC_Select_result_format@format 005C                     __end_of_INT0_ISR 172A  
                   __end_of_INT1_ISR 1726                     __end_of_INT2_ISR 1722  
                              ?_main 005A                                _EEADR 0FA9  
                              _RB4_F 0032                                _RB5_F 0031  
                              _RB6_F 0030                                _RB7_F 002F  
                              i2l521 1724                                i2l516 1728  
                              i2l532 16CC                                i2l526 1720  
                              i2l711 10A2                                i2l537 16CE  
                              i2l721 11F6                                i2l713 10E6  
                              i2l570 16E8                                i2l723 123A  
                              i2l715 112A                                i2l707 1062  
                              i2l548 171C                                i2l725 127E  
                              i2l717 116E                                i2l709 1082  
                              i2l559 1702                                i2l719 11B2  
                              i2l728 12C2                  relay_turn_off@F3065 0051  
               ??_ADC_Configure_Port 005B                                _PORTA 0F80  
                              _PORTB 0F81                                _PORTC 0F82  
                              _PORTD 0F83                                _PORTE 0F84  
                              _TRISA 0F92                                _TRISB 0F93  
                              _TRISC 0F94                                _TRISD 0F95  
                              _TRISE 0F96                 _ADC_Start_Conversion 1670  
                              _value 0058                                tablat 0FF5  
                              ttemp5 0067                                ttemp6 006A  
                              ttemp7 006E                                status 0FD8  
                              wtemp8 0067              _RB4_INTERRUPTHANDLERLOW 0046  
            _RB7_INTERRUPTHANDLERLOW 003A                      __initialization 163A  
                       __end_of_main 16B4                        _lat_registers 001B  
                             ??_main 0066                        __activetblptr 0003  
                   led_turn_on@F3067 0056                            ??_RB4_ISR 005A  
                          ??_RB5_ISR 005A                            ??_RB6_ISR 005A  
                          ??_RB7_ISR 005A       ADC_Select_Voltage_Refrence@adc 005B  
              ?_ADC_Start_Conversion 005B                               _ADRESH 0FC4  
                             _EEADRH 0FAA                               _ADRESL 0FC3  
                             _EEDATA 0FA8                               _EECON2 0FA7  
                             i2l1910 171E                               i2l1904 1722  
                             i2l1930 1706                               i2l1924 16CC  
                             i2l1916 16B6                               i2l1932 1708  
                             i2l2900 1198                               i2l1918 16B8  
                             i2l2910 11DC                               i2l2902 11A8  
                             i2l1952 1702                               i2l1944 16EC  
                             i2l1960 16D4                               i2l2920 1220  
                             i2l2912 11EC                               i2l2904 11AC  
                             i2l1938 171C                               i2l1946 16EE  
                             i2l2930 1264                               i2l2922 1230  
                             i2l2914 11F0                               i2l2906 11C0  
                             i2l2940 12A8                               i2l2932 1274  
                             i2l2924 1234                               i2l2916 1204  
                             i2l2908 11CE                               i2l2860 107E  
                             i2l2852 1042                               i2l1966 16E8  
                             i2l1958 16D2                               i2l2942 12B8  
                             i2l2934 1278                               i2l2926 1248  
                             i2l2918 1212                               i2l2870 10CC  
                             i2l2862 1090                               i2l2854 1050  
                             i2l2944 12BC                               i2l2936 128C  
                             i2l2928 1256                               i2l2880 1110  
                             i2l2872 10DC                               i2l2864 109E  
                             i2l2856 105E                               i2l1898 1726  
                             i2l2938 129A                               i2l2890 1154  
                             i2l2882 1120                               i2l2874 10E0  
                             i2l2866 10B0                               i2l2858 1070  
                             i2l2892 1164                               i2l2884 1124  
                             i2l2876 10F4                               i2l2868 10BE  
                             i2l2894 1168                               i2l2886 1138  
                             i2l2878 1102                               i2l2896 117C  
                             i2l2888 1146                               i2l2898 118A  
              _INT1_INTERRUPTHANDLER 004C                               clear_0 1660  
                             isa$std 0001                         __pdataCOMRAM 0001  
                          ?_ADC_Init 005E                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8  __end_of_ADC_Get_Conversion_Blocking 157C  
        _ADC_Get_Conversion_Blocking 1538              ADC_Start_Conversion@adc 005B  
            ADC_Start_Conversion@ret 005C                           __accesstop 0080  
            __end_of__initialization 1666                            ?_INT0_ISR 005A  
                          ?_INT1_ISR 005A                            ?_INT2_ISR 005A  
           _RB4_INTERRUPTHANDLERHIGH 0048        ??_ADC_Get_Conversion_Blocking 0066  
                      ___rparam_used 0001             _RB7_INTERRUPTHANDLERHIGH 003C  
          ?_ADC_Select_result_format 005B                       __pcstackCOMRAM 005A  
                         ??_ADC_Init 005F               ??_ADC_Start_Conversion 005C  
         ?_ADC_Get_Conversion_Result 005B                           ??_INT0_ISR 005A  
                         ??_INT1_ISR 005A                           ??_INT2_ISR 005A  
                  led_turn_off@F3072 0055                _INT2_INTERRUPTHANDLER 004A  
                            _RB4_ISR 16B4                              _RB5_ISR 1704  
                            _RB6_ISR 16EA                              _RB7_ISR 16D0  
                 _ADC_Select_Channel 15BE                        _keypad_values 0001  
               led_turn_toggle@F3077 0054                              i2u41_40 16C8  
                            i2u41_41 16C4                              i2u42_40 1718  
                            i2u42_41 1714                              i2u43_40 16FE  
                            i2u43_41 16FA                              i2u44_40 16E4  
                            i2u44_41 16E0    __end_of_ADC_Get_Conversion_Result 14F4  
                ?_ADC_Select_Channel 005E                       _tris_registers 0025  
                            __Hparam 0000                              __Lparam 0000  
               ??_ADC_Select_Channel 0060                         __psmallconst 1000  
                            __pcinit 163A                              __ramtop 1000  
                         _customChar 1031                              __ptext0 1694  
                            __ptext1 139E                              __ptext2 14F4  
                            __ptext3 157C                              __ptext4 1538  
                            __ptext5 1670                              __ptext6 15BE  
                            __ptext7 12C6                              __ptext8 1450  
                     __pintcode_body 1040                 end_of_initialization 1666  
                            int_func 1040              _RB5_INTERRUPTHANDLERLOW 0042  
                            postdec1 0FE5                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                          _PORTBbits 0F81                     _InterruptMangaer 0008  
   __end_of_ADC_Select_result_format 1538                   relay_turn_on@F3060 0052  
                      __pidataCOMRAM 1600         ?_ADC_Select_Voltage_Refrence 005B  
                start_initialization 163A          ??_ADC_Get_Conversion_Result 005D  
           _RB6_INTERRUPTHANDLERHIGH 0040                             ?_RB4_ISR 005A  
                           ?_RB5_ISR 005A                             ?_RB6_ISR 005A  
                           ?_RB7_ISR 005A                          __pbssCOMRAM 003A  
                           RB4_ISR@n 005A                             RB5_ISR@n 005A  
                           RB6_ISR@n 005A                             RB7_ISR@n 005A  
           _ADC_Select_result_format 14F4       ADC_Get_Conversion_Blocking@adc 0063  
          _ADC_Get_Conversion_Result 1450                            __pintcode 0008  
  ADC_Get_Conversion_Blocking@result 0065   ADC_Select_Voltage_Refrence@voltage 005C  
                        __smallconst 1000                             _ADC_Init 139E  
                        ADC_Init@adc 005E                  __end_of_customChar2 1031  
                __end_of_customChar3 1029                  __end_of_customChar4 1021  
                __end_of_customChar5 1019                  __end_of_customChar6 1011  
                __end_of_customChar7 1009                             _INT0_ISR 1726  
                           _INT1_ISR 1722                             _INT2_ISR 171E  
           __end_of_InterruptMangaer 12C6                             i2u130_40 105E  
                           i2u130_41 105A                             i2u131_40 1070  
                           i2u131_41 106C                             i2u140_40 1102  
                           i2u132_40 107E                             i2u140_41 10FE  
                           i2u132_41 107A                             i2u141_40 1110  
                           i2u133_40 1090                             i2u141_41 110C  
                           i2u133_41 108C                             i2u150_40 11A8  
                           i2u142_40 1120                             i2u134_40 109E  
                           i2u150_41 11A4                             i2u142_41 111C  
                           i2u134_41 109A                             i2u151_40 11C0  
                           i2u143_40 1138                             i2u135_40 10B0  
                           i2u151_41 11BC                             i2u143_41 1134  
                           i2u135_41 10AC                             i2u160_40 1256  
                           i2u152_40 11CE                             i2u144_40 1146  
                           i2u136_40 10BE                             i2u160_41 1252  
                           i2u152_41 11CA                             i2u144_41 1142  
                           i2u136_41 10BA                             i2u161_40 1264  
                           i2u153_40 11DC                             i2u145_40 1154  
                           i2u137_40 10CC                             i2u129_40 1050  
                           i2u161_41 1260                             i2u153_41 11D8  
                           i2u145_41 1150                             i2u137_41 10C8  
                           i2u129_41 104C                             i2u162_40 1274  
                           i2u154_40 11EC                             i2u146_40 1164  
                           i2u138_40 10DC                             i2u162_41 1270  
                           i2u154_41 11E8                             i2u146_41 1160  
                           i2u138_41 10D8                             i2u163_40 128C  
                           i2u155_40 1204                             i2u147_40 117C  
                           i2u139_40 10F4                             i2u163_41 1288  
                           i2u155_41 1200                             i2u147_41 1178  
                           i2u139_41 10F0                             i2u164_40 129A  
                           i2u156_40 1212                             i2u148_40 118A  
                           i2u164_41 1296                             i2u156_41 120E  
                           i2u148_41 1186                             i2u165_40 12A8  
                           i2u157_40 1220                             i2u149_40 1198  
                           i2u165_41 12A4                             i2u157_41 121C  
                           i2u149_41 1194                             i2u166_40 12B8  
                           i2u158_40 1230                             i2u166_41 12B4  
                           i2u158_41 122C                             i2u159_40 1248  
                           i2u159_41 1244          ADC_Select_result_format@adc 005B  
         __end_of_ADC_Configure_Port 139E                           _ADCON0bits 0FC2  
                         _ADCON1bits 0FC1                           _ADCON2bits 0FC0  
       ?_ADC_Get_Conversion_Blocking 0063                          _INTCON2bits 0FF1  
                        _INTCON3bits 0FF0                            copy_data0 164E  
          relay_initialization@F3055 0053                           _EECON1bits 0FA6  
                           __Hrparam 0000              _RB6_INTERRUPTHANDLERLOW 003E  
                           __Lrparam 0000                          _customChar2 1029  
                        _customChar3 1021                          _customChar4 1019  
                        _customChar5 1011                          _customChar6 1009  
                        _customChar7 1001                             __ptext10 16D0  
                           __ptext11 16EA                             __ptext12 1704  
                           __ptext13 16B4                             __ptext14 171E  
                           __ptext15 1722                             __ptext16 1726  
                 __end_of_customChar 1039                             isa$xinst 0000  
                           int$flags 0066                           _INTCONbits 0FF2  
         ??_ADC_Select_result_format 005D                             intlevel2 0000  
 ADC_Get_Conversion_Blocking@channel 0064             _RB5_INTERRUPTHANDLERHIGH 0044  
              ADC_Select_Channel@adc 005E         __end_of_ADC_Start_Conversion 1694  
              ADC_Select_Channel@ret 0061                       _port_registers 0011  
    ADC_Get_Conversion_Result@result 005C                    ?_InterruptMangaer 005A  
