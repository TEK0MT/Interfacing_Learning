

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 13 08:21:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Generated 17/10/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4620 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78                           	psect	idataCOMRAM
    79   0018B4                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _keypad_values
    83   0018B4  37                 	db	55
    84   0018B5  38                 	db	56
    85   0018B6  39                 	db	57
    86   0018B7  2F                 	db	47
    87   0018B8  34                 	db	52
    88   0018B9  35                 	db	53
    89   0018BA  36                 	db	54
    90   0018BB  2A                 	db	42
    91   0018BC  31                 	db	49
    92   0018BD  32                 	db	50
    93   0018BE  33                 	db	51
    94   0018BF  2D                 	db	45
    95   0018C0  23                 	db	35
    96   0018C1  30                 	db	48
    97   0018C2  3D                 	db	61
    98   0018C3  2B                 	db	43
    99                           
   100                           ;initializer for _port_registers
   101   0018C4  80                 	db	128
   102   0018C5  0F                 	db	15
   103   0018C6  81                 	db	129
   104   0018C7  0F                 	db	15
   105   0018C8  82                 	db	130
   106   0018C9  0F                 	db	15
   107   0018CA  83                 	db	131
   108   0018CB  0F                 	db	15
   109   0018CC  84                 	db	132
   110   0018CD  0F                 	db	15
   111                           
   112                           ;initializer for _lat_registers
   113   0018CE  89                 	db	137
   114   0018CF  0F                 	db	15
   115   0018D0  8A                 	db	138
   116   0018D1  0F                 	db	15
   117   0018D2  8B                 	db	139
   118   0018D3  0F                 	db	15
   119   0018D4  8C                 	db	140
   120   0018D5  0F                 	db	15
   121   0018D6  8D                 	db	141
   122   0018D7  0F                 	db	15
   123                           
   124                           ;initializer for _tris_registers
   125   0018D8  92                 	db	146
   126   0018D9  0F                 	db	15
   127   0018DA  93                 	db	147
   128   0018DB  0F                 	db	15
   129   0018DC  94                 	db	148
   130   0018DD  0F                 	db	15
   131   0018DE  95                 	db	149
   132   0018DF  0F                 	db	15
   133   0018E0  96                 	db	150
   134   0018E1  0F                 	db	15
   135                           
   136                           ;initializer for _RB7_F
   137   0018E2  01                 	db	1
   138                           
   139                           ;initializer for _RB6_F
   140   0018E3  01                 	db	1
   141                           
   142                           ;initializer for _RB5_F
   143   0018E4  01                 	db	1
   144                           
   145                           ;initializer for _RB4_F
   146   0018E5  01                 	db	1
   147                           
   148                           ;initializer for _led3
   149   0018E6  12                 	db	18
   150                           
   151                           ;initializer for _led2
   152   0018E7  0A                 	db	10
   153                           
   154                           ;initializer for _timer
   155   0018E8  F8                 	db	low _isr
   156   0018E9  19                 	db	high _isr
   157   0018EA  03                 	db	3
   158   0018EB  0BDC               	dw	3036
   159   0018ED  01                 	db	1
   160   0018EE  01                 	db	1
   161   0018EF  04                 	db	4
   162                           
   163                           ;initializer for _led1
   164   0018F0  02                 	db	2
   165                           
   166                           	psect	smallconst
   167   001000                     __psmallconst:
   168                           	callstack 0
   169   001000  00                 	db	0
   170   001001                     _customChar7:
   171                           	callstack 0
   172   001001  04                 	db	4
   173   001002  0A                 	db	10
   174   001003  04                 	db	4
   175   001004  04                 	db	4
   176   001005  04                 	db	4
   177   001006  0E                 	db	14
   178   001007  15                 	db	21
   179   001008  0E                 	db	14
   180   001009                     __end_of_customChar7:
   181                           	callstack 0
   182   001009                     _customChar6:
   183                           	callstack 0
   184   001009  0E                 	db	14
   185   00100A  0E                 	db	14
   186   00100B  1F                 	db	31
   187   00100C  1F                 	db	31
   188   00100D  1F                 	db	31
   189   00100E  1F                 	db	31
   190   00100F  1F                 	db	31
   191   001010  00                 	db	0
   192   001011                     __end_of_customChar6:
   193                           	callstack 0
   194   001011                     _customChar5:
   195                           	callstack 0
   196   001011  0E                 	db	14
   197   001012  0A                 	db	10
   198   001013  1F                 	db	31
   199   001014  1F                 	db	31
   200   001015  1F                 	db	31
   201   001016  1F                 	db	31
   202   001017  1F                 	db	31
   203   001018  00                 	db	0
   204   001019                     __end_of_customChar5:
   205                           	callstack 0
   206   001019                     _customChar4:
   207                           	callstack 0
   208   001019  0E                 	db	14
   209   00101A  0A                 	db	10
   210   00101B  11                 	db	17
   211   00101C  1F                 	db	31
   212   00101D  1F                 	db	31
   213   00101E  1F                 	db	31
   214   00101F  1F                 	db	31
   215   001020  00                 	db	0
   216   001021                     __end_of_customChar4:
   217                           	callstack 0
   218   001021                     _customChar3:
   219                           	callstack 0
   220   001021  0E                 	db	14
   221   001022  0A                 	db	10
   222   001023  11                 	db	17
   223   001024  11                 	db	17
   224   001025  1F                 	db	31
   225   001026  1F                 	db	31
   226   001027  1F                 	db	31
   227   001028  00                 	db	0
   228   001029                     __end_of_customChar3:
   229                           	callstack 0
   230   001029                     _customChar2:
   231                           	callstack 0
   232   001029  0E                 	db	14
   233   00102A  0A                 	db	10
   234   00102B  11                 	db	17
   235   00102C  11                 	db	17
   236   00102D  11                 	db	17
   237   00102E  1F                 	db	31
   238   00102F  1F                 	db	31
   239   001030  00                 	db	0
   240   001031                     __end_of_customChar2:
   241                           	callstack 0
   242   001031                     _customChar:
   243                           	callstack 0
   244   001031  0E                 	db	14
   245   001032  0A                 	db	10
   246   001033  11                 	db	17
   247   001034  11                 	db	17
   248   001035  11                 	db	17
   249   001036  11                 	db	17
   250   001037  1F                 	db	31
   251   001038  00                 	db	0
   252   001039                     __end_of_customChar:
   253                           	callstack 0
   254   000000                     _TMR0L	set	4054
   255   000000                     _TMR0H	set	4055
   256   000000                     _INTCON2bits	set	4081
   257   000000                     _EECON2	set	4007
   258   000000                     _TRISD	set	3989
   259   000000                     _TRISC	set	3988
   260   000000                     _TRISB	set	3987
   261   000000                     _TRISE	set	3990
   262   001039                     STR_2:
   263   001039  25                 	db	37
   264   00103A  69                 	db	105	;'i'
   265   00103B  00                 	db	0
   266   00103C  25                 	db	37
   267   00103D  75                 	db	117	;'u'
   268   00103E  00                 	db	0
   269   00103F  00                 	db	0	; dummy byte at the end
   270   000000                     
   271                           	psect	nvCOMRAM
   272   000070                     __pnvCOMRAM:
   273                           	callstack 0
   274   000070                     _ret:
   275                           	callstack 0
   276   000070                     	ds	1
   277   000000                     _PORTBbits	set	3969
   278   000000                     _PIE1bits	set	3997
   279   000000                     _ADCON0bits	set	4034
   280   000000                     _PORTE	set	3972
   281   000000                     _PORTD	set	3971
   282   000000                     _PORTC	set	3970
   283   000000                     _PORTB	set	3969
   284   000000                     _PORTA	set	3968
   285   000000                     _LATA	set	3977
   286   000000                     _TRISA	set	3986
   287   000000                     _T0CONbits	set	4053
   288   000000                     _INTCON3bits	set	4080
   289   000000                     _ADRESH	set	4036
   290   000000                     _ADRESL	set	4035
   291   000000                     _INTCONbits	set	4082
   292   000000                     _EECON1bits	set	4006
   293   000000                     _EEDATA	set	4008
   294   000000                     _EEADR	set	4009
   295   000000                     _EEADRH	set	4010
   296   000000                     _ADCON2bits	set	4032
   297   000000                     _ADCON1bits	set	4033
   298   000000                     _LATE	set	3981
   299   000000                     _LATD	set	3980
   300   000000                     _LATC	set	3979
   301   000000                     _LATB	set	3978
   302                           
   303                           ; #config settings
   304                           
   305                           	psect	cinit
   306   0018F2                     __pcinit:
   307                           	callstack 0
   308   0018F2                     start_initialization:
   309                           	callstack 0
   310   0018F2                     __initialization:
   311                           	callstack 0
   312                           
   313                           ; Initialize objects allocated to COMRAM (61 bytes)
   314                           ; load TBLPTR registers with __pidataCOMRAM
   315   0018F2  0EB4               	movlw	low __pidataCOMRAM
   316   0018F4  6EF6               	movwf	tblptrl,c
   317   0018F6  0E18               	movlw	high __pidataCOMRAM
   318   0018F8  6EF7               	movwf	tblptrh,c
   319   0018FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   320   0018FC  6EF8               	movwf	tblptru,c
   321   0018FE  EE00  F001         	lfsr	0,__pdataCOMRAM
   322   001902  EE10 F03D          	lfsr	1,61
   323   001906                     copy_data0:
   324   001906  0009               	tblrd		*+
   325   001908  CFF5 FFEE          	movff	tablat,postinc0
   326   00190C  50E5               	movf	postdec1,w,c
   327   00190E  50E1               	movf	fsr1l,w,c
   328   001910  E1FA               	bnz	copy_data0
   329                           
   330                           ; Clear objects allocated to COMRAM (35 bytes)
   331   001912  EE00  F03E         	lfsr	0,__pbssCOMRAM
   332   001916  0E23               	movlw	35
   333   001918                     clear_0:
   334   001918  6AEE               	clrf	postinc0,c
   335   00191A  06E8               	decf	wreg,f,c
   336   00191C  E1FD               	bnz	clear_0
   337   00191E                     end_of_initialization:
   338                           	callstack 0
   339   00191E                     __end_of__initialization:
   340                           	callstack 0
   341   00191E  9071               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342   001920  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343   001922  0100               	movlb	0
   344   001924  EFAF  F00C         	goto	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMRAM
   347   00003E                     __pbssCOMRAM:
   348                           	callstack 0
   349   00003E                     _preload:
   350                           	callstack 0
   351   00003E                     	ds	2
   352   000040                     _ISR_TIMER0:
   353                           	callstack 0
   354   000040                     	ds	2
   355   000042                     _RB7_INTERRUPTHANDLERLOW:
   356                           	callstack 0
   357   000042                     	ds	2
   358   000044                     _RB7_INTERRUPTHANDLERHIGH:
   359                           	callstack 0
   360   000044                     	ds	2
   361   000046                     _RB6_INTERRUPTHANDLERLOW:
   362                           	callstack 0
   363   000046                     	ds	2
   364   000048                     _RB6_INTERRUPTHANDLERHIGH:
   365                           	callstack 0
   366   000048                     	ds	2
   367   00004A                     _RB5_INTERRUPTHANDLERLOW:
   368                           	callstack 0
   369   00004A                     	ds	2
   370   00004C                     _RB5_INTERRUPTHANDLERHIGH:
   371                           	callstack 0
   372   00004C                     	ds	2
   373   00004E                     _RB4_INTERRUPTHANDLERLOW:
   374                           	callstack 0
   375   00004E                     	ds	2
   376   000050                     _RB4_INTERRUPTHANDLERHIGH:
   377                           	callstack 0
   378   000050                     	ds	2
   379   000052                     _INT2_INTERRUPTHANDLER:
   380                           	callstack 0
   381   000052                     	ds	2
   382   000054                     _INT1_INTERRUPTHANDLER:
   383                           	callstack 0
   384   000054                     	ds	2
   385   000056                     _INT0_INTERRUPTHANDLER:
   386                           	callstack 0
   387   000056                     	ds	2
   388   000058                     relay_turn_off@F3065:
   389                           	callstack 0
   390   000058                     	ds	1
   391   000059                     relay_turn_on@F3060:
   392                           	callstack 0
   393   000059                     	ds	1
   394   00005A                     relay_initialization@F3055:
   395                           	callstack 0
   396   00005A                     	ds	1
   397   00005B                     led_turn_toggle@F3077:
   398                           	callstack 0
   399   00005B                     	ds	1
   400   00005C                     led_turn_off@F3072:
   401                           	callstack 0
   402   00005C                     	ds	1
   403   00005D                     led_turn_on@F3067:
   404                           	callstack 0
   405   00005D                     	ds	1
   406   00005E                     led_initialize@F3062:
   407                           	callstack 0
   408   00005E                     	ds	1
   409   00005F                     _value:
   410                           	callstack 0
   411   00005F                     	ds	2
   412                           
   413                           	psect	dataCOMRAM
   414   000001                     __pdataCOMRAM:
   415                           	callstack 0
   416   000001                     _keypad_values:
   417                           	callstack 0
   418   000001                     	ds	16
   419   000011                     _port_registers:
   420                           	callstack 0
   421   000011                     	ds	10
   422   00001B                     _lat_registers:
   423                           	callstack 0
   424   00001B                     	ds	10
   425   000025                     _tris_registers:
   426                           	callstack 0
   427   000025                     	ds	10
   428   00002F                     _RB7_F:
   429                           	callstack 0
   430   00002F                     	ds	1
   431   000030                     _RB6_F:
   432                           	callstack 0
   433   000030                     	ds	1
   434   000031                     _RB5_F:
   435                           	callstack 0
   436   000031                     	ds	1
   437   000032                     _RB4_F:
   438                           	callstack 0
   439   000032                     	ds	1
   440   000033                     _led3:
   441                           	callstack 0
   442   000033                     	ds	1
   443   000034                     _led2:
   444                           	callstack 0
   445   000034                     	ds	1
   446   000035                     _timer:
   447                           	callstack 0
   448   000035                     	ds	8
   449   00003D                     _led1:
   450                           	callstack 0
   451   00003D                     	ds	1
   452                           
   453                           	psect	cstackBANK0
   454   000080                     __pcstackBANK0:
   455                           	callstack 0
   456   000080                     ??_gpio_pin_direction_intialize:
   457   000080                     ??_TIMER0_PRESCALER_CFG:
   458   000080                     gpio_pin_write_logic@_pin_config:
   459                           	callstack 0
   460   000080                     TIMER0_Read_Value@timer:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x0
   464   000080                     	ds	1
   465   000081                     gpio_pin_write_logic@logic:
   466                           	callstack 0
   467   000081                     TIMER0_INIT@timer:
   468                           	callstack 0
   469   000081                     TIMER0_Read_Value@var:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x1
   473   000081                     	ds	1
   474   000082                     ??_gpio_pin_write_logic:
   475   000082                     ??_TIMER0_INIT:
   476   000082                     ??_TIMER0_Read_Value:
   477                           
   478                           ; 1 bytes @ 0x2
   479   000082                     	ds	2
   480   000084                     TIMER0_Read_Value@low_reg:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x4
   484   000084                     	ds	1
   485   000085                     gpio_pin_direction_intialize@ret:
   486                           	callstack 0
   487   000085                     TIMER0_Read_Value@high_reg:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x5
   491   000085                     	ds	2
   492   000087                     gpio_pin_initialize@_pin_config:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x7
   496   000087                     	ds	1
   497   000088                     gpio_pin_initialize@ret:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x8
   501   000088                     	ds	1
   502   000089                     led_initialize@led:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x9
   506   000089                     	ds	1
   507   00008A                     ??_led_initialize:
   508                           
   509                           ; 1 bytes @ 0xA
   510   00008A                     	ds	1
   511   00008B                     led_initialize@pin_obj:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0xB
   515   00008B                     	ds	1
   516                           
   517                           	psect	cstackCOMRAM
   518   000061                     __pcstackCOMRAM:
   519                           	callstack 0
   520   000061                     gpio_pin_toggle_logic@_pin_config:
   521                           	callstack 0
   522   000061                     RB4_ISR@n:
   523                           	callstack 0
   524   000061                     RB5_ISR@n:
   525                           	callstack 0
   526   000061                     RB6_ISR@n:
   527                           	callstack 0
   528   000061                     RB7_ISR@n:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x0
   532   000061                     	ds	1
   533   000062                     ??_gpio_pin_toggle_logic:
   534                           
   535                           ; 1 bytes @ 0x1
   536   000062                     	ds	4
   537   000066                     led_turn_toggle@led:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x5
   541   000066                     	ds	1
   542   000067                     ??_led_turn_toggle:
   543                           
   544                           ; 1 bytes @ 0x6
   545   000067                     	ds	1
   546   000068                     led_turn_toggle@pin_obj:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x7
   550   000068                     	ds	1
   551   000069                     ??_InterruptMangaer:
   552   000069                     
   553                           ; 1 bytes @ 0x8
   554   000069                     	ds	6
   555   00006F                     gpio_pin_direction_intialize@_pin_config:
   556                           	callstack 0
   557   00006F                     gpio_pin_write_logic@ret:
   558                           	callstack 0
   559   00006F                     TIMER0_Size_SELECT@timer:
   560                           	callstack 0
   561   00006F                     TIMER0_MODE_SELECT@timer:
   562                           	callstack 0
   563   00006F                     TIMER0_PRESCALER_CFG@timer:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0xE
   567   00006F                     	ds	1
   568   000070                     
   569                           ; 1 bytes @ 0xF
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 16 in file "application.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  2  886[None  ] int 
   582 ;; Registers used:
   583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels required when called: 10
   595 ;; This function calls:
   596 ;;		_TIMER0_INIT
   597 ;;		_TIMER0_Read_Value
   598 ;;		_application_initialize
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605   00195E                     __ptext0:
   606                           	callstack 0
   607   00195E                     _main:
   608                           	callstack 21
   609   00195E                     
   610                           ;application.c: 17:     application_initialize();
   611   00195E  EC01  F00D         	call	_application_initialize	;wreg free
   612   001962                     
   613                           ;application.c: 18:     TIMER0_INIT(&timer);
   614   001962  0E35               	movlw	low _timer
   615   001964  0100               	movlb	0	; () banked
   616   001966  6F81               	movwf	TIMER0_INIT@timer& (0+255),b
   617   001968  EC92  F00A         	call	_TIMER0_INIT	;wreg free
   618   00196C                     l4996:
   619                           
   620                           ;application.c: 22:         TIMER0_Read_Value(&timer,&value);
   621   00196C  0E35               	movlw	low _timer
   622   00196E  0100               	movlb	0	; () banked
   623   001970  6F80               	movwf	TIMER0_Read_Value@timer& (0+255),b
   624   001972  0E5F               	movlw	low _value
   625   001974  6F81               	movwf	TIMER0_Read_Value@var& (0+255),b
   626   001976  EC13  F00C         	call	_TIMER0_Read_Value	;wreg free
   627   00197A  EFB6  F00C         	goto	l4996
   628   00197E  EF07  F000         	goto	start
   629   001982                     __end_of_main:
   630                           	callstack 0
   631                           
   632 ;; *************** function _application_initialize *****************
   633 ;; Defined at:
   634 ;;		line 26 in file "application.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 9
   655 ;; This function calls:
   656 ;;		_Ecu_initialize
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text1
   663   001A02                     __ptext1:
   664                           	callstack 0
   665   001A02                     _application_initialize:
   666                           	callstack 21
   667   001A02                     
   668                           ;application.c: 27:     ret = Ecu_initialize();
   669   001A02  ECF6  F00C         	call	_Ecu_initialize	;wreg free
   670   001A06  6E70               	movwf	_ret^0,c
   671   001A08  0012               	return		;funcret
   672   001A0A                     __end_of_application_initialize:
   673                           	callstack 0
   674                           
   675 ;; *************** function _Ecu_initialize *****************
   676 ;; Defined at:
   677 ;;		line 42 in file "ECU_Layer/ECU_LAYER.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      unsigned char 
   684 ;; Registers used:
   685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 8
   698 ;; This function calls:
   699 ;;		_led_initialize
   700 ;; This function is called by:
   701 ;;		_application_initialize
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text2
   706   0019EC                     __ptext2:
   707                           	callstack 0
   708   0019EC                     _Ecu_initialize:
   709                           	callstack 21
   710   0019EC                     
   711                           ;ECU_Layer/ECU_LAYER.c: 44:     led_initialize(&led1);
   712   0019EC  0E3D               	movlw	low _led1
   713   0019EE  0100               	movlb	0	; () banked
   714   0019F0  6F89               	movwf	led_initialize@led& (0+255),b
   715   0019F2  EC19  F00B         	call	_led_initialize	;wreg free
   716   0019F6  0012               	return		;funcret
   717   0019F8                     __end_of_Ecu_initialize:
   718                           	callstack 0
   719                           
   720 ;; *************** function _led_initialize *****************
   721 ;; Defined at:
   722 ;;		line 13 in file "ECU_Layer/LED/ecu_led.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  led             1    9[BANK0 ] PTR const struct .
   725 ;;		 -> led1(1), 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  pin_obj         1   11[BANK0 ] struct .
   728 ;;  ret             1    0        unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      unsigned char 
   731 ;; Registers used:
   732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   738 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;Total ram usage:        3 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; Hardware stack levels required when called: 7
   745 ;; This function calls:
   746 ;;		_gpio_pin_initialize
   747 ;; This function is called by:
   748 ;;		_Ecu_initialize
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text3
   753   001632                     __ptext3:
   754                           	callstack 0
   755   001632                     _led_initialize:
   756                           	callstack 21
   757   001632                     
   758                           ;ECU_Layer/LED/ecu_led.c: 15:     if(led == ((void*)0)){
   759   001632  0100               	movlb	0	; () banked
   760   001634  5189               	movf	led_initialize@led& (0+255),w,b
   761   001636  A4D8               	btfss	status,2,c
   762   001638  EF20  F00B         	goto	u3281
   763   00163C  EF22  F00B         	goto	u3280
   764   001640                     u3281:
   765   001640  EF24  F00B         	goto	l245
   766   001644                     u3280:
   767   001644                     
   768                           ; BSR set to: 0
   769                           ;ECU_Layer/LED/ecu_led.c: 17:     }
   770   001644  EF4F  F00B         	goto	l249
   771   001648                     l245:
   772                           
   773                           ; BSR set to: 0
   774                           ;ECU_Layer/LED/ecu_led.c: 19:         pin_config_t pin_obj = {.port = led->port_name, .p
      +                          in = led->pin_name,
   775   001648  C05E  F08B         	movff	led_initialize@F3062,led_initialize@pin_obj
   776   00164C                     
   777                           ; BSR set to: 0
   778   00164C  5189               	movf	led_initialize@led& (0+255),w,b
   779   00164E  6ED9               	movwf	fsr2l,c
   780   001650  6ADA               	clrf	fsr2h,c
   781   001652  50DF               	movf	223,w,c
   782   001654  0B07               	andlw	7
   783   001656  6F8A               	movwf	??_led_initialize& (0+255),b
   784   001658  518B               	movf	led_initialize@pin_obj& (0+255),w,b
   785   00165A  198A               	xorwf	??_led_initialize& (0+255),w,b
   786   00165C  0BF8               	andlw	-8
   787   00165E  198A               	xorwf	??_led_initialize& (0+255),w,b
   788   001660  6F8B               	movwf	led_initialize@pin_obj& (0+255),b
   789   001662  5189               	movf	led_initialize@led& (0+255),w,b
   790   001664  6ED9               	movwf	fsr2l,c
   791   001666  6ADA               	clrf	fsr2h,c
   792   001668  30DF               	rrcf	223,w,c
   793   00166A  32E8               	rrcf	wreg,f,c
   794   00166C  32E8               	rrcf	wreg,f,c
   795   00166E  0B07               	andlw	7
   796   001670  6F8A               	movwf	??_led_initialize& (0+255),b
   797   001672  478A               	rlncf	??_led_initialize& (0+255),f,b
   798   001674  478A               	rlncf	??_led_initialize& (0+255),f,b
   799   001676  478A               	rlncf	??_led_initialize& (0+255),f,b
   800   001678  518B               	movf	led_initialize@pin_obj& (0+255),w,b
   801   00167A  198A               	xorwf	??_led_initialize& (0+255),w,b
   802   00167C  0BC7               	andlw	-57
   803   00167E  198A               	xorwf	??_led_initialize& (0+255),w,b
   804   001680  6F8B               	movwf	led_initialize@pin_obj& (0+255),b
   805   001682                     
   806                           ; BSR set to: 0
   807   001682  9D8B               	bcf	led_initialize@pin_obj& (0+255),6,b
   808   001684                     
   809                           ; BSR set to: 0
   810   001684  5189               	movf	led_initialize@led& (0+255),w,b
   811   001686  6ED9               	movwf	fsr2l,c
   812   001688  6ADA               	clrf	fsr2h,c
   813   00168A  ACDF               	btfss	indf2,6,c
   814   00168C  D002               	bra	u3295
   815   00168E  8F8B               	bsf	led_initialize@pin_obj& (0+255),7,b
   816   001690  D002               	bra	u3297
   817   001692                     u3295:
   818   001692  0100               	movlb	0	; () banked
   819   001694  9F8B               	bcf	led_initialize@pin_obj& (0+255),7,b
   820   001696                     u3297:
   821   001696                     
   822                           ; BSR set to: 0
   823                           ;ECU_Layer/LED/ecu_led.c: 21:         gpio_pin_initialize(&pin_obj);
   824   001696  0E8B               	movlw	low led_initialize@pin_obj
   825   001698  6F87               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
   826   00169A  EC38  F00C         	call	_gpio_pin_initialize	;wreg free
   827   00169E                     l249:
   828   00169E  0012               	return		;funcret
   829   0016A0                     __end_of_led_initialize:
   830                           	callstack 0
   831                           
   832 ;; *************** function _gpio_pin_initialize *****************
   833 ;; Defined at:
   834 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  _pin_config     1    7[BANK0 ] PTR const struct .
   837 ;;		 -> relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  ret             1    8[BANK0 ] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      unsigned char 
   842 ;; Registers used:
   843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   849 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;Total ram usage:        2 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 6
   856 ;; This function calls:
   857 ;;		_gpio_pin_direction_intialize
   858 ;;		_gpio_pin_write_logic
   859 ;; This function is called by:
   860 ;;		_led_initialize
   861 ;;		_sev_seg_initialize
   862 ;;		_keypad_initialize
   863 ;;		_lcd_8bit_initialize
   864 ;;		_lcd_4bit_initialize
   865 ;;		_motor_initialize
   866 ;;		_relay_initialization
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text4
   871   001870                     __ptext4:
   872                           	callstack 0
   873   001870                     _gpio_pin_initialize:
   874                           	callstack 21
   875   001870                     
   876                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:     std_ReturnType ret = (std_ReturnType)0x01;
   877   001870  0E01               	movlw	1
   878   001872  0100               	movlb	0	; () banked
   879   001874  6F88               	movwf	gpio_pin_initialize@ret& (0+255),b
   880                           
   881                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config ){
   882   001876  5187               	movf	gpio_pin_initialize@_pin_config& (0+255),w,b
   883   001878  A4D8               	btfss	status,2,c
   884   00187A  EF41  F00C         	goto	u3271
   885   00187E  EF43  F00C         	goto	u3270
   886   001882                     u3271:
   887   001882  EF47  F00C         	goto	l4244
   888   001886                     u3270:
   889   001886                     
   890                           ; BSR set to: 0
   891                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:         ret = (std_ReturnType)0x00;
   892   001886  0E00               	movlw	0
   893   001888  6F88               	movwf	gpio_pin_initialize@ret& (0+255),b
   894                           
   895                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:     }
   896   00188A  EF57  F00C         	goto	l4246
   897   00188E                     l4244:
   898                           
   899                           ; BSR set to: 0
   900                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:         gpio_pin_direction_intialize(_pin_config);
   901   00188E  C087  F06F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   902   001892  EC8B  F009         	call	_gpio_pin_direction_intialize	;wreg free
   903                           
   904                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:         gpio_pin_write_logic(_pin_config,_pin_config->
      +                          logic);
   905   001896  C087  F080         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
   906   00189A  0100               	movlb	0	; () banked
   907   00189C  5187               	movf	gpio_pin_initialize@_pin_config& (0+255),w,b
   908   00189E  6ED9               	movwf	fsr2l,c
   909   0018A0  6ADA               	clrf	fsr2h,c
   910   0018A2  0E00               	movlw	0
   911   0018A4  BEDF               	btfsc	indf2,7,c
   912   0018A6  0E01               	movlw	1
   913   0018A8  6F81               	movwf	gpio_pin_write_logic@logic& (0+255),b
   914   0018AA  EC17  F00A         	call	_gpio_pin_write_logic	;wreg free
   915   0018AE                     l4246:
   916                           
   917                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     return ret;
   918   0018AE  0100               	movlb	0	; () banked
   919   0018B0  5188               	movf	gpio_pin_initialize@ret& (0+255),w,b
   920   0018B2                     
   921                           ; BSR set to: 0
   922   0018B2  0012               	return		;funcret
   923   0018B4                     __end_of_gpio_pin_initialize:
   924                           	callstack 0
   925                           
   926 ;; *************** function _gpio_pin_write_logic *****************
   927 ;; Defined at:
   928 ;;		line 68 in file "MCAL_Layer/GPIO/hal_gpio.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  _pin_config     1    0[BANK0 ] PTR const struct .
   931 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialization@pin_obj(1), led_turn_off@pin_obj(1), 
   932 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   933 ;;  logic           1    1[BANK0 ] enum E2981
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  ret             1   14[COMRAM] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      unsigned char 
   938 ;; Registers used:
   939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;Total ram usage:        8 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 5
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_gpio_pin_initialize
   956 ;;		_sev_seg_write_number
   957 ;;		_keypad_read_value
   958 ;;		_lcd_8bit_send_command
   959 ;;		_lcd_8bit_send_char
   960 ;;		_lcd_4bit_send_command
   961 ;;		_lcd_4bit_send_char
   962 ;;		_lcd_send_8bits
   963 ;;		_lcd_send_4bits
   964 ;;		_enable_signal_8bits
   965 ;;		_enable_signal_4bits
   966 ;;		_led_turn_on
   967 ;;		_led_turn_off
   968 ;;		_motor_turn_right
   969 ;;		_motor_turn_left
   970 ;;		_motor_stop
   971 ;;		_relay_turn_on
   972 ;;		_relay_turn_off
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text5
   977   00142E                     __ptext5:
   978                           	callstack 0
   979   00142E                     _gpio_pin_write_logic:
   980                           	callstack 21
   981   00142E                     
   982                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:     std_ReturnType ret = (std_ReturnType)0x01;
   983   00142E  0E01               	movlw	1
   984   001430  6E6F               	movwf	gpio_pin_write_logic@ret^0,c
   985                           
   986                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:     if(((void*)0) == _pin_config){
   987   001432  0100               	movlb	0	; () banked
   988   001434  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
   989   001436  A4D8               	btfss	status,2,c
   990   001438  EF20  F00A         	goto	u3191
   991   00143C  EF22  F00A         	goto	u3190
   992   001440                     u3191:
   993   001440  EF7B  F00A         	goto	l4212
   994   001444                     u3190:
   995   001444                     
   996                           ; BSR set to: 0
   997                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:         ret = (std_ReturnType)0x00;
   998   001444  0E00               	movlw	0
   999   001446  6E6F               	movwf	gpio_pin_write_logic@ret^0,c
  1000                           
  1001                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     }
  1002   001448  EF90  F00A         	goto	l4214
  1003   00144C                     l4206:
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
  1007   00144C  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  1008   00144E  6ED9               	movwf	fsr2l,c
  1009   001450  6ADA               	clrf	fsr2h,c
  1010   001452  30DF               	rrcf	223,w,c
  1011   001454  32E8               	rrcf	wreg,f,c
  1012   001456  32E8               	rrcf	wreg,f,c
  1013   001458  0B07               	andlw	7
  1014   00145A  6F82               	movwf	??_gpio_pin_write_logic& (0+255),b
  1015   00145C  0E01               	movlw	1
  1016   00145E  6F83               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  1017   001460  2B82               	incf	??_gpio_pin_write_logic& (0+255),f,b
  1018   001462  EF35  F00A         	goto	u3204
  1019   001466                     u3205:
  1020   001466  90D8               	bcf	status,0,c
  1021   001468  3783               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  1022   00146A                     u3204:
  1023   00146A  2F82               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  1024   00146C  EF33  F00A         	goto	u3205
  1025   001470  0100               	movlb	0	; () banked
  1026   001472  5183               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  1027   001474  0AFF               	xorlw	255
  1028   001476  6F84               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  1029   001478  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  1030   00147A  6ED9               	movwf	fsr2l,c
  1031   00147C  6ADA               	clrf	fsr2h,c
  1032   00147E  50DF               	movf	223,w,c
  1033   001480  0B07               	andlw	7
  1034   001482  0D02               	mullw	2
  1035   001484  50F3               	movf	243,w,c
  1036   001486  0F1B               	addlw	low _lat_registers
  1037   001488  6ED9               	movwf	fsr2l,c
  1038   00148A  6ADA               	clrf	fsr2h,c
  1039   00148C  CFDE F085          	movff	postinc2,??_gpio_pin_write_logic+3
  1040   001490  CFDD F086          	movff	postdec2,??_gpio_pin_write_logic+4
  1041   001494  C085  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1042   001498  C086  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1043   00149C  5184               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  1044   00149E  16DF               	andwf	indf2,f,c
  1045                           
  1046                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 break;
  1047   0014A0  EF90  F00A         	goto	l4214
  1048   0014A4                     l4208:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  1052   0014A4  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  1053   0014A6  6ED9               	movwf	fsr2l,c
  1054   0014A8  6ADA               	clrf	fsr2h,c
  1055   0014AA  30DF               	rrcf	223,w,c
  1056   0014AC  32E8               	rrcf	wreg,f,c
  1057   0014AE  32E8               	rrcf	wreg,f,c
  1058   0014B0  0B07               	andlw	7
  1059   0014B2  6F82               	movwf	??_gpio_pin_write_logic& (0+255),b
  1060   0014B4  0E01               	movlw	1
  1061   0014B6  6F83               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  1062   0014B8  2B82               	incf	??_gpio_pin_write_logic& (0+255),f,b
  1063   0014BA  EF61  F00A         	goto	u3214
  1064   0014BE                     u3215:
  1065   0014BE  90D8               	bcf	status,0,c
  1066   0014C0  3783               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  1067   0014C2                     u3214:
  1068   0014C2  2F82               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  1069   0014C4  EF5F  F00A         	goto	u3215
  1070   0014C8  0100               	movlb	0	; () banked
  1071   0014CA  5180               	movf	gpio_pin_write_logic@_pin_config& (0+255),w,b
  1072   0014CC  6ED9               	movwf	fsr2l,c
  1073   0014CE  6ADA               	clrf	fsr2h,c
  1074   0014D0  50DF               	movf	223,w,c
  1075   0014D2  0B07               	andlw	7
  1076   0014D4  0D02               	mullw	2
  1077   0014D6  50F3               	movf	243,w,c
  1078   0014D8  0F1B               	addlw	low _lat_registers
  1079   0014DA  6ED9               	movwf	fsr2l,c
  1080   0014DC  6ADA               	clrf	fsr2h,c
  1081   0014DE  CFDE F084          	movff	postinc2,??_gpio_pin_write_logic+2
  1082   0014E2  CFDD F085          	movff	postdec2,??_gpio_pin_write_logic+3
  1083   0014E6  C084  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1084   0014EA  C085  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1085   0014EE  5183               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  1086   0014F0  12DF               	iorwf	indf2,f,c
  1087                           
  1088                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 break;
  1089   0014F2  EF90  F00A         	goto	l4214
  1090   0014F6                     l4212:
  1091                           
  1092                           ; BSR set to: 0
  1093   0014F6  5181               	movf	gpio_pin_write_logic@logic& (0+255),w,b
  1094   0014F8  6F82               	movwf	??_gpio_pin_write_logic& (0+255),b
  1095   0014FA  6B83               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
  1096                           
  1097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1098                           ; Switch size 1, requested type "simple"
  1099                           ; Number of cases is 1, Range of values is 0 to 0
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            4     3 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104   0014FC  5183               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  1105   0014FE  0A00               	xorlw	0	; case 0
  1106   001500  B4D8               	btfsc	status,2,c
  1107   001502  EF85  F00A         	goto	l5018
  1108   001506  EF90  F00A         	goto	l4214
  1109   00150A                     l5018:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ; Switch size 1, requested type "simple"
  1113                           ; Number of cases is 2, Range of values is 0 to 1
  1114                           ; switch strategies available:
  1115                           ; Name         Instructions Cycles
  1116                           ; simple_byte            7     4 (average)
  1117                           ;	Chosen strategy is simple_byte
  1118   00150A  5182               	movf	??_gpio_pin_write_logic& (0+255),w,b
  1119   00150C  0A00               	xorlw	0	; case 0
  1120   00150E  B4D8               	btfsc	status,2,c
  1121   001510  EF26  F00A         	goto	l4206
  1122   001514  0A01               	xorlw	1	; case 1
  1123   001516  B4D8               	btfsc	status,2,c
  1124   001518  EF52  F00A         	goto	l4208
  1125   00151C  EF90  F00A         	goto	l4214
  1126   001520                     l4214:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     return ret;
  1130   001520  506F               	movf	gpio_pin_write_logic@ret^0,w,c
  1131   001522                     
  1132                           ; BSR set to: 0
  1133   001522  0012               	return		;funcret
  1134   001524                     __end_of_gpio_pin_write_logic:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _gpio_pin_direction_intialize *****************
  1138 ;; Defined at:
  1139 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  _pin_config     1   14[COMRAM] PTR const struct .
  1142 ;;		 -> relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  ret             1    5[BANK0 ] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      unsigned char 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1154 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;Total ram usage:        7 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; Hardware stack levels required when called: 5
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_gpio_pin_initialize
  1165 ;;		_button_initialize
  1166 ;;		_Interrupt_RBx_Init
  1167 ;;		_Interrupt_INTx_Pin_Init
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text6
  1172   001316                     __ptext6:
  1173                           	callstack 0
  1174   001316                     _gpio_pin_direction_intialize:
  1175                           	callstack 21
  1176   001316                     
  1177                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     std_ReturnType ret = (std_ReturnType)0x01;
  1178   001316  0E01               	movlw	1
  1179   001318  0100               	movlb	0	; () banked
  1180   00131A  6F85               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  1181                           
  1182                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 - 1){
  1183   00131C  506F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1184   00131E  B4D8               	btfsc	status,2,c
  1185   001320  EF94  F009         	goto	u3221
  1186   001324  EF96  F009         	goto	u3220
  1187   001328                     u3221:
  1188   001328  EFA6  F009         	goto	l4226
  1189   00132C                     u3220:
  1190   00132C                     
  1191                           ; BSR set to: 0
  1192   00132C  506F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1193   00132E  6ED9               	movwf	fsr2l,c
  1194   001330  6ADA               	clrf	fsr2h,c
  1195   001332  30DF               	rrcf	223,w,c
  1196   001334  32E8               	rrcf	wreg,f,c
  1197   001336  32E8               	rrcf	wreg,f,c
  1198   001338  0B07               	andlw	7
  1199   00133A  6F80               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  1200   00133C  0E07               	movlw	7
  1201   00133E  6580               	cpfsgt	??_gpio_pin_direction_intialize& (0+255),b
  1202   001340  EFA4  F009         	goto	u3231
  1203   001344  EFA6  F009         	goto	u3230
  1204   001348                     u3231:
  1205   001348  EFFF  F009         	goto	l4234
  1206   00134C                     u3230:
  1207   00134C                     l4226:
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:         ret = (std_ReturnType)0x00;
  1211   00134C  0E00               	movlw	0
  1212   00134E  6F85               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  1213                           
  1214                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     }
  1215   001350  EF15  F00A         	goto	l4236
  1216   001354                     l4228:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1<<_pin_config->pin));
  1220   001354  506F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1221   001356  6ED9               	movwf	fsr2l,c
  1222   001358  6ADA               	clrf	fsr2h,c
  1223   00135A  30DF               	rrcf	223,w,c
  1224   00135C  32E8               	rrcf	wreg,f,c
  1225   00135E  32E8               	rrcf	wreg,f,c
  1226   001360  0B07               	andlw	7
  1227   001362  6F80               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  1228   001364  0E01               	movlw	1
  1229   001366  6F81               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  1230   001368  2B80               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  1231   00136A  EFB9  F009         	goto	u3244
  1232   00136E                     u3245:
  1233   00136E  90D8               	bcf	status,0,c
  1234   001370  3781               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  1235   001372                     u3244:
  1236   001372  2F80               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  1237   001374  EFB7  F009         	goto	u3245
  1238   001378  0100               	movlb	0	; () banked
  1239   00137A  5181               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  1240   00137C  0AFF               	xorlw	255
  1241   00137E  6F82               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),b
  1242   001380  506F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1243   001382  6ED9               	movwf	fsr2l,c
  1244   001384  6ADA               	clrf	fsr2h,c
  1245   001386  50DF               	movf	223,w,c
  1246   001388  0B07               	andlw	7
  1247   00138A  0D02               	mullw	2
  1248   00138C  50F3               	movf	243,w,c
  1249   00138E  0F25               	addlw	low _tris_registers
  1250   001390  6ED9               	movwf	fsr2l,c
  1251   001392  6ADA               	clrf	fsr2h,c
  1252   001394  CFDE F083          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1253   001398  CFDD F084          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1254   00139C  C083  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1255   0013A0  C084  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1256   0013A4  5182               	movf	(??_gpio_pin_direction_intialize+2)& (0+255),w,b
  1257   0013A6  16DF               	andwf	indf2,f,c
  1258                           
  1259                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:             break;
  1260   0013A8  EF15  F00A         	goto	l4236
  1261   0013AC                     l4230:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  1265   0013AC  506F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1266   0013AE  6ED9               	movwf	fsr2l,c
  1267   0013B0  6ADA               	clrf	fsr2h,c
  1268   0013B2  30DF               	rrcf	223,w,c
  1269   0013B4  32E8               	rrcf	wreg,f,c
  1270   0013B6  32E8               	rrcf	wreg,f,c
  1271   0013B8  0B07               	andlw	7
  1272   0013BA  6F80               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  1273   0013BC  0E01               	movlw	1
  1274   0013BE  6F81               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  1275   0013C0  2B80               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  1276   0013C2  EFE5  F009         	goto	u3254
  1277   0013C6                     u3255:
  1278   0013C6  90D8               	bcf	status,0,c
  1279   0013C8  3781               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  1280   0013CA                     u3254:
  1281   0013CA  2F80               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  1282   0013CC  EFE3  F009         	goto	u3255
  1283   0013D0  506F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1284   0013D2  6ED9               	movwf	fsr2l,c
  1285   0013D4  6ADA               	clrf	fsr2h,c
  1286   0013D6  50DF               	movf	223,w,c
  1287   0013D8  0B07               	andlw	7
  1288   0013DA  0D02               	mullw	2
  1289   0013DC  50F3               	movf	243,w,c
  1290   0013DE  0F25               	addlw	low _tris_registers
  1291   0013E0  6ED9               	movwf	fsr2l,c
  1292   0013E2  6ADA               	clrf	fsr2h,c
  1293   0013E4  CFDE F082          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1294   0013E8  CFDD F083          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1295   0013EC  C082  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1296   0013F0  C083  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1297   0013F4  0100               	movlb	0	; () banked
  1298   0013F6  5181               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  1299   0013F8  12DF               	iorwf	indf2,f,c
  1300                           
  1301                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             break;
  1302   0013FA  EF15  F00A         	goto	l4236
  1303   0013FE                     l4234:
  1304                           
  1305                           ; BSR set to: 0
  1306   0013FE  506F               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1307   001400  6ED9               	movwf	fsr2l,c
  1308   001402  6ADA               	clrf	fsr2h,c
  1309   001404  BCDF               	btfsc	indf2,6,c
  1310   001406  EF07  F00A         	goto	u3261
  1311   00140A  EF0A  F00A         	goto	u3260
  1312   00140E                     u3261:
  1313   00140E  0E01               	movlw	1
  1314   001410  EF0B  F00A         	goto	u3266
  1315   001414                     u3260:
  1316   001414  0E00               	movlw	0
  1317   001416                     u3266:
  1318                           
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 2, Range of values is 0 to 1
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte            7     4 (average)
  1324                           ;	Chosen strategy is simple_byte
  1325   001416  0A00               	xorlw	0	; case 0
  1326   001418  B4D8               	btfsc	status,2,c
  1327   00141A  EFAA  F009         	goto	l4228
  1328   00141E  0A01               	xorlw	1	; case 1
  1329   001420  B4D8               	btfsc	status,2,c
  1330   001422  EFD6  F009         	goto	l4230
  1331   001426  EFA6  F009         	goto	l4226
  1332   00142A                     l4236:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  1336   00142A  5185               	movf	gpio_pin_direction_intialize@ret& (0+255),w,b
  1337   00142C                     
  1338                           ; BSR set to: 0
  1339   00142C  0012               	return		;funcret
  1340   00142E                     __end_of_gpio_pin_direction_intialize:
  1341                           	callstack 0
  1342                           
  1343 ;; *************** function _TIMER0_Read_Value *****************
  1344 ;; Defined at:
  1345 ;;		line 78 in file "MCAL_Layer/TIMERS/TIMER0/hal_timer0.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  timer           1    0[BANK0 ] PTR const struct .
  1348 ;;		 -> timer(8), 
  1349 ;;  var             1    1[BANK0 ] PTR unsigned short 
  1350 ;;		 -> value(2), 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  high_reg        1    5[BANK0 ] unsigned char 
  1353 ;;  low_reg         1    4[BANK0 ] unsigned char 
  1354 ;;  ret             1    0        unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      unsigned char 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1364 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;Total ram usage:        6 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 5
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text7
  1379   001826                     __ptext7:
  1380                           	callstack 0
  1381   001826                     _TIMER0_Read_Value:
  1382                           	callstack 25
  1383   001826                     
  1384                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 80:     uint8 low_reg = 0;
  1385   001826  0E00               	movlw	0
  1386   001828  0100               	movlb	0	; () banked
  1387   00182A  6F84               	movwf	TIMER0_Read_Value@low_reg& (0+255),b
  1388                           
  1389                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 81:     uint8 high_reg = 0;
  1390   00182C  0E00               	movlw	0
  1391   00182E  6F85               	movwf	TIMER0_Read_Value@high_reg& (0+255),b
  1392                           
  1393                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 82:     if(timer == ((void*)0)){
  1394   001830  5180               	movf	TIMER0_Read_Value@timer& (0+255),w,b
  1395   001832  A4D8               	btfss	status,2,c
  1396   001834  EF1E  F00C         	goto	u3511
  1397   001838  EF20  F00C         	goto	u3510
  1398   00183C                     u3511:
  1399   00183C  EF22  F00C         	goto	l929
  1400   001840                     u3510:
  1401   001840                     
  1402                           ; BSR set to: 0
  1403                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 84:     }
  1404   001840  EF37  F00C         	goto	l931
  1405   001844                     l929:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 86:         low_reg = TMR0L;
  1409   001844  CFD6 F084          	movff	4054,TIMER0_Read_Value@low_reg	;volatile
  1410                           
  1411                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 87:         high_reg = TMR0H;
  1412   001848  CFD7 F085          	movff	4055,TIMER0_Read_Value@high_reg	;volatile
  1413   00184C                     
  1414                           ; BSR set to: 0
  1415                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 88:         *var = (uint16)((high_reg << 8) + lo
      +                          w_reg);
  1416   00184C  5184               	movf	TIMER0_Read_Value@low_reg& (0+255),w,b
  1417   00184E  C085  F082         	movff	TIMER0_Read_Value@high_reg,??_TIMER0_Read_Value
  1418   001852  6B83               	clrf	(??_TIMER0_Read_Value+1)& (0+255),b
  1419   001854  C082  F083         	movff	??_TIMER0_Read_Value,??_TIMER0_Read_Value+1
  1420   001858  6B82               	clrf	??_TIMER0_Read_Value& (0+255),b
  1421   00185A  2782               	addwf	??_TIMER0_Read_Value& (0+255),f,b
  1422   00185C  0E00               	movlw	0
  1423   00185E  2383               	addwfc	(??_TIMER0_Read_Value+1)& (0+255),f,b
  1424   001860  5181               	movf	TIMER0_Read_Value@var& (0+255),w,b
  1425   001862  6ED9               	movwf	fsr2l,c
  1426   001864  6ADA               	clrf	fsr2h,c
  1427   001866  C082  FFDE         	movff	??_TIMER0_Read_Value,postinc2
  1428   00186A  C083  FFDD         	movff	??_TIMER0_Read_Value+1,postdec2
  1429   00186E                     l931:
  1430                           
  1431                           ; BSR set to: 0
  1432   00186E  0012               	return		;funcret
  1433   001870                     __end_of_TIMER0_Read_Value:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _TIMER0_INIT *****************
  1437 ;; Defined at:
  1438 ;;		line 18 in file "MCAL_Layer/TIMERS/TIMER0/hal_timer0.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  timer           1    1[BANK0 ] PTR const struct .
  1441 ;;		 -> timer(8), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  ret             1    0        unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      unsigned char 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1453 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 6
  1460 ;; This function calls:
  1461 ;;		_TIMER0_MODE_SELECT
  1462 ;;		_TIMER0_PRESCALER_CFG
  1463 ;;		_TIMER0_Size_SELECT
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text8
  1470   001524                     __ptext8:
  1471                           	callstack 0
  1472   001524                     _TIMER0_INIT:
  1473                           	callstack 24
  1474   001524                     
  1475                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 20:     if(timer == ((void*)0)){
  1476   001524  0100               	movlb	0	; () banked
  1477   001526  5181               	movf	TIMER0_INIT@timer& (0+255),w,b
  1478   001528  A4D8               	btfss	status,2,c
  1479   00152A  EF99  F00A         	goto	u3501
  1480   00152E  EF9B  F00A         	goto	u3500
  1481   001532                     u3501:
  1482   001532  EF9D  F00A         	goto	l914
  1483   001536                     u3500:
  1484   001536                     
  1485                           ; BSR set to: 0
  1486                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 22:     }
  1487   001536  EFD5  F00A         	goto	l916
  1488   00153A                     l914:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 24:         (T0CONbits.TMR0ON = 0);
  1492   00153A  9ED5               	bcf	213,7,c	;volatile
  1493   00153C                     
  1494                           ; BSR set to: 0
  1495                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 25:         TIMER0_Size_SELECT(timer);
  1496   00153C  C081  F06F         	movff	TIMER0_INIT@timer,TIMER0_Size_SELECT@timer
  1497   001540  ECEC  F00B         	call	_TIMER0_Size_SELECT	;wreg free
  1498                           
  1499                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 26:         TIMER0_MODE_SELECT(timer);
  1500   001544  C081  F06F         	movff	TIMER0_INIT@timer,TIMER0_MODE_SELECT@timer
  1501   001548  ECD6  F00A         	call	_TIMER0_MODE_SELECT	;wreg free
  1502                           
  1503                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 27:         TIMER0_PRESCALER_CFG(timer);
  1504   00154C  C081  F06F         	movff	TIMER0_INIT@timer,TIMER0_PRESCALER_CFG@timer
  1505   001550  EC50  F00B         	call	_TIMER0_PRESCALER_CFG	;wreg free
  1506   001554                     
  1507                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 28:         TMR0H = ((timer->prevalue) >> 8);
  1508   001554  0100               	movlb	0	; () banked
  1509   001556  5181               	movf	TIMER0_INIT@timer& (0+255),w,b
  1510   001558  6ED9               	movwf	fsr2l,c
  1511   00155A  6ADA               	clrf	fsr2h,c
  1512   00155C  0E03               	movlw	3
  1513   00155E  26D9               	addwf	fsr2l,f,c
  1514   001560  CFDE F082          	movff	postinc2,??_TIMER0_INIT
  1515   001564  CFDD F083          	movff	postdec2,??_TIMER0_INIT+1
  1516   001568  C083  F082         	movff	??_TIMER0_INIT+1,??_TIMER0_INIT
  1517   00156C  6B83               	clrf	(??_TIMER0_INIT+1)& (0+255),b
  1518   00156E  5182               	movf	??_TIMER0_INIT& (0+255),w,b
  1519   001570  6ED7               	movwf	215,c	;volatile
  1520   001572                     
  1521                           ; BSR set to: 0
  1522                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 29:         TMR0L = (uint8)(timer->prevalue);
  1523   001572  5181               	movf	TIMER0_INIT@timer& (0+255),w,b
  1524   001574  6ED9               	movwf	fsr2l,c
  1525   001576  6ADA               	clrf	fsr2h,c
  1526   001578  0E03               	movlw	3
  1527   00157A  26D9               	addwf	fsr2l,f,c
  1528   00157C  50DF               	movf	indf2,w,c
  1529   00157E  6ED6               	movwf	214,c	;volatile
  1530   001580                     
  1531                           ; BSR set to: 0
  1532                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 30:         preload = timer->prevalue;
  1533   001580  5181               	movf	TIMER0_INIT@timer& (0+255),w,b
  1534   001582  6ED9               	movwf	fsr2l,c
  1535   001584  6ADA               	clrf	fsr2h,c
  1536   001586  0E03               	movlw	3
  1537   001588  26D9               	addwf	fsr2l,f,c
  1538   00158A  CFDE F03E          	movff	postinc2,_preload
  1539   00158E  CFDD F03F          	movff	postdec2,_preload+1
  1540   001592                     
  1541                           ; BSR set to: 0
  1542                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 32:         (INTCONbits.TMR0IE = 1);
  1543   001592  8AF2               	bsf	242,5,c	;volatile
  1544   001594                     
  1545                           ; BSR set to: 0
  1546                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 33:         (INTCONbits.TMR0IF = 0);
  1547   001594  94F2               	bcf	242,2,c	;volatile
  1548   001596                     
  1549                           ; BSR set to: 0
  1550                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 34:         ISR_TIMER0 = timer->TIMER0_HANDLER;
  1551   001596  5181               	movf	TIMER0_INIT@timer& (0+255),w,b
  1552   001598  6ED9               	movwf	fsr2l,c
  1553   00159A  6ADA               	clrf	fsr2h,c
  1554   00159C  CFDE F040          	movff	postinc2,_ISR_TIMER0
  1555   0015A0  CFDD F041          	movff	postdec2,_ISR_TIMER0+1
  1556   0015A4                     
  1557                           ; BSR set to: 0
  1558                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 46:     (INTCONbits.GIEH = 1);
  1559   0015A4  8EF2               	bsf	242,7,c	;volatile
  1560   0015A6                     
  1561                           ; BSR set to: 0
  1562                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 47:     (INTCONbits.PEIE = 1);
  1563   0015A6  8CF2               	bsf	242,6,c	;volatile
  1564   0015A8                     
  1565                           ; BSR set to: 0
  1566                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 50:     (T0CONbits.TMR0ON = 1);
  1567   0015A8  8ED5               	bsf	213,7,c	;volatile
  1568   0015AA                     l916:
  1569                           
  1570                           ; BSR set to: 0
  1571   0015AA  0012               	return		;funcret
  1572   0015AC                     __end_of_TIMER0_INIT:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _TIMER0_Size_SELECT *****************
  1576 ;; Defined at:
  1577 ;;		line 94 in file "MCAL_Layer/TIMERS/TIMER0/hal_timer0.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  timer           1   14[COMRAM] PTR const struct .
  1580 ;;		 -> timer(8), 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  ret             1    0        unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      unsigned char 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1592 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;Total ram usage:        1 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 5
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_TIMER0_INIT
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text9
  1607   0017D8                     __ptext9:
  1608                           	callstack 0
  1609   0017D8                     _TIMER0_Size_SELECT:
  1610                           	callstack 24
  1611   0017D8                     
  1612                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 96:     if(timer == ((void*)0)){
  1613   0017D8  506F               	movf	TIMER0_Size_SELECT@timer^0,w,c
  1614   0017DA  A4D8               	btfss	status,2,c
  1615   0017DC  EFF2  F00B         	goto	u2111
  1616   0017E0  EFF4  F00B         	goto	u2110
  1617   0017E4                     u2111:
  1618   0017E4  EFF6  F00B         	goto	l3398
  1619   0017E8                     u2110:
  1620   0017E8                     l3396:
  1621                           
  1622                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 98:     }
  1623   0017E8  EF12  F00C         	goto	l940
  1624   0017EC                     l3398:
  1625                           
  1626                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 100:         if(timer->size == 1){
  1627   0017EC  506F               	movf	TIMER0_Size_SELECT@timer^0,w,c
  1628   0017EE  6ED9               	movwf	fsr2l,c
  1629   0017F0  6ADA               	clrf	fsr2h,c
  1630   0017F2  0E02               	movlw	2
  1631   0017F4  26D9               	addwf	fsr2l,f,c
  1632   0017F6  A2DF               	btfss	indf2,1,c
  1633   0017F8  EF00  F00C         	goto	u2121
  1634   0017FC  EF02  F00C         	goto	u2120
  1635   001800                     u2121:
  1636   001800  EF05  F00C         	goto	l3402
  1637   001804                     u2120:
  1638   001804                     
  1639                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 101:             (T0CONbits.T08BIT = 0);
  1640   001804  9CD5               	bcf	213,6,c	;volatile
  1641                           
  1642                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 102:         }
  1643   001806  EF12  F00C         	goto	l940
  1644   00180A                     l3402:
  1645   00180A  506F               	movf	TIMER0_Size_SELECT@timer^0,w,c
  1646   00180C  6ED9               	movwf	fsr2l,c
  1647   00180E  6ADA               	clrf	fsr2h,c
  1648   001810  0E02               	movlw	2
  1649   001812  26D9               	addwf	fsr2l,f,c
  1650   001814  B2DF               	btfsc	indf2,1,c
  1651   001816  EF0F  F00C         	goto	u2131
  1652   00181A  EF11  F00C         	goto	u2130
  1653   00181E                     u2131:
  1654   00181E  EFF4  F00B         	goto	l3396
  1655   001822                     u2130:
  1656   001822                     
  1657                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 104:             (T0CONbits.T08BIT = 1);
  1658   001822  8CD5               	bsf	213,6,c	;volatile
  1659   001824                     l940:
  1660   001824  0012               	return		;funcret
  1661   001826                     __end_of_TIMER0_Size_SELECT:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _TIMER0_PRESCALER_CFG *****************
  1665 ;; Defined at:
  1666 ;;		line 134 in file "MCAL_Layer/TIMERS/TIMER0/hal_timer0.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  timer           1   14[COMRAM] PTR const struct .
  1669 ;;		 -> timer(8), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  ret             1    0        unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      unsigned char 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1681 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;Total ram usage:        2 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 5
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_TIMER0_INIT
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text10
  1696   0016A0                     __ptext10:
  1697                           	callstack 0
  1698   0016A0                     _TIMER0_PRESCALER_CFG:
  1699                           	callstack 24
  1700   0016A0                     
  1701                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 136:     if(timer == ((void*)0)){
  1702   0016A0  506F               	movf	TIMER0_PRESCALER_CFG@timer^0,w,c
  1703   0016A2  A4D8               	btfss	status,2,c
  1704   0016A4  EF56  F00B         	goto	u3371
  1705   0016A8  EF58  F00B         	goto	u3370
  1706   0016AC                     u3371:
  1707   0016AC  EF5A  F00B         	goto	l4348
  1708   0016B0                     u3370:
  1709   0016B0                     l4346:
  1710                           
  1711                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 138:     }
  1712   0016B0  EF85  F00B         	goto	l962
  1713   0016B4                     l4348:
  1714                           
  1715                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 140:         if(timer->prescaler == 0){
  1716   0016B4  506F               	movf	TIMER0_PRESCALER_CFG@timer^0,w,c
  1717   0016B6  6ED9               	movwf	fsr2l,c
  1718   0016B8  6ADA               	clrf	fsr2h,c
  1719   0016BA  0E06               	movlw	6
  1720   0016BC  26D9               	addwf	fsr2l,f,c
  1721   0016BE  50DF               	movf	indf2,w,c
  1722   0016C0  A4D8               	btfss	status,2,c
  1723   0016C2  EF65  F00B         	goto	u3381
  1724   0016C6  EF67  F00B         	goto	u3380
  1725   0016CA                     u3381:
  1726   0016CA  EF6A  F00B         	goto	l4352
  1727   0016CE                     u3380:
  1728   0016CE                     
  1729                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 141:             (T0CONbits.PSA = 1);
  1730   0016CE  86D5               	bsf	213,3,c	;volatile
  1731                           
  1732                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 142:         }
  1733   0016D0  EF85  F00B         	goto	l962
  1734   0016D4                     l4352:
  1735   0016D4  506F               	movf	TIMER0_PRESCALER_CFG@timer^0,w,c
  1736   0016D6  6ED9               	movwf	fsr2l,c
  1737   0016D8  6ADA               	clrf	fsr2h,c
  1738   0016DA  0E06               	movlw	6
  1739   0016DC  26D9               	addwf	fsr2l,f,c
  1740   0016DE  04DE               	decf	postinc2,w,c
  1741   0016E0  A4D8               	btfss	status,2,c
  1742   0016E2  EF75  F00B         	goto	u3391
  1743   0016E6  EF77  F00B         	goto	u3390
  1744   0016EA                     u3391:
  1745   0016EA  EF58  F00B         	goto	l4346
  1746   0016EE                     u3390:
  1747   0016EE                     
  1748                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 145:             (T0CONbits.PSA = 0);
  1749   0016EE  96D5               	bcf	213,3,c	;volatile
  1750   0016F0                     
  1751                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 146:             T0CONbits.T0PS = timer->prescal
      +                          er_val;
  1752   0016F0  506F               	movf	TIMER0_PRESCALER_CFG@timer^0,w,c
  1753   0016F2  6ED9               	movwf	fsr2l,c
  1754   0016F4  6ADA               	clrf	fsr2h,c
  1755   0016F6  0E07               	movlw	7
  1756   0016F8  26D9               	addwf	fsr2l,f,c
  1757   0016FA  50DF               	movf	indf2,w,c
  1758   0016FC  0100               	movlb	0	; () banked
  1759   0016FE  6F80               	movwf	??_TIMER0_PRESCALER_CFG& (0+255),b
  1760   001700  50D5               	movf	213,w,c	;volatile
  1761   001702  1980               	xorwf	??_TIMER0_PRESCALER_CFG& (0+255),w,b
  1762   001704  0BF8               	andlw	-8
  1763   001706  1980               	xorwf	??_TIMER0_PRESCALER_CFG& (0+255),w,b
  1764   001708  6ED5               	movwf	213,c	;volatile
  1765   00170A                     l962:
  1766   00170A  0012               	return		;funcret
  1767   00170C                     __end_of_TIMER0_PRESCALER_CFG:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _TIMER0_MODE_SELECT *****************
  1771 ;; Defined at:
  1772 ;;		line 111 in file "MCAL_Layer/TIMERS/TIMER0/hal_timer0.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  timer           1   14[COMRAM] PTR const struct .
  1775 ;;		 -> timer(8), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  ret             1    0        unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      unsigned char 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1787 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;Total ram usage:        1 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 5
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_TIMER0_INIT
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text11
  1802   0015AC                     __ptext11:
  1803                           	callstack 0
  1804   0015AC                     _TIMER0_MODE_SELECT:
  1805                           	callstack 24
  1806   0015AC                     
  1807                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 113:     if(timer == ((void*)0)){
  1808   0015AC  506F               	movf	TIMER0_MODE_SELECT@timer^0,w,c
  1809   0015AE  A4D8               	btfss	status,2,c
  1810   0015B0  EFDC  F00A         	goto	u2141
  1811   0015B4  EFDE  F00A         	goto	u2140
  1812   0015B8                     u2141:
  1813   0015B8  EFE0  F00A         	goto	l3414
  1814   0015BC                     u2140:
  1815   0015BC                     l3412:
  1816                           
  1817                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 115:     }
  1818   0015BC  EF18  F00B         	goto	l953
  1819   0015C0                     l3414:
  1820                           
  1821                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 117:         if(timer->mode == 1){
  1822   0015C0  506F               	movf	TIMER0_MODE_SELECT@timer^0,w,c
  1823   0015C2  6ED9               	movwf	fsr2l,c
  1824   0015C4  6ADA               	clrf	fsr2h,c
  1825   0015C6  0E02               	movlw	2
  1826   0015C8  26D9               	addwf	fsr2l,f,c
  1827   0015CA  A0DF               	btfss	indf2,0,c
  1828   0015CC  EFEA  F00A         	goto	u2151
  1829   0015D0  EFEC  F00A         	goto	u2150
  1830   0015D4                     u2151:
  1831   0015D4  EFEF  F00A         	goto	l3418
  1832   0015D8                     u2150:
  1833   0015D8                     
  1834                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 118:             (T0CONbits.T0CS = 0);
  1835   0015D8  9AD5               	bcf	213,5,c	;volatile
  1836                           
  1837                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 119:         }
  1838   0015DA  EF18  F00B         	goto	l953
  1839   0015DE                     l3418:
  1840   0015DE  506F               	movf	TIMER0_MODE_SELECT@timer^0,w,c
  1841   0015E0  6ED9               	movwf	fsr2l,c
  1842   0015E2  6ADA               	clrf	fsr2h,c
  1843   0015E4  0E02               	movlw	2
  1844   0015E6  26D9               	addwf	fsr2l,f,c
  1845   0015E8  B0DF               	btfsc	indf2,0,c
  1846   0015EA  EFF9  F00A         	goto	u2161
  1847   0015EE  EFFB  F00A         	goto	u2160
  1848   0015F2                     u2161:
  1849   0015F2  EFDE  F00A         	goto	l3412
  1850   0015F6                     u2160:
  1851   0015F6                     
  1852                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 121:             (T0CONbits.T0CS = 1);
  1853   0015F6  8AD5               	bsf	213,5,c	;volatile
  1854   0015F8                     
  1855                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 122:             if(timer->edge == 1){
  1856   0015F8  506F               	movf	TIMER0_MODE_SELECT@timer^0,w,c
  1857   0015FA  6ED9               	movwf	fsr2l,c
  1858   0015FC  6ADA               	clrf	fsr2h,c
  1859   0015FE  0E05               	movlw	5
  1860   001600  26D9               	addwf	fsr2l,f,c
  1861   001602  A0DF               	btfss	indf2,0,c
  1862   001604  EF06  F00B         	goto	u2171
  1863   001608  EF08  F00B         	goto	u2170
  1864   00160C                     u2171:
  1865   00160C  EF0B  F00B         	goto	l3426
  1866   001610                     u2170:
  1867   001610                     
  1868                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 123:                 (T0CONbits.T0SE = 0);
  1869   001610  98D5               	bcf	213,4,c	;volatile
  1870                           
  1871                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 124:             }
  1872   001612  EF18  F00B         	goto	l953
  1873   001616                     l3426:
  1874   001616  506F               	movf	TIMER0_MODE_SELECT@timer^0,w,c
  1875   001618  6ED9               	movwf	fsr2l,c
  1876   00161A  6ADA               	clrf	fsr2h,c
  1877   00161C  0E05               	movlw	5
  1878   00161E  26D9               	addwf	fsr2l,f,c
  1879   001620  B0DF               	btfsc	indf2,0,c
  1880   001622  EF15  F00B         	goto	u2181
  1881   001626  EF17  F00B         	goto	u2180
  1882   00162A                     u2181:
  1883   00162A  EFDE  F00A         	goto	l3412
  1884   00162E                     u2180:
  1885   00162E                     
  1886                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 126:                 (T0CONbits.T0SE = 1);
  1887   00162E  88D5               	bsf	213,4,c	;volatile
  1888   001630                     l953:
  1889   001630  0012               	return		;funcret
  1890   001632                     __end_of_TIMER0_MODE_SELECT:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _InterruptMangaer *****************
  1894 ;; Defined at:
  1895 ;;		line 38 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;Total ram usage:        6 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 4
  1916 ;; This function calls:
  1917 ;;		_INT0_ISR
  1918 ;;		_INT1_ISR
  1919 ;;		_INT2_ISR
  1920 ;;		_RB4_ISR
  1921 ;;		_RB5_ISR
  1922 ;;		_RB6_ISR
  1923 ;;		_RB7_ISR
  1924 ;;		_TMR0_ISR
  1925 ;; This function is called by:
  1926 ;;		Interrupt level 2
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	intcode
  1931   000008                     __pintcode:
  1932                           	callstack 0
  1933   000008                     _InterruptMangaer:
  1934                           	callstack 21
  1935                           
  1936                           ;incstack = 0
  1937   000008  8271               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1938   00000A  ED20  F008         	call	int_func,f	;refresh shadow registers
  1939                           
  1940                           	psect	intcode_body
  1941   001040                     __pintcode_body:
  1942                           	callstack 21
  1943   001040                     int_func:
  1944                           	callstack 21
  1945   001040  0006               	pop		; remove dummy address from shadow register refresh
  1946   001042  CFFA F069          	movff	pclath,??_InterruptMangaer
  1947   001046  CFFB F06A          	movff	pclatu,??_InterruptMangaer+1
  1948   00104A  CFD9 F06B          	movff	fsr2l,??_InterruptMangaer+2
  1949   00104E  CFDA F06C          	movff	fsr2h,??_InterruptMangaer+3
  1950   001052  CFF3 F06D          	movff	prodl,??_InterruptMangaer+4
  1951   001056  CFF4 F06E          	movff	prodh,??_InterruptMangaer+5
  1952   00105A                     
  1953                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:     if((INTCONbits.INT0IE == 1) && (
      +                          INTCONbits.INT0IF == 1)){
  1954   00105A  A8F2               	btfss	242,4,c	;volatile
  1955   00105C  EF32  F008         	goto	i2u279_41
  1956   001060  EF34  F008         	goto	i2u279_40
  1957   001064                     i2u279_41:
  1958   001064  EF3D  F008         	goto	i2l824
  1959   001068                     i2u279_40:
  1960   001068  A2F2               	btfss	242,1,c	;volatile
  1961   00106A  EF39  F008         	goto	i2u280_41
  1962   00106E  EF3B  F008         	goto	i2u280_40
  1963   001072                     i2u280_41:
  1964   001072  EF3D  F008         	goto	i2l824
  1965   001076                     i2u280_40:
  1966   001076                     
  1967                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 40:         INT0_ISR();
  1968   001076  EC09  F00D         	call	_INT0_ISR	;wreg free
  1969   00107A                     i2l824:
  1970                           
  1971                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  1972   00107A  A6F0               	btfss	240,3,c	;volatile
  1973   00107C  EF42  F008         	goto	i2u281_41
  1974   001080  EF44  F008         	goto	i2u281_40
  1975   001084                     i2u281_41:
  1976   001084  EF4D  F008         	goto	i2l826
  1977   001088                     i2u281_40:
  1978   001088  A0F0               	btfss	240,0,c	;volatile
  1979   00108A  EF49  F008         	goto	i2u282_41
  1980   00108E  EF4B  F008         	goto	i2u282_40
  1981   001092                     i2u282_41:
  1982   001092  EF4D  F008         	goto	i2l826
  1983   001096                     i2u282_40:
  1984   001096                     
  1985                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 46:         INT1_ISR();
  1986   001096  EC07  F00D         	call	_INT1_ISR	;wreg free
  1987   00109A                     i2l826:
  1988                           
  1989                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  1990   00109A  A8F0               	btfss	240,4,c	;volatile
  1991   00109C  EF52  F008         	goto	i2u283_41
  1992   0010A0  EF54  F008         	goto	i2u283_40
  1993   0010A4                     i2u283_41:
  1994   0010A4  EF5D  F008         	goto	i2l828
  1995   0010A8                     i2u283_40:
  1996   0010A8  A2F0               	btfss	240,1,c	;volatile
  1997   0010AA  EF59  F008         	goto	i2u284_41
  1998   0010AE  EF5B  F008         	goto	i2u284_40
  1999   0010B2                     i2u284_41:
  2000   0010B2  EF5D  F008         	goto	i2l828
  2001   0010B6                     i2u284_40:
  2002   0010B6                     
  2003                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:         INT2_ISR();
  2004   0010B6  EC05  F00D         	call	_INT2_ISR	;wreg free
  2005   0010BA                     i2l828:
  2006                           
  2007                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB4 == GPIO_HIGH) && (RB4_F == 1)){
  2008   0010BA  A6F2               	btfss	242,3,c	;volatile
  2009   0010BC  EF62  F008         	goto	i2u285_41
  2010   0010C0  EF64  F008         	goto	i2u285_40
  2011   0010C4                     i2u285_41:
  2012   0010C4  EF7F  F008         	goto	i2l830
  2013   0010C8                     i2u285_40:
  2014   0010C8  A0F2               	btfss	242,0,c	;volatile
  2015   0010CA  EF69  F008         	goto	i2u286_41
  2016   0010CE  EF6B  F008         	goto	i2u286_40
  2017   0010D2                     i2u286_41:
  2018   0010D2  EF7F  F008         	goto	i2l830
  2019   0010D6                     i2u286_40:
  2020   0010D6  A881               	btfss	129,4,c	;volatile
  2021   0010D8  EF70  F008         	goto	i2u287_41
  2022   0010DC  EF72  F008         	goto	i2u287_40
  2023   0010E0                     i2u287_41:
  2024   0010E0  EF7F  F008         	goto	i2l830
  2025   0010E4                     i2u287_40:
  2026   0010E4  0432               	decf	_RB4_F^0,w,c	;volatile
  2027   0010E6  A4D8               	btfss	status,2,c
  2028   0010E8  EF78  F008         	goto	i2u288_41
  2029   0010EC  EF7A  F008         	goto	i2u288_40
  2030   0010F0                     i2u288_41:
  2031   0010F0  EF7F  F008         	goto	i2l830
  2032   0010F4                     i2u288_40:
  2033   0010F4                     
  2034                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:         RB4_F = 0;
  2035   0010F4  0E00               	movlw	0
  2036   0010F6  6E32               	movwf	_RB4_F^0,c	;volatile
  2037   0010F8                     
  2038                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:         RB4_ISR(0);
  2039   0010F8  0E00               	movlw	0
  2040   0010FA  ECC1  F00C         	call	_RB4_ISR
  2041   0010FE                     i2l830:
  2042                           
  2043                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB4 == GPIO_LOW) && (RB4_F == 0)){
  2044   0010FE  A6F2               	btfss	242,3,c	;volatile
  2045   001100  EF84  F008         	goto	i2u289_41
  2046   001104  EF86  F008         	goto	i2u289_40
  2047   001108                     i2u289_41:
  2048   001108  EFA1  F008         	goto	i2l832
  2049   00110C                     i2u289_40:
  2050   00110C  A0F2               	btfss	242,0,c	;volatile
  2051   00110E  EF8B  F008         	goto	i2u290_41
  2052   001112  EF8D  F008         	goto	i2u290_40
  2053   001116                     i2u290_41:
  2054   001116  EFA1  F008         	goto	i2l832
  2055   00111A                     i2u290_40:
  2056   00111A  B881               	btfsc	129,4,c	;volatile
  2057   00111C  EF92  F008         	goto	i2u291_41
  2058   001120  EF94  F008         	goto	i2u291_40
  2059   001124                     i2u291_41:
  2060   001124  EFA1  F008         	goto	i2l832
  2061   001128                     i2u291_40:
  2062   001128  5032               	movf	_RB4_F^0,w,c	;volatile
  2063   00112A  A4D8               	btfss	status,2,c
  2064   00112C  EF9A  F008         	goto	i2u292_41
  2065   001130  EF9C  F008         	goto	i2u292_40
  2066   001134                     i2u292_41:
  2067   001134  EFA1  F008         	goto	i2l832
  2068   001138                     i2u292_40:
  2069   001138                     
  2070                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:         RB4_F = 1;
  2071   001138  0E01               	movlw	1
  2072   00113A  6E32               	movwf	_RB4_F^0,c	;volatile
  2073   00113C                     
  2074                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:         RB4_ISR(1);
  2075   00113C  0E01               	movlw	1
  2076   00113E  ECC1  F00C         	call	_RB4_ISR
  2077   001142                     i2l832:
  2078                           
  2079                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB5 == GPIO_HIGH) && (RB5_F == 1)){
  2080   001142  A6F2               	btfss	242,3,c	;volatile
  2081   001144  EFA6  F008         	goto	i2u293_41
  2082   001148  EFA8  F008         	goto	i2u293_40
  2083   00114C                     i2u293_41:
  2084   00114C  EFC3  F008         	goto	i2l834
  2085   001150                     i2u293_40:
  2086   001150  A0F2               	btfss	242,0,c	;volatile
  2087   001152  EFAD  F008         	goto	i2u294_41
  2088   001156  EFAF  F008         	goto	i2u294_40
  2089   00115A                     i2u294_41:
  2090   00115A  EFC3  F008         	goto	i2l834
  2091   00115E                     i2u294_40:
  2092   00115E  AA81               	btfss	129,5,c	;volatile
  2093   001160  EFB4  F008         	goto	i2u295_41
  2094   001164  EFB6  F008         	goto	i2u295_40
  2095   001168                     i2u295_41:
  2096   001168  EFC3  F008         	goto	i2l834
  2097   00116C                     i2u295_40:
  2098   00116C  0431               	decf	_RB5_F^0,w,c	;volatile
  2099   00116E  A4D8               	btfss	status,2,c
  2100   001170  EFBC  F008         	goto	i2u296_41
  2101   001174  EFBE  F008         	goto	i2u296_40
  2102   001178                     i2u296_41:
  2103   001178  EFC3  F008         	goto	i2l834
  2104   00117C                     i2u296_40:
  2105   00117C                     
  2106                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_F = 0;
  2107   00117C  0E00               	movlw	0
  2108   00117E  6E31               	movwf	_RB5_F^0,c	;volatile
  2109   001180                     
  2110                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:         RB5_ISR(0);
  2111   001180  0E00               	movlw	0
  2112   001182  ECE9  F00C         	call	_RB5_ISR
  2113   001186                     i2l834:
  2114                           
  2115                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB5 == GPIO_LOW) && (RB5_F == 0)){
  2116   001186  A6F2               	btfss	242,3,c	;volatile
  2117   001188  EFC8  F008         	goto	i2u297_41
  2118   00118C  EFCA  F008         	goto	i2u297_40
  2119   001190                     i2u297_41:
  2120   001190  EFE5  F008         	goto	i2l836
  2121   001194                     i2u297_40:
  2122   001194  A0F2               	btfss	242,0,c	;volatile
  2123   001196  EFCF  F008         	goto	i2u298_41
  2124   00119A  EFD1  F008         	goto	i2u298_40
  2125   00119E                     i2u298_41:
  2126   00119E  EFE5  F008         	goto	i2l836
  2127   0011A2                     i2u298_40:
  2128   0011A2  BA81               	btfsc	129,5,c	;volatile
  2129   0011A4  EFD6  F008         	goto	i2u299_41
  2130   0011A8  EFD8  F008         	goto	i2u299_40
  2131   0011AC                     i2u299_41:
  2132   0011AC  EFE5  F008         	goto	i2l836
  2133   0011B0                     i2u299_40:
  2134   0011B0  5031               	movf	_RB5_F^0,w,c	;volatile
  2135   0011B2  A4D8               	btfss	status,2,c
  2136   0011B4  EFDE  F008         	goto	i2u300_41
  2137   0011B8  EFE0  F008         	goto	i2u300_40
  2138   0011BC                     i2u300_41:
  2139   0011BC  EFE5  F008         	goto	i2l836
  2140   0011C0                     i2u300_40:
  2141   0011C0                     
  2142                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_F = 1;
  2143   0011C0  0E01               	movlw	1
  2144   0011C2  6E31               	movwf	_RB5_F^0,c	;volatile
  2145   0011C4                     
  2146                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
  2147   0011C4  0E01               	movlw	1
  2148   0011C6  ECE9  F00C         	call	_RB5_ISR
  2149   0011CA                     i2l836:
  2150                           
  2151                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB6 == GPIO_HIGH) && (RB6_F == 1)){
  2152   0011CA  A6F2               	btfss	242,3,c	;volatile
  2153   0011CC  EFEA  F008         	goto	i2u301_41
  2154   0011D0  EFEC  F008         	goto	i2u301_40
  2155   0011D4                     i2u301_41:
  2156   0011D4  EF07  F009         	goto	i2l838
  2157   0011D8                     i2u301_40:
  2158   0011D8  A0F2               	btfss	242,0,c	;volatile
  2159   0011DA  EFF1  F008         	goto	i2u302_41
  2160   0011DE  EFF3  F008         	goto	i2u302_40
  2161   0011E2                     i2u302_41:
  2162   0011E2  EF07  F009         	goto	i2l838
  2163   0011E6                     i2u302_40:
  2164   0011E6  AC81               	btfss	129,6,c	;volatile
  2165   0011E8  EFF8  F008         	goto	i2u303_41
  2166   0011EC  EFFA  F008         	goto	i2u303_40
  2167   0011F0                     i2u303_41:
  2168   0011F0  EF07  F009         	goto	i2l838
  2169   0011F4                     i2u303_40:
  2170   0011F4  0430               	decf	_RB6_F^0,w,c	;volatile
  2171   0011F6  A4D8               	btfss	status,2,c
  2172   0011F8  EF00  F009         	goto	i2u304_41
  2173   0011FC  EF02  F009         	goto	i2u304_40
  2174   001200                     i2u304_41:
  2175   001200  EF07  F009         	goto	i2l838
  2176   001204                     i2u304_40:
  2177   001204                     
  2178                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:         RB6_F = 0;
  2179   001204  0E00               	movlw	0
  2180   001206  6E30               	movwf	_RB6_F^0,c	;volatile
  2181   001208                     
  2182                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_ISR(0);
  2183   001208  0E00               	movlw	0
  2184   00120A  ECDC  F00C         	call	_RB6_ISR
  2185   00120E                     i2l838:
  2186                           
  2187                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB6 == GPIO_LOW) && (RB6_F == 0)){
  2188   00120E  A6F2               	btfss	242,3,c	;volatile
  2189   001210  EF0C  F009         	goto	i2u305_41
  2190   001214  EF0E  F009         	goto	i2u305_40
  2191   001218                     i2u305_41:
  2192   001218  EF29  F009         	goto	i2l840
  2193   00121C                     i2u305_40:
  2194   00121C  A0F2               	btfss	242,0,c	;volatile
  2195   00121E  EF13  F009         	goto	i2u306_41
  2196   001222  EF15  F009         	goto	i2u306_40
  2197   001226                     i2u306_41:
  2198   001226  EF29  F009         	goto	i2l840
  2199   00122A                     i2u306_40:
  2200   00122A  BC81               	btfsc	129,6,c	;volatile
  2201   00122C  EF1A  F009         	goto	i2u307_41
  2202   001230  EF1C  F009         	goto	i2u307_40
  2203   001234                     i2u307_41:
  2204   001234  EF29  F009         	goto	i2l840
  2205   001238                     i2u307_40:
  2206   001238  5030               	movf	_RB6_F^0,w,c	;volatile
  2207   00123A  A4D8               	btfss	status,2,c
  2208   00123C  EF22  F009         	goto	i2u308_41
  2209   001240  EF24  F009         	goto	i2u308_40
  2210   001244                     i2u308_41:
  2211   001244  EF29  F009         	goto	i2l840
  2212   001248                     i2u308_40:
  2213   001248                     
  2214                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:         RB6_F = 1;
  2215   001248  0E01               	movlw	1
  2216   00124A  6E30               	movwf	_RB6_F^0,c	;volatile
  2217   00124C                     
  2218                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:         RB4_ISR(1);
  2219   00124C  0E01               	movlw	1
  2220   00124E  ECC1  F00C         	call	_RB4_ISR
  2221   001252                     i2l840:
  2222                           
  2223                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:     if((INTCONbits.RBIE == 1) && (IN
      +                          TCONbits.RBIF == 1) && (PORTBbits.RB7 == GPIO_HIGH) && (RB7_F == 1)){
  2224   001252  A6F2               	btfss	242,3,c	;volatile
  2225   001254  EF2E  F009         	goto	i2u309_41
  2226   001258  EF30  F009         	goto	i2u309_40
  2227   00125C                     i2u309_41:
  2228   00125C  EF4B  F009         	goto	i2l842
  2229   001260                     i2u309_40:
  2230   001260  A0F2               	btfss	242,0,c	;volatile
  2231   001262  EF35  F009         	goto	i2u310_41
  2232   001266  EF37  F009         	goto	i2u310_40
  2233   00126A                     i2u310_41:
  2234   00126A  EF4B  F009         	goto	i2l842
  2235   00126E                     i2u310_40:
  2236   00126E  AE81               	btfss	129,7,c	;volatile
  2237   001270  EF3C  F009         	goto	i2u311_41
  2238   001274  EF3E  F009         	goto	i2u311_40
  2239   001278                     i2u311_41:
  2240   001278  EF4B  F009         	goto	i2l842
  2241   00127C                     i2u311_40:
  2242   00127C  042F               	decf	_RB7_F^0,w,c	;volatile
  2243   00127E  A4D8               	btfss	status,2,c
  2244   001280  EF44  F009         	goto	i2u312_41
  2245   001284  EF46  F009         	goto	i2u312_40
  2246   001288                     i2u312_41:
  2247   001288  EF4B  F009         	goto	i2l842
  2248   00128C                     i2u312_40:
  2249   00128C                     
  2250                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84:         RB7_F = 0;
  2251   00128C  0E00               	movlw	0
  2252   00128E  6E2F               	movwf	_RB7_F^0,c	;volatile
  2253   001290                     
  2254                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:         RB7_ISR(0);
  2255   001290  0E00               	movlw	0
  2256   001292  ECCF  F00C         	call	_RB7_ISR
  2257   001296                     i2l842:
  2258   001296  A6F2               	btfss	242,3,c	;volatile
  2259   001298  EF50  F009         	goto	i2u313_41
  2260   00129C  EF52  F009         	goto	i2u313_40
  2261   0012A0                     i2u313_41:
  2262   0012A0  EF6D  F009         	goto	i2l844
  2263   0012A4                     i2u313_40:
  2264   0012A4  A0F2               	btfss	242,0,c	;volatile
  2265   0012A6  EF57  F009         	goto	i2u314_41
  2266   0012AA  EF59  F009         	goto	i2u314_40
  2267   0012AE                     i2u314_41:
  2268   0012AE  EF6D  F009         	goto	i2l844
  2269   0012B2                     i2u314_40:
  2270   0012B2  AE81               	btfss	129,7,c	;volatile
  2271   0012B4  EF5E  F009         	goto	i2u315_41
  2272   0012B8  EF60  F009         	goto	i2u315_40
  2273   0012BC                     i2u315_41:
  2274   0012BC  EF6D  F009         	goto	i2l844
  2275   0012C0                     i2u315_40:
  2276   0012C0  502F               	movf	_RB7_F^0,w,c	;volatile
  2277   0012C2  A4D8               	btfss	status,2,c
  2278   0012C4  EF66  F009         	goto	i2u316_41
  2279   0012C8  EF68  F009         	goto	i2u316_40
  2280   0012CC                     i2u316_41:
  2281   0012CC  EF6D  F009         	goto	i2l844
  2282   0012D0                     i2u316_40:
  2283   0012D0                     
  2284                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_F = 0;
  2285   0012D0  0E00               	movlw	0
  2286   0012D2  6E2F               	movwf	_RB7_F^0,c	;volatile
  2287   0012D4                     
  2288                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:         RB7_ISR(1);
  2289   0012D4  0E01               	movlw	1
  2290   0012D6  ECCF  F00C         	call	_RB7_ISR
  2291   0012DA                     i2l844:
  2292                           
  2293                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:     if((INTCONbits.TMR0IE == 1) && (
      +                          INTCONbits.TMR0IF == 1)){
  2294   0012DA  AAF2               	btfss	242,5,c	;volatile
  2295   0012DC  EF72  F009         	goto	i2u317_41
  2296   0012E0  EF74  F009         	goto	i2u317_40
  2297   0012E4                     i2u317_41:
  2298   0012E4  EF7D  F009         	goto	i2l847
  2299   0012E8                     i2u317_40:
  2300   0012E8  A4F2               	btfss	242,2,c	;volatile
  2301   0012EA  EF79  F009         	goto	i2u318_41
  2302   0012EE  EF7B  F009         	goto	i2u318_40
  2303   0012F2                     i2u318_41:
  2304   0012F2  EF7D  F009         	goto	i2l847
  2305   0012F6                     i2u318_40:
  2306   0012F6                     
  2307                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         TMR0_ISR();
  2308   0012F6  EC94  F00C         	call	_TMR0_ISR	;wreg free
  2309   0012FA                     i2l847:
  2310   0012FA  C06E  FFF4         	movff	??_InterruptMangaer+5,prodh
  2311   0012FE  C06D  FFF3         	movff	??_InterruptMangaer+4,prodl
  2312   001302  C06C  FFDA         	movff	??_InterruptMangaer+3,fsr2h
  2313   001306  C06B  FFD9         	movff	??_InterruptMangaer+2,fsr2l
  2314   00130A  C06A  FFFB         	movff	??_InterruptMangaer+1,pclatu
  2315   00130E  C069  FFFA         	movff	??_InterruptMangaer,pclath
  2316   001312  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2317   001314  0011               	retfie		f
  2318   001316                     __end_of_InterruptMangaer:
  2319                           	callstack 0
  2320                           
  2321 ;; *************** function _TMR0_ISR *****************
  2322 ;; Defined at:
  2323 ;;		line 153 in file "MCAL_Layer/TIMERS/TIMER0/hal_timer0.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 3
  2344 ;; This function calls:
  2345 ;;		NULL
  2346 ;;		_isr
  2347 ;; This function is called by:
  2348 ;;		_InterruptMangaer
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text13
  2353   001928                     __ptext13:
  2354                           	callstack 0
  2355   001928                     _TMR0_ISR:
  2356                           	callstack 21
  2357   001928                     
  2358                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 154:     (INTCONbits.TMR0IF = 0);
  2359   001928  94F2               	bcf	242,2,c	;volatile
  2360   00192A                     
  2361                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 155:     TMR0H = (preload >> 8);
  2362   00192A  503F               	movf	(_preload+1)^0,w,c
  2363   00192C  6ED7               	movwf	215,c	;volatile
  2364   00192E                     
  2365                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 156:     TMR0L = (uint8)(preload);
  2366   00192E  C03E  FFD6         	movff	_preload,4054	;volatile
  2367   001932                     
  2368                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 157:     if(ISR_TIMER0){
  2369   001932  5040               	movf	_ISR_TIMER0^0,w,c
  2370   001934  1041               	iorwf	(_ISR_TIMER0+1)^0,w,c
  2371   001936  B4D8               	btfsc	status,2,c
  2372   001938  EFA0  F00C         	goto	i2u232_41
  2373   00193C  EFA2  F00C         	goto	i2u232_40
  2374   001940                     i2u232_41:
  2375   001940  EFAE  F00C         	goto	i2l967
  2376   001944                     i2u232_40:
  2377   001944                     
  2378                           ;MCAL_Layer/TIMERS/TIMER0/hal_timer0.c: 158:         ISR_TIMER0();
  2379   001944  D802               	call	i2u233_48
  2380   001946  EFAE  F00C         	goto	i2u233_49
  2381   00194A                     i2u233_48:
  2382   00194A  0005               	push	
  2383   00194C  6EFA               	movwf	pclath,c
  2384   00194E  5040               	movf	_ISR_TIMER0^0,w,c
  2385   001950  6EFD               	movwf	tosl,c
  2386   001952  5041               	movf	(_ISR_TIMER0+1)^0,w,c
  2387   001954  6EFE               	movwf	tosh,c
  2388   001956  6AFF               	clrf	tosu,c
  2389   001958  50FA               	movf	pclath,w,c
  2390   00195A  0012               	return		;indir
  2391   00195C                     i2u233_49:
  2392   00195C                     i2l967:
  2393   00195C  0012               	return		;funcret
  2394   00195E                     __end_of_TMR0_ISR:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _isr *****************
  2398 ;; Defined at:
  2399 ;;		line 11 in file "application.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 2
  2420 ;; This function calls:
  2421 ;;		_led_turn_toggle
  2422 ;; This function is called by:
  2423 ;;		_TMR0_ISR
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text14
  2428   0019F8                     __ptext14:
  2429                           	callstack 0
  2430   0019F8                     _isr:
  2431                           	callstack 21
  2432   0019F8                     
  2433                           ;application.c: 12:     led_turn_toggle(&led1);
  2434   0019F8  0E3D               	movlw	low _led1
  2435   0019FA  6E66               	movwf	led_turn_toggle@led^0,c
  2436   0019FC  EC86  F00B         	call	_led_turn_toggle	;wreg free
  2437   001A00  0012               	return		;funcret
  2438   001A02                     __end_of_isr:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _led_turn_toggle *****************
  2442 ;; Defined at:
  2443 ;;		line 54 in file "ECU_Layer/LED/ecu_led.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  led             1    5[COMRAM] PTR const struct .
  2446 ;;		 -> led1(1), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  pin_obj         1    7[COMRAM] struct .
  2449 ;;  ret             1    0        unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      unsigned char 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2459 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;Total ram usage:        3 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 1
  2466 ;; This function calls:
  2467 ;;		_gpio_pin_toggle_logic
  2468 ;; This function is called by:
  2469 ;;		_isr
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text15
  2474   00170C                     __ptext15:
  2475                           	callstack 0
  2476   00170C                     _led_turn_toggle:
  2477                           	callstack 21
  2478   00170C                     
  2479                           ;ECU_Layer/LED/ecu_led.c: 56:     if(led == ((void*)0)){
  2480   00170C  5066               	movf	led_turn_toggle@led^0,w,c
  2481   00170E  A4D8               	btfss	status,2,c
  2482   001710  EF8C  F00B         	goto	i2u202_41
  2483   001714  EF8E  F00B         	goto	i2u202_40
  2484   001718                     i2u202_41:
  2485   001718  EF90  F00B         	goto	i2l266
  2486   00171C                     i2u202_40:
  2487   00171C                     
  2488                           ;ECU_Layer/LED/ecu_led.c: 58:     }
  2489   00171C  EFBA  F00B         	goto	i2l270
  2490   001720                     i2l266:
  2491                           
  2492                           ;ECU_Layer/LED/ecu_led.c: 60:         pin_config_t pin_obj = {.port = led->port_name, .p
      +                          in = led->pin_name,
  2493   001720  C05B  F068         	movff	led_turn_toggle@F3077,led_turn_toggle@pin_obj
  2494   001724  5066               	movf	led_turn_toggle@led^0,w,c
  2495   001726  6ED9               	movwf	fsr2l,c
  2496   001728  6ADA               	clrf	fsr2h,c
  2497   00172A  50DF               	movf	223,w,c
  2498   00172C  0B07               	andlw	7
  2499   00172E  6E67               	movwf	??_led_turn_toggle^0,c
  2500   001730  5068               	movf	led_turn_toggle@pin_obj^0,w,c
  2501   001732  1867               	xorwf	??_led_turn_toggle^0,w,c
  2502   001734  0BF8               	andlw	-8
  2503   001736  1867               	xorwf	??_led_turn_toggle^0,w,c
  2504   001738  6E68               	movwf	led_turn_toggle@pin_obj^0,c
  2505   00173A  5066               	movf	led_turn_toggle@led^0,w,c
  2506   00173C  6ED9               	movwf	fsr2l,c
  2507   00173E  6ADA               	clrf	fsr2h,c
  2508   001740  30DF               	rrcf	223,w,c
  2509   001742  32E8               	rrcf	wreg,f,c
  2510   001744  32E8               	rrcf	wreg,f,c
  2511   001746  0B07               	andlw	7
  2512   001748  6E67               	movwf	??_led_turn_toggle^0,c
  2513   00174A  4667               	rlncf	??_led_turn_toggle^0,f,c
  2514   00174C  4667               	rlncf	??_led_turn_toggle^0,f,c
  2515   00174E  4667               	rlncf	??_led_turn_toggle^0,f,c
  2516   001750  5068               	movf	led_turn_toggle@pin_obj^0,w,c
  2517   001752  1867               	xorwf	??_led_turn_toggle^0,w,c
  2518   001754  0BC7               	andlw	-57
  2519   001756  1867               	xorwf	??_led_turn_toggle^0,w,c
  2520   001758  6E68               	movwf	led_turn_toggle@pin_obj^0,c
  2521   00175A  9C68               	bcf	led_turn_toggle@pin_obj^0,6,c
  2522   00175C  5066               	movf	led_turn_toggle@led^0,w,c
  2523   00175E  6ED9               	movwf	fsr2l,c
  2524   001760  6ADA               	clrf	fsr2h,c
  2525   001762  ACDF               	btfss	indf2,6,c
  2526   001764  D002               	bra	i2u203_45
  2527   001766  8E68               	bsf	led_turn_toggle@pin_obj^0,7,c
  2528   001768  D001               	bra	i2u203_47
  2529   00176A                     i2u203_45:
  2530   00176A  9E68               	bcf	led_turn_toggle@pin_obj^0,7,c
  2531   00176C                     i2u203_47:
  2532   00176C                     
  2533                           ;ECU_Layer/LED/ecu_led.c: 62:         gpio_pin_toggle_logic(&pin_obj);
  2534   00176C  0E68               	movlw	low led_turn_toggle@pin_obj
  2535   00176E  6E61               	movwf	gpio_pin_toggle_logic@_pin_config^0,c
  2536   001770  ECBB  F00B         	call	_gpio_pin_toggle_logic	;wreg free
  2537   001774                     i2l270:
  2538   001774  0012               	return		;funcret
  2539   001776                     __end_of_led_turn_toggle:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _gpio_pin_toggle_logic *****************
  2543 ;; Defined at:
  2544 ;;		line 116 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2547 ;;		 -> led_turn_toggle@pin_obj(1), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  ret             1    0        unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2559 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;Total ram usage:        5 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_led_turn_toggle
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text16
  2573   001776                     __ptext16:
  2574                           	callstack 0
  2575   001776                     _gpio_pin_toggle_logic:
  2576                           	callstack 21
  2577   001776                     
  2578                           ;MCAL_Layer/GPIO/hal_gpio.c: 118:     if(((void*)0) == _pin_config ){
  2579   001776  5061               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2580   001778  A4D8               	btfss	status,2,c
  2581   00177A  EFC1  F00B         	goto	i2u198_41
  2582   00177E  EFC3  F00B         	goto	i2u198_40
  2583   001782                     i2u198_41:
  2584   001782  EFC5  F00B         	goto	i2l3280
  2585   001786                     i2u198_40:
  2586   001786                     
  2587                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:     }
  2588   001786  EFEB  F00B         	goto	i2l545
  2589   00178A                     i2l3280:
  2590                           
  2591                           ;MCAL_Layer/GPIO/hal_gpio.c: 122:         (*lat_registers[_pin_config->port] ^= ((uint8)
      +                          1<<_pin_config->pin));
  2592   00178A  5061               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2593   00178C  6ED9               	movwf	fsr2l,c
  2594   00178E  6ADA               	clrf	fsr2h,c
  2595   001790  30DF               	rrcf	223,w,c
  2596   001792  32E8               	rrcf	wreg,f,c
  2597   001794  32E8               	rrcf	wreg,f,c
  2598   001796  0B07               	andlw	7
  2599   001798  6E62               	movwf	??_gpio_pin_toggle_logic^0,c
  2600   00179A  0E01               	movlw	1
  2601   00179C  6E63               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  2602   00179E  2A62               	incf	??_gpio_pin_toggle_logic^0,f,c
  2603   0017A0  EFD4  F00B         	goto	i2u199_44
  2604   0017A4                     i2u199_45:
  2605   0017A4  90D8               	bcf	status,0,c
  2606   0017A6  3663               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  2607   0017A8                     i2u199_44:
  2608   0017A8  2E62               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  2609   0017AA  EFD2  F00B         	goto	i2u199_45
  2610   0017AE  5061               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  2611   0017B0  6ED9               	movwf	fsr2l,c
  2612   0017B2  6ADA               	clrf	fsr2h,c
  2613   0017B4  50DF               	movf	223,w,c
  2614   0017B6  0B07               	andlw	7
  2615   0017B8  0D02               	mullw	2
  2616   0017BA  50F3               	movf	243,w,c
  2617   0017BC  0F1B               	addlw	low _lat_registers
  2618   0017BE  6ED9               	movwf	fsr2l,c
  2619   0017C0  6ADA               	clrf	fsr2h,c
  2620   0017C2  CFDE F064          	movff	postinc2,??_gpio_pin_toggle_logic+2
  2621   0017C6  CFDD F065          	movff	postdec2,??_gpio_pin_toggle_logic+3
  2622   0017CA  C064  FFD9         	movff	??_gpio_pin_toggle_logic+2,fsr2l
  2623   0017CE  C065  FFDA         	movff	??_gpio_pin_toggle_logic+3,fsr2h
  2624   0017D2  5063               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  2625   0017D4  1ADF               	xorwf	indf2,f,c
  2626   0017D6                     i2l545:
  2627   0017D6  0012               	return		;funcret
  2628   0017D8                     __end_of_gpio_pin_toggle_logic:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _RB7_ISR *****************
  2632 ;; Defined at:
  2633 ;;		line 170 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  n               1    wreg     unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  n               1    0[COMRAM] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;Total ram usage:        1 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_InterruptMangaer
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text17
  2661   00199E                     __ptext17:
  2662                           	callstack 0
  2663   00199E                     _RB7_ISR:
  2664                           	callstack 24
  2665                           
  2666                           ;incstack = 0
  2667                           ;RB7_ISR@n stored from wreg
  2668   00199E  6E61               	movwf	RB7_ISR@n^0,c
  2669   0019A0                     
  2670                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 172:     (INTCONbits.RBIF = 0);
  2671   0019A0  90F2               	bcf	242,0,c	;volatile
  2672   0019A2                     
  2673                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 176:    if(!n){
  2674   0019A2  5061               	movf	RB7_ISR@n^0,w,c
  2675   0019A4  A4D8               	btfss	status,2,c
  2676   0019A6  EFD7  F00C         	goto	i2u53_41
  2677   0019AA  EFD9  F00C         	goto	i2u53_40
  2678   0019AE                     i2u53_41:
  2679   0019AE  EFDB  F00C         	goto	i2l2092
  2680   0019B2                     i2u53_40:
  2681   0019B2  EFDB  F00C         	goto	i2l685
  2682   0019B6                     i2l2092:
  2683   0019B6                     i2l685:
  2684   0019B6  0012               	return		;funcret
  2685   0019B8                     __end_of_RB7_ISR:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _RB6_ISR *****************
  2689 ;; Defined at:
  2690 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  n               1    wreg     unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  n               1    0[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_InterruptMangaer
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text18
  2718   0019B8                     __ptext18:
  2719                           	callstack 0
  2720   0019B8                     _RB6_ISR:
  2721                           	callstack 24
  2722                           
  2723                           ;incstack = 0
  2724                           ;RB6_ISR@n stored from wreg
  2725   0019B8  6E61               	movwf	RB6_ISR@n^0,c
  2726   0019BA                     
  2727                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  2728   0019BA  90F2               	bcf	242,0,c	;volatile
  2729   0019BC                     
  2730                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 151:     if(!n){
  2731   0019BC  5061               	movf	RB6_ISR@n^0,w,c
  2732   0019BE  A4D8               	btfss	status,2,c
  2733   0019C0  EFE4  F00C         	goto	i2u52_41
  2734   0019C4  EFE6  F00C         	goto	i2u52_40
  2735   0019C8                     i2u52_41:
  2736   0019C8  EFE8  F00C         	goto	i2l2078
  2737   0019CC                     i2u52_40:
  2738   0019CC  EFE8  F00C         	goto	i2l674
  2739   0019D0                     i2l2078:
  2740   0019D0                     i2l674:
  2741   0019D0  0012               	return		;funcret
  2742   0019D2                     __end_of_RB6_ISR:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _RB5_ISR *****************
  2746 ;; Defined at:
  2747 ;;		line 121 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  n               1    wreg     unsigned char 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  n               1    0[COMRAM] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;Total ram usage:        1 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_InterruptMangaer
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text19
  2775   0019D2                     __ptext19:
  2776                           	callstack 0
  2777   0019D2                     _RB5_ISR:
  2778                           	callstack 24
  2779                           
  2780                           ;incstack = 0
  2781                           ;RB5_ISR@n stored from wreg
  2782   0019D2  6E61               	movwf	RB5_ISR@n^0,c
  2783   0019D4                     
  2784                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 123:     (INTCONbits.RBIF = 0);
  2785   0019D4  90F2               	bcf	242,0,c	;volatile
  2786   0019D6                     
  2787                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 127:     if(!n){
  2788   0019D6  5061               	movf	RB5_ISR@n^0,w,c
  2789   0019D8  A4D8               	btfss	status,2,c
  2790   0019DA  EFF1  F00C         	goto	i2u51_41
  2791   0019DE  EFF3  F00C         	goto	i2u51_40
  2792   0019E2                     i2u51_41:
  2793   0019E2  EFF5  F00C         	goto	i2l2064
  2794   0019E6                     i2u51_40:
  2795   0019E6  EFF5  F00C         	goto	i2l663
  2796   0019EA                     i2l2064:
  2797   0019EA                     i2l663:
  2798   0019EA  0012               	return		;funcret
  2799   0019EC                     __end_of_RB5_ISR:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _RB4_ISR *****************
  2803 ;; Defined at:
  2804 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  n               1    wreg     unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  n               1    0[COMRAM] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;Total ram usage:        1 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_InterruptMangaer
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text20
  2832   001982                     __ptext20:
  2833                           	callstack 0
  2834   001982                     _RB4_ISR:
  2835                           	callstack 24
  2836                           
  2837                           ;incstack = 0
  2838                           ;RB4_ISR@n stored from wreg
  2839   001982  6E61               	movwf	RB4_ISR@n^0,c
  2840   001984                     
  2841                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCONbits.RBIF = 0);
  2842   001984  90F2               	bcf	242,0,c	;volatile
  2843   001986                     
  2844                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 101:     if(!n){
  2845   001986  5061               	movf	RB4_ISR@n^0,w,c
  2846   001988  A4D8               	btfss	status,2,c
  2847   00198A  EFC9  F00C         	goto	i2u50_41
  2848   00198E  EFCB  F00C         	goto	i2u50_40
  2849   001992                     i2u50_41:
  2850   001992  EFCD  F00C         	goto	i2l2050
  2851   001996                     i2u50_40:
  2852   001996  EFCD  F00C         	goto	i2l647
  2853   00199A                     i2l2050:
  2854   00199A                     i2l647:
  2855                           
  2856                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 118:         (INTCONbits.RBIF = 0);
  2857   00199A  90F2               	bcf	242,0,c	;volatile
  2858   00199C  0012               	return		;funcret
  2859   00199E                     __end_of_RB4_ISR:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _INT2_ISR *****************
  2863 ;; Defined at:
  2864 ;;		line 81 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		None
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        0 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_InterruptMangaer
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text21
  2892   001A0A                     __ptext21:
  2893                           	callstack 0
  2894   001A0A                     _INT2_ISR:
  2895                           	callstack 24
  2896   001A0A                     
  2897                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 83:     (INTCON3bits.INT2IF = 0);
  2898   001A0A  92F0               	bcf	240,1,c	;volatile
  2899   001A0C  0012               	return		;funcret
  2900   001A0E                     __end_of_INT2_ISR:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _INT1_ISR *****************
  2904 ;; Defined at:
  2905 ;;		line 67 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		None
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_InterruptMangaer
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text22
  2933   001A0E                     __ptext22:
  2934                           	callstack 0
  2935   001A0E                     _INT1_ISR:
  2936                           	callstack 24
  2937   001A0E                     
  2938                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 69:     (INTCON3bits.INT1IF = 0);
  2939   001A0E  90F0               	bcf	240,0,c	;volatile
  2940   001A10  0012               	return		;funcret
  2941   001A12                     __end_of_INT1_ISR:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _INT0_ISR *****************
  2945 ;; Defined at:
  2946 ;;		line 53 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		None
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_InterruptMangaer
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text23
  2974   001A12                     __ptext23:
  2975                           	callstack 0
  2976   001A12                     _INT0_ISR:
  2977                           	callstack 24
  2978   001A12                     
  2979                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 55:     (INTCONbits.INT0IF = 0);
  2980   001A12  92F2               	bcf	242,1,c	;volatile
  2981   001A14  0012               	return		;funcret
  2982   001A16                     __end_of_INT0_ISR:
  2983                           	callstack 0
  2984                           
  2985                           	psect	rparam
  2986   000000                     
  2987                           	psect	temp
  2988   000071                     btemp:
  2989                           	callstack 0
  2990   000071                     	ds	1
  2991   000000                     int$flags	set	btemp
  2992   000000                     wtemp8	set	btemp+1
  2993   000000                     ttemp5	set	btemp+1
  2994   000000                     ttemp6	set	btemp+4
  2995   000000                     ttemp7	set	btemp+8
  2996                           
  2997                           	psect	config
  2998                           
  2999                           ; Padding undefined space
  3000   300000                     	org	3145728
  3001   300000  FF                 	db	255
  3002                           
  3003                           ;Config register CONFIG1H @ 0x300001
  3004                           ;	Oscillator Selection bits
  3005                           ;	OSC = HS, HS oscillator
  3006                           ;	Fail-Safe Clock Monitor Enable bit
  3007                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3008                           ;	Internal/External Oscillator Switchover bit
  3009                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3010   300001                     	org	3145729
  3011   300001  02                 	db	2
  3012                           
  3013                           ;Config register CONFIG2L @ 0x300002
  3014                           ;	Power-up Timer Enable bit
  3015                           ;	PWRT = OFF, PWRT disabled
  3016                           ;	Brown-out Reset Enable bits
  3017                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3018                           ;	Brown Out Reset Voltage bits
  3019                           ;	BORV = 1, 
  3020   300002                     	org	3145730
  3021   300002  09                 	db	9
  3022                           
  3023                           ;Config register CONFIG2H @ 0x300003
  3024                           ;	Watchdog Timer Enable bit
  3025                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3026                           ;	Watchdog Timer Postscale Select bits
  3027                           ;	WDTPS = 32768, 1:32768
  3028   300003                     	org	3145731
  3029   300003  1E                 	db	30
  3030                           
  3031                           ; Padding undefined space
  3032   300004                     	org	3145732
  3033   300004  FF                 	db	255
  3034                           
  3035                           ;Config register CONFIG3H @ 0x300005
  3036                           ;	CCP2 MUX bit
  3037                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3038                           ;	PORTB A/D Enable bit
  3039                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3040                           ;	Low-Power Timer1 Oscillator Enable bit
  3041                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3042                           ;	MCLR Pin Enable bit
  3043                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3044   300005                     	org	3145733
  3045   300005  81                 	db	129
  3046                           
  3047                           ;Config register CONFIG4L @ 0x300006
  3048                           ;	Stack Full/Underflow Reset Enable bit
  3049                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3050                           ;	Single-Supply ICSP Enable bit
  3051                           ;	LVP = OFF, Single-Supply ICSP disabled
  3052                           ;	Extended Instruction Set Enable bit
  3053                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3054                           ;	Background Debugger Enable bit
  3055                           ;	DEBUG = 0x1, unprogrammed default
  3056   300006                     	org	3145734
  3057   300006  81                 	db	129
  3058                           
  3059                           ; Padding undefined space
  3060   300007                     	org	3145735
  3061   300007  FF                 	db	255
  3062                           
  3063                           ;Config register CONFIG5L @ 0x300008
  3064                           ;	Code Protection bit
  3065                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3066                           ;	Code Protection bit
  3067                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3068                           ;	Code Protection bit
  3069                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3070                           ;	Code Protection bit
  3071                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3072   300008                     	org	3145736
  3073   300008  0F                 	db	15
  3074                           
  3075                           ;Config register CONFIG5H @ 0x300009
  3076                           ;	Boot Block Code Protection bit
  3077                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3078                           ;	Data EEPROM Code Protection bit
  3079                           ;	CPD = OFF, Data EEPROM not code-protected
  3080   300009                     	org	3145737
  3081   300009  C0                 	db	192
  3082                           
  3083                           ;Config register CONFIG6L @ 0x30000A
  3084                           ;	Write Protection bit
  3085                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3086                           ;	Write Protection bit
  3087                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3088                           ;	Write Protection bit
  3089                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3090                           ;	Write Protection bit
  3091                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3092   30000A                     	org	3145738
  3093   30000A  0F                 	db	15
  3094                           
  3095                           ;Config register CONFIG6H @ 0x30000B
  3096                           ;	Configuration Register Write Protection bit
  3097                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3098                           ;	Boot Block Write Protection bit
  3099                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3100                           ;	Data EEPROM Write Protection bit
  3101                           ;	WRTD = OFF, Data EEPROM not write-protected
  3102   30000B                     	org	3145739
  3103   30000B  E0                 	db	224
  3104                           
  3105                           ;Config register CONFIG7L @ 0x30000C
  3106                           ;	Table Read Protection bit
  3107                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3108                           ;	Table Read Protection bit
  3109                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3110                           ;	Table Read Protection bit
  3111                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3112                           ;	Table Read Protection bit
  3113                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3114   30000C                     	org	3145740
  3115   30000C  0F                 	db	15
  3116                           
  3117                           ;Config register CONFIG7H @ 0x30000D
  3118                           ;	Boot Block Table Read Protection bit
  3119                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3120   30000D                     	org	3145741
  3121   30000D  40                 	db	64
  3122                           tosu	equ	0xFFF
  3123                           tosh	equ	0xFFE
  3124                           tosl	equ	0xFFD
  3125                           stkptr	equ	0xFFC
  3126                           pclatu	equ	0xFFB
  3127                           pclath	equ	0xFFA
  3128                           pcl	equ	0xFF9
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           prodh	equ	0xFF4
  3134                           prodl	equ	0xFF3
  3135                           indf0	equ	0xFEF
  3136                           postinc0	equ	0xFEE
  3137                           postdec0	equ	0xFED
  3138                           preinc0	equ	0xFEC
  3139                           plusw0	equ	0xFEB
  3140                           fsr0h	equ	0xFEA
  3141                           fsr0l	equ	0xFE9
  3142                           wreg	equ	0xFE8
  3143                           indf1	equ	0xFE7
  3144                           postinc1	equ	0xFE6
  3145                           postdec1	equ	0xFE5
  3146                           preinc1	equ	0xFE4
  3147                           plusw1	equ	0xFE3
  3148                           fsr1h	equ	0xFE2
  3149                           fsr1l	equ	0xFE1
  3150                           bsr	equ	0xFE0
  3151                           indf2	equ	0xFDF
  3152                           postinc2	equ	0xFDE
  3153                           postdec2	equ	0xFDD
  3154                           preinc2	equ	0xFDC
  3155                           plusw2	equ	0xFDB
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    56
    Data        61
    BSS         35
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15     112
    BANK0           128     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Result@adc$adc_isr	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@adc$adc_isr	PTR FTN()void  size(2) Largest target is 0

    ADC_Select_Channel@adc$adc_isr	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_initialize@pin_obj(BANK0[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_initialize@pin_obj(BANK0[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_toggle_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_turn_toggle@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_initialize@pin_obj(BANK0[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    INT0_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Src@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_INTERRUPT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_INTERRUPT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    ISR_TIMER0	PTR FTN()void  size(2) Largest target is 1
		 -> isr(), NULL(), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllll[1]), LATB(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), 
		 -> LATE(BITBIGSFRlllh[1]), 

    led_initialize@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_turn_toggle@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), 
		 -> PORTE(BITBIGSFRllll[1]), 

    RB4_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_INTERRUPTHANDLERHIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_INTERRUPTHANDLERLOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1273$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S1389$EXT_INTERRUPT_HANDLER_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1389$EXT_INTERRUPT_HANDLER_LOW	PTR FTN()void  size(2) Largest target is 0

    S1791$TIMER0_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> isr(), 

    S2440$buffer	PTR unsigned char  size(2) Largest target is 0

    S2440$source	PTR const unsigned char  size(2) Largest target is 0

    S714$adc_isr	PTR FTN()void  size(2) Largest target is 0

    Set_Interrupt_Handler@int_obj$EXT_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    timer$TIMER0_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> isr(), 

    TIMER0_INIT@timer	PTR const struct . size(1) Largest target is 8
		 -> timer(COMRAM[8]), 

    TIMER0_INIT@timer$TIMER0_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> isr(), 

    TIMER0_MODE_SELECT@timer	PTR const struct . size(1) Largest target is 8
		 -> timer(COMRAM[8]), 

    TIMER0_MODE_SELECT@timer$TIMER0_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> isr(), 

    TIMER0_PRESCALER_CFG@timer	PTR const struct . size(1) Largest target is 8
		 -> timer(COMRAM[8]), 

    TIMER0_PRESCALER_CFG@timer$TIMER0_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> isr(), 

    TIMER0_Read_Value@timer	PTR const struct . size(1) Largest target is 8
		 -> timer(COMRAM[8]), 

    TIMER0_Read_Value@var	PTR unsigned short  size(1) Largest target is 2
		 -> value(COMRAM[2]), 

    TIMER0_Size_SELECT@timer	PTR const struct . size(1) Largest target is 8
		 -> timer(COMRAM[8]), 

    TIMER0_Size_SELECT@timer$TIMER0_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> isr(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _gpio_pin_initialize->_gpio_pin_direction_intialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _TIMER0_INIT->_TIMER0_MODE_SELECT
    _TIMER0_INIT->_TIMER0_PRESCALER_CFG
    _TIMER0_INIT->_TIMER0_Size_SELECT

Critical Paths under _InterruptMangaer in COMRAM

    _isr->_led_turn_toggle
    _led_turn_toggle->_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    _Ecu_initialize->_led_initialize
    _led_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _TIMER0_INIT->_TIMER0_PRESCALER_CFG

Critical Paths under _InterruptMangaer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptMangaer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptMangaer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptMangaer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptMangaer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptMangaer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptMangaer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptMangaer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptMangaer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptMangaer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptMangaer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptMangaer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptMangaer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptMangaer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptMangaer in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptMangaer in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9764
                        _TIMER0_INIT
                  _TIMER0_Read_Value
             _application_initialize
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0    8507
                     _Ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _Ecu_initialize                                       0     0      0    8507
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       4     3      1    8507
                                              9 BANK0      3     2      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  2     1      1    8201
                                              7 BANK0      2     1      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    5983
                                             14 COMRAM     1     1      0
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     617
                                             14 COMRAM     1     0      1
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Read_Value                                    7     5      2     329
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INIT                                          4     3      1     928
                                              1 BANK0      3     2      1
                 _TIMER0_MODE_SELECT
               _TIMER0_PRESCALER_CFG
                 _TIMER0_Size_SELECT
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Size_SELECT                                   2     1      1     151
                                             14 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _TIMER0_PRESCALER_CFG                                 3     2      1     230
                                             14 COMRAM     1     0      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_MODE_SELECT                                   2     1      1     196
                                             14 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptMangaer                                     6     6      0     471
                                              8 COMRAM     6     6      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0     351
                                NULL *
                                _isr *
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0     351
                    _led_turn_toggle
 ---------------------------------------------------------------------------------
 (9) _led_turn_toggle                                      4     3      1     351
                                              5 COMRAM     3     2      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (10) _gpio_pin_toggle_logic                               6     5      1     150
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIMER0_INIT
     _TIMER0_MODE_SELECT
     _TIMER0_PRESCALER_CFG
     _TIMER0_Size_SELECT
   _TIMER0_Read_Value
   _application_initialize
     _Ecu_initialize
       _led_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic

 _InterruptMangaer (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
     NULL(Fake) *
     _isr *
       _led_turn_toggle
         _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C       C       5        9.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      70       1       88.9%
BITBIGSFRhllhh      18      0       0      37        0.0%
BITBIGSFRlhh        15      0       0      39        0.0%
BITBIGSFRhlll       10      0       0      38        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhll        8      0       0      40        0.0%
BITBIGSFRllhh        6      0       0      41        0.0%
BITBIGSFRlllh        4      0       0      42        0.0%
BITBIGSFRllll        4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7C      44        0.0%
DATA                 0      0      7C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 13 08:21:57 2024

                     ??_InterruptMangaer 0069                        ??_led_turn_toggle 0067  
                  _INT0_INTERRUPTHANDLER 0056                                      l330 19F6  
                                    l245 1648                                      l249 169E  
                                    l516 142C                                      l533 1522  
                                    l550 18B2                                      l914 153A  
                                    l931 186E                                      l940 1824  
                                    l916 15AA                                      l953 1630  
                                    l929 1844                                      l962 170A  
                                    l893 1A08                                      _isr 19F8  
                                    _ret 0070                      led_initialize@F3062 005E  
                                    tosl 0FFD                                      wreg 0FE8  
             __end_of_TIMER0_MODE_SELECT 1632                          __end_of_RB4_ISR 199E  
                        __end_of_RB5_ISR 19EC                          __end_of_RB6_ISR 19D2  
                        __end_of_RB7_ISR 19B8                                     l3400 1804  
                                   l3410 15AC                                     l3402 180A  
                                   l4202 142E                                     l3420 15F6  
                                   l3412 15BC                                     l3404 1822  
                                   l4204 1444                                     l4212 14F6  
                                   l3422 15F8                                     l3414 15C0  
                                   l4230 13AC                                     l4222 1316  
                                   l4206 144C                                     l4214 1520  
                                   l3424 1610                                     l3416 15D8  
                                   l4224 132C                                     l4208 14A4  
                                   l4240 1870                                     l3426 1616  
                                   l3418 15DE                                     l4234 13FE  
                                   l4226 134C                                     l5018 150A  
                                   l4242 1886                                     l4250 1632  
                                   l3428 162E                                     l4228 1354  
                                   l4236 142A                                     l4244 188E  
                                   l4260 1696                                     l4252 1644  
                                   l4350 16CE                                     l4246 18AE  
                                   l4254 164C                                     l4342 19EC  
                                   l4352 16D4                                     l4344 16A0  
                                   l4256 1682                                     l4354 16EE  
                                   l4346 16B0                                     l3394 17D8  
                                   l4258 1684                                     l4356 16F0  
                                   l4348 16B4                                     l3396 17E8  
                                   l4460 1536                                     l3398 17EC  
                                   l4470 1592                                     l4462 153C  
                                   l4480 15A8                                     l4472 1594  
                                   l4464 1554                                     l4456 1A02  
                                   l4474 1596                                     l4466 1572  
                                   l4458 1524                                     l4476 15A4  
                                   l4468 1580                                     l4484 1826  
                                   l4478 15A6                                     l4486 1840  
                                   l4488 184C                                     ?_isr 0061  
                                   l4992 195E                                     l4994 1962  
                                   l4996 196C                                     STR_1 103C  
                                   STR_2 1039                                     u2110 17E8  
                                   u2111 17E4                                     u2120 1804  
                                   u2121 1800                                     u2130 1822  
                                   u2131 181E                                     u2140 15BC  
                                   u2141 15B8                                     _LATA 0F89  
                                   u2150 15D8                                     _LATB 0F8A  
                                   u2151 15D4                                     _LATC 0F8B  
                                   u2160 15F6                                     _LATD 0F8C  
                                   u2161 15F2                                     _LATE 0F8D  
                                   u2170 1610                                     u2171 160C  
                                   u2180 162E                                     u3220 132C  
                                   u3204 146A                                     u2181 162A  
                                   u3221 1328                                     u3205 1466  
                                   u3230 134C                                     u3214 14C2  
                                   u3231 1348                                     u3215 14BE  
                                   u3500 1536                                     u3260 1414  
                                   u3244 1372                                     u3501 1532  
                                   u3261 140E                                     u3245 136E  
                                   u3510 1840                                     u3254 13CA  
                                   u3190 1444                                     u3270 1886  
                                   u3511 183C                                     u3255 13C6  
                                   u3191 1440                                     u3271 1882  
                                   u3280 1644                                     u3281 1640  
                                   u3370 16B0                                     u3266 1416  
                                   u3371 16AC                                     u3380 16CE  
                                   u3381 16CA                                     u3390 16EE  
                                   u3391 16EA                                     u3295 1692  
                                   u3297 1696                                     _led1 003D  
                                   _led2 0034                                     _led3 0033  
                                   _main 195E                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     btemp 0071  
                 __end_of_led_initialize 16A0                                     prodh 0FF4  
                                   prodl 0FF3                                     start 000E  
                           ___param_bank 0000                   ?_gpio_pin_toggle_logic 0061  
                   _gpio_pin_write_logic 142E                                    ??_isr 0069  
              TIMER0_PRESCALER_CFG@timer 006F                         __end_of_INT0_ISR 1A16  
                       __end_of_INT1_ISR 1A12                         __end_of_INT2_ISR 1A0E  
                                  ?_main 0061                 ??_application_initialize 0070  
                                  _EEADR 0FA9                                    _RB4_F 0032  
                                  _RB5_F 0031                                    _RB6_F 0030  
                                  _RB7_F 002F                                    i2l270 1774  
                                  i2l266 1720                                    i2l631 1A14  
                                  i2l641 1A0C                                    i2l545 17D6  
                                  i2l636 1A10                                    i2l652 199C  
                                  i2l830 10FE                                    i2l647 199A  
                                  i2l663 19EA                                    i2l840 1252  
                                  i2l832 1142                                    i2l824 107A  
                                  i2l674 19D0                                    i2l842 1296  
                                  i2l834 1186                                    i2l826 109A  
                                  i2l844 12DA                                    i2l836 11CA  
                                  i2l828 10BA                                    i2l685 19B6  
                                  i2l838 120E                                    i2l847 12FA  
                                  i2l878 1A00                                    i2l967 195C  
                    relay_turn_off@F3065 0058                                    _TMR0H 0FD7  
                                  _TMR0L 0FD6                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                         __end_of_TMR0_ISR 195E  
                                  _value 005F                                    _timer 0035  
                                  pclath 0FFA                                    pclatu 0FFB  
                                  tablat 0FF5                                    ttemp5 0072  
                                  ttemp6 0075                                    ttemp7 0079  
                                  status 0FD8                                    wtemp8 0072  
                        ?_led_initialize 0089                  _RB4_INTERRUPTHANDLERLOW 004E  
                _RB7_INTERRUPTHANDLERLOW 0042                          __initialization 18F2  
                           __end_of_main 1982                    ?_gpio_pin_write_logic 0080  
                          _lat_registers 001B                             ?_TIMER0_INIT 0081  
                                 ??_main 0070                           _Ecu_initialize 19EC  
                          __activetblptr 0003                         led_turn_on@F3067 005D  
                              ??_RB4_ISR 0061                                ??_RB5_ISR 0061  
                              ??_RB6_ISR 0061                                ??_RB7_ISR 0061  
                                 _ADRESH 0FC4                                   _EEADRH 0FAA  
                                 _ADRESL 0FC3                                   _EEDATA 0FA8  
                                 _EECON2 0FA7                                   i2l2030 1A0E  
                                 i2l2024 1A12                                   i2l2050 199A  
                                 i2l2042 1984                                   i2l2036 1A0A  
                                 i2l2044 1986                                   i2l2070 19BA  
                                 i2l2064 19EA                                   i2l2056 19D4  
                                 i2l2072 19BC                                   i2l2058 19D6  
                                 i2l2092 19B6                                   i2l2084 19A0  
                                 i2l3300 171C                                   i2l4100 1088  
                                 i2l2078 19D0                                   i2l2086 19A2  
                                 i2l3302 1724                                   i2l4110 10D6  
                                 i2l4102 1096                                   i2l3304 175A  
                                 i2l4120 111A                                   i2l4112 10E4  
                                 i2l4104 10A8                                   i2l3306 175C  
                                 i2l4130 115E                                   i2l4122 1128  
                                 i2l4114 10F4                                   i2l4106 10B6  
                                 i2l3308 176C                                   i2l4140 11A2  
                                 i2l4132 116C                                   i2l4124 1138  
                                 i2l4116 10F8                                   i2l4108 10C8  
                                 i2l4150 11E6                                   i2l4142 11B0  
                                 i2l4134 117C                                   i2l4126 113C  
                                 i2l4118 110C                                   i2l3280 178A  
                                 i2l4160 122A                                   i2l4152 11F4  
                                 i2l4144 11C0                                   i2l4136 1180  
                                 i2l4128 1150                                   i2l4170 126E  
                                 i2l4162 1238                                   i2l4154 1204  
                                 i2l4146 11C4                                   i2l4138 1194  
                                 i2l3276 1776                                   i2l4180 12B2  
                                 i2l4172 127C                                   i2l4164 1248  
                                 i2l4156 1208                                   i2l4148 11D8  
                                 i2l3278 1786                                   i2l3550 192A  
                                 i2l4190 12F6                                   i2l4182 12C0  
                                 i2l4174 128C                                   i2l4166 124C  
                                 i2l4158 121C                                   i2l4094 105A  
                                 i2l3392 19F8                                   i2l3552 192E  
                                 i2l4184 12D0                                   i2l4176 1290  
                                 i2l4168 1260                                   i2l4096 1068  
                                 i2l3298 170C                                   i2l3554 1932  
                                 i2l4186 12D4                                   i2l4178 12A4  
                                 i2l4098 1076                                   i2l3556 1944  
                                 i2l3548 1928                                   i2l4188 12E8  
                  _INT1_INTERRUPTHANDLER 0054         gpio_pin_toggle_logic@_pin_config 0061  
                 __end_of_Ecu_initialize 19F8                                   clear_0 1918  
                  led_initialize@pin_obj 008B                                   isa$std 0001  
gpio_pin_direction_intialize@_pin_config 006F                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 191E  
                              ?_INT0_ISR 0061                                ?_INT1_ISR 0061  
                              ?_INT2_ISR 0061                 _RB4_INTERRUPTHANDLERHIGH 0050  
                          ___rparam_used 0001                 _RB7_INTERRUPTHANDLERHIGH 0044  
                      led_initialize@led 0089                          _led_turn_toggle 170C  
                 ??_gpio_pin_write_logic 0082                           __pcstackCOMRAM 0061  
                              ?_TMR0_ISR 0061                          ?_Ecu_initialize 0061  
                             ??_INT0_ISR 0061                               ??_INT1_ISR 0061  
                             ??_INT2_ISR 0061                   _application_initialize 1A02  
                             __pnvCOMRAM 0070                  ??_gpio_pin_toggle_logic 0062  
                     _TIMER0_MODE_SELECT 15AC                               ??_TMR0_ISR 0069  
                      led_turn_off@F3072 005C                      ?_TIMER0_MODE_SELECT 006F  
                  _INT2_INTERRUPTHANDLER 0052                                  _RB4_ISR 1982  
                                _RB5_ISR 19D2                                  _RB6_ISR 19B8  
                                _RB7_ISR 199E                            _keypad_values 0001  
                   led_turn_toggle@F3077 005B                                  i2u50_40 1996  
                                i2u50_41 1992                                  i2u51_40 19E6  
                                i2u51_41 19E2                                  i2u52_40 19CC  
                                i2u52_41 19C8                                  i2u53_40 19B2  
                                i2u53_41 19AE                     ??_TIMER0_MODE_SELECT 0070  
                       ??_led_initialize 008A                TIMER0_Read_Value@high_reg 0085  
                __end_of_led_turn_toggle 1776                           _tris_registers 0025  
                                __Hparam 0000                                  __Lparam 0000  
                    _gpio_pin_initialize 1870                             __psmallconst 1000  
                                __pcinit 18F2                                  __ramtop 1000  
                             _customChar 1031                                  __ptext0 195E  
                                __ptext1 1A02                                  __ptext2 19EC  
                                __ptext3 1632                                  __ptext4 1870  
                                __ptext5 142E                                  __ptext6 1316  
                                __ptext7 1826                                  __ptext8 1524  
                                __ptext9 17D8                                _T0CONbits 0FD5  
           __end_of_TIMER0_PRESCALER_CFG 170C                                  _preload 003E  
                   ?_gpio_pin_initialize 0087                           __pintcode_body 1040  
                TIMER0_MODE_SELECT@timer 006F                     end_of_initialization 191E  
                                int_func 1040                  _RB5_INTERRUPTHANDLERLOW 004A  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                              _PORTBbits 0F81                         _InterruptMangaer 0008  
   __end_of_gpio_pin_direction_intialize 142E             _gpio_pin_direction_intialize 1316  
                  ??_gpio_pin_initialize 0070                         ?_led_turn_toggle 0066  
                       ??_Ecu_initialize 0070                       relay_turn_on@F3060 0059  
                          __pidataCOMRAM 18B4                      start_initialization 18F2  
                 led_turn_toggle@pin_obj 0068                              __end_of_isr 1A02  
          ?_gpio_pin_direction_intialize 006F                  ?_application_initialize 0061  
               _RB6_INTERRUPTHANDLERHIGH 0048                     _TIMER0_PRESCALER_CFG 16A0  
          __end_of_gpio_pin_toggle_logic 17D8                                 ?_RB4_ISR 0061  
                               ?_RB5_ISR 0061                                 ?_RB6_ISR 0061  
                               ?_RB7_ISR 0061                              __pbssCOMRAM 003E  
                          __pcstackBANK0 0080                                 RB4_ISR@n 0061  
                               RB5_ISR@n 0061                                 RB6_ISR@n 0061  
         __end_of_application_initialize 1A0A                                 RB7_ISR@n 0061  
             __end_of_TIMER0_Size_SELECT 1826          gpio_pin_direction_intialize@ret 0085  
                  ?_TIMER0_PRESCALER_CFG 006F                                __pintcode 0008  
        gpio_pin_write_logic@_pin_config 0080                gpio_pin_write_logic@logic 0081  
                          ??_TIMER0_INIT 0082                              __smallconst 1000  
                    __end_of_customChar2 1031                      __end_of_customChar3 1029  
                    __end_of_customChar4 1021                      __end_of_customChar5 1019  
                    __end_of_customChar6 1011                      __end_of_customChar7 1009  
         ??_gpio_pin_direction_intialize 0080                                 _INT0_ISR 1A12  
                               _INT1_ISR 1A0E                                 _INT2_ISR 1A0A  
               __end_of_InterruptMangaer 1316                                 _PIE1bits 0F9D  
                               i2u202_40 171C                                 i2u202_41 1718  
                               i2u203_45 176A                                 i2u203_47 176C  
                               i2u300_40 11C0                                 i2u300_41 11BC  
                               i2u301_40 11D8                                 i2u301_41 11D4  
                               i2u310_40 126E                                 i2u302_40 11E6  
                               i2u310_41 126A                                 i2u302_41 11E2  
                               i2u311_40 127C                                 i2u303_40 11F4  
                               i2u311_41 1278                                 i2u303_41 11F0  
                               i2u232_40 1944                                 i2u312_40 128C  
                               i2u304_40 1204                                 i2u232_41 1940  
                               i2u312_41 1288                                 i2u304_41 1200  
                               i2u313_40 12A4                                 i2u305_40 121C  
                               i2u313_41 12A0                                 i2u305_41 1218  
                               i2u233_48 194A                                 i2u314_40 12B2  
                               i2u306_40 122A                                 i2u233_49 195C  
                               i2u314_41 12AE                                 i2u306_41 1226  
                               i2u315_40 12C0                                 i2u307_40 1238  
                               i2u315_41 12BC                                 i2u307_41 1234  
                               i2u316_40 12D0                                 i2u308_40 1248  
                               i2u316_41 12CC                                 i2u308_41 1244  
                               i2u317_40 12E8                                 i2u309_40 1260  
                               i2u317_41 12E4                                 i2u309_41 125C  
                               i2u318_40 12F6                                 i2u318_41 12F2  
                               i2u280_40 1076                                 i2u280_41 1072  
                               i2u281_40 1088                                 i2u281_41 1084  
                               i2u290_40 111A                                 i2u282_40 1096  
                               i2u290_41 1116                                 i2u282_41 1092  
                               i2u291_40 1128                                 i2u283_40 10A8  
                               i2u291_41 1124                                 i2u283_41 10A4  
                               i2u292_40 1138                                 i2u284_40 10B6  
                               i2u292_41 1134                                 i2u284_41 10B2  
                               i2u293_40 1150                                 i2u285_40 10C8  
                               i2u293_41 114C                                 i2u285_41 10C4  
                               i2u198_40 1786                                 i2u294_40 115E  
                               i2u286_40 10D6                                 i2u198_41 1782  
                               i2u294_41 115A                                 i2u286_41 10D2  
                               i2u295_40 116C                                 i2u287_40 10E4  
                               i2u279_40 1068                                 i2u295_41 1168  
                               i2u287_41 10E0                                 i2u279_41 1064  
                               i2u199_44 17A8                                 i2u199_45 17A4  
                               i2u296_40 117C                                 i2u288_40 10F4  
                               i2u296_41 1178                                 i2u288_41 10F0  
                               i2u297_40 1194                                 i2u289_40 110C  
                               i2u297_41 1190                                 i2u289_41 1108  
                               i2u298_40 11A2                                 i2u298_41 119E  
                               i2u299_40 11B0                                 i2u299_41 11AC  
                               _TMR0_ISR 1928                               _ADCON0bits 0FC2  
                             _ADCON1bits 0FC1                               _ADCON2bits 0FC0  
                 gpio_pin_initialize@ret 0088                      __end_of_TIMER0_INIT 15AC  
                gpio_pin_write_logic@ret 006F                              _INTCON2bits 0FF1  
                            _INTCON3bits 0FF0                                copy_data0 1906  
              relay_initialization@F3055 005A                   ??_TIMER0_PRESCALER_CFG 0080  
                             _EECON1bits 0FA6                                 __Hrparam 0000  
                _RB6_INTERRUPTHANDLERLOW 0046                                 __Lrparam 0000  
                       TIMER0_INIT@timer 0081              __end_of_gpio_pin_initialize 18B4  
         gpio_pin_initialize@_pin_config 0087                              _customChar2 1029  
                            _customChar3 1021                              _customChar4 1019  
                            _customChar5 1011                              _customChar6 1009  
                            _customChar7 1001                                 __ptext10 16A0  
                               __ptext11 15AC                                 __ptext20 1982  
                               __ptext21 1A0A                                 __ptext13 1928  
                               __ptext22 1A0E                                 __ptext14 19F8  
                               __ptext23 1A12                                 __ptext15 170C  
                               __ptext16 1776                                 __ptext17 199E  
                               __ptext18 19B8                                 __ptext19 19D2  
                     led_turn_toggle@led 0066                       __end_of_customChar 1039  
                               isa$xinst 0000                                 int$flags 0071  
                            _TIMER0_INIT 1524                               _INTCONbits 0FF2  
                      _TIMER0_Read_Value 1826             __end_of_gpio_pin_write_logic 1524  
               TIMER0_Read_Value@low_reg 0084                       ?_TIMER0_Read_Value 0080  
                               intlevel2 0000                 _RB5_INTERRUPTHANDLERHIGH 004C  
                    ??_TIMER0_Read_Value 0082                               _ISR_TIMER0 0040  
                  _gpio_pin_toggle_logic 1776                       _TIMER0_Size_SELECT 17D8  
              __end_of_TIMER0_Read_Value 1870                      ?_TIMER0_Size_SELECT 006F  
                         _port_registers 0011                   TIMER0_Read_Value@timer 0080  
                TIMER0_Size_SELECT@timer 006F                     ??_TIMER0_Size_SELECT 0070  
                   TIMER0_Read_Value@var 0081                        ?_InterruptMangaer 0061  
                         _led_initialize 1632  
