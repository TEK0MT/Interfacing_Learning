

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 16 00:48:43 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 17/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4620 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   001158                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _port_registers
    61   001158  80                 	db	128
    62   001159  0F                 	db	15
    63   00115A  81                 	db	129
    64   00115B  0F                 	db	15
    65   00115C  82                 	db	130
    66   00115D  0F                 	db	15
    67   00115E  83                 	db	131
    68   00115F  0F                 	db	15
    69   001160  84                 	db	132
    70   001161  0F                 	db	15
    71                           
    72                           ;initializer for _lat_registers
    73   001162  89                 	db	137
    74   001163  0F                 	db	15
    75   001164  8A                 	db	138
    76   001165  0F                 	db	15
    77   001166  8B                 	db	139
    78   001167  0F                 	db	15
    79   001168  8C                 	db	140
    80   001169  0F                 	db	15
    81   00116A  8D                 	db	141
    82   00116B  0F                 	db	15
    83                           
    84                           ;initializer for _tris_registers
    85   00116C  92                 	db	146
    86   00116D  0F                 	db	15
    87   00116E  93                 	db	147
    88   00116F  0F                 	db	15
    89   001170  94                 	db	148
    90   001171  0F                 	db	15
    91   001172  95                 	db	149
    92   001173  0F                 	db	15
    93   001174  96                 	db	150
    94   001175  0F                 	db	15
    95                           
    96                           ;initializer for _btn_1
    97   001176  43                 	db	67
    98                           
    99                           ;initializer for _led3
   100   001177  12                 	db	18
   101                           
   102                           ;initializer for _led2
   103   001178  0A                 	db	10
   104                           
   105                           ;initializer for _led1
   106   001179  02                 	db	2
   107                           
   108                           	psect	nvCOMRAM
   109   00002C                     __pnvCOMRAM:
   110                           	callstack 0
   111   00002C                     _ret:
   112                           	callstack 0
   113   00002C                     	ds	1
   114   000000                     _PORTE	set	3972
   115   000000                     _PORTD	set	3971
   116   000000                     _PORTC	set	3970
   117   000000                     _PORTB	set	3969
   118   000000                     _PORTA	set	3968
   119   000000                     _LATA	set	3977
   120   000000                     _TRISA	set	3986
   121   000000                     _TRISE	set	3990
   122   000000                     _TRISD	set	3989
   123   000000                     _TRISC	set	3988
   124   000000                     _TRISB	set	3987
   125   000000                     _LATE	set	3981
   126   000000                     _LATD	set	3980
   127   000000                     _LATC	set	3979
   128   000000                     _LATB	set	3978
   129                           
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133   00112A                     __pcinit:
   134                           	callstack 0
   135   00112A                     start_initialization:
   136                           	callstack 0
   137   00112A                     __initialization:
   138                           	callstack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (34 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142   00112A  0E58               	movlw	low __pidataCOMRAM
   143   00112C  6EF6               	movwf	tblptrl,c
   144   00112E  0E11               	movlw	high __pidataCOMRAM
   145   001130  6EF7               	movwf	tblptrh,c
   146   001132  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147   001134  6EF8               	movwf	tblptru,c
   148   001136  EE00  F001         	lfsr	0,__pdataCOMRAM
   149   00113A  EE10 F022          	lfsr	1,34
   150   00113E                     copy_data0:
   151   00113E  0009               	tblrd		*+
   152   001140  CFF5 FFEE          	movff	tablat,postinc0
   153   001144  50E5               	movf	postdec1,w,c
   154   001146  50E1               	movf	fsr1l,w,c
   155   001148  E1FA               	bnz	copy_data0
   156                           
   157                           ; Clear objects allocated to COMRAM (2 bytes)
   158   00114A  6A2B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   159   00114C  6A2A               	clrf	__pbssCOMRAM& (0+255),c
   160   00114E                     end_of_initialization:
   161                           	callstack 0
   162   00114E                     __end_of__initialization:
   163                           	callstack 0
   164   00114E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165   001150  6EF8               	movwf	tblptru,c
   166   001152  0100               	movlb	0
   167   001154  EF01  F008         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170   00002A                     __pbssCOMRAM:
   171                           	callstack 0
   172   00002A                     _btn_status:
   173                           	callstack 0
   174   00002A                     	ds	1
   175   00002B                     _portc_direction:
   176                           	callstack 0
   177   00002B                     	ds	1
   178                           
   179                           	psect	dataCOMRAM
   180   000001                     __pdataCOMRAM:
   181                           	callstack 0
   182   000001                     _port_registers:
   183                           	callstack 0
   184   000001                     	ds	10
   185   00000B                     _lat_registers:
   186                           	callstack 0
   187   00000B                     	ds	10
   188   000015                     _tris_registers:
   189                           	callstack 0
   190   000015                     	ds	10
   191   00001F                     _btn_1:
   192                           	callstack 0
   193   00001F                     	ds	1
   194   000020                     _led3:
   195                           	callstack 0
   196   000020                     	ds	1
   197   000021                     _led2:
   198                           	callstack 0
   199   000021                     	ds	1
   200   000022                     _led1:
   201                           	callstack 0
   202   000022                     	ds	1
   203                           
   204                           	psect	cstackCOMRAM
   205   000023                     __pcstackCOMRAM:
   206                           	callstack 0
   207   000023                     gpio_port_direction_initialize@direction:
   208                           	callstack 0
   209   000023                     gpio_port_get_direction_status@direction_status:
   210                           	callstack 0
   211   000023                     gpio_port_write_logic@logic:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x0
   215   000023                     	ds	1
   216   000024                     ??_gpio_port_direction_initialize:
   217   000024                     ??_gpio_port_write_logic:
   218   000024                     gpio_port_get_direction_status@ret:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x1
   222   000024                     	ds	1
   223   000025                     gpio_port_get_direction_status@port:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x2
   227   000025                     	ds	1
   228   000026                     gpio_port_direction_initialize@ret:
   229                           	callstack 0
   230   000026                     gpio_port_write_logic@ret:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x3
   234   000026                     	ds	1
   235   000027                     gpio_port_direction_initialize@port:
   236                           	callstack 0
   237   000027                     gpio_port_write_logic@port:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x4
   241   000027                     	ds	1
   242   000028                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x5
   245   000028                     	ds	2
   246                           
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   249 ;;
   250 ;; *************** function _main *****************
   251 ;; Defined at:
   252 ;;		line 41 in file "application.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  2  139[None  ] int 
   259 ;; Registers used:
   260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;Total ram usage:        2 bytes
   271 ;; Hardware stack levels required when called: 2
   272 ;; This function calls:
   273 ;;		_application_initialize
   274 ;;		_gpio_port_get_direction_status
   275 ;;		_gpio_port_write_logic
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text0
   282   001002                     __ptext0:
   283                           	callstack 0
   284   001002                     _main:
   285                           	callstack 29
   286   001002                     
   287                           ;application.c: 42:     application_initialize();
   288   001002  ECBD  F008         	call	_application_initialize	;wreg free
   289   001006                     l1012:
   290                           
   291                           ;application.c: 44:         ret = gpio_port_get_direction_status(PORTC_INDEX,&portc_dire
      +                          ction);
   292   001006  0E2B               	movlw	low _portc_direction
   293   001008  6E23               	movwf	gpio_port_get_direction_status@direction_status^0,c
   294   00100A  0E02               	movlw	2
   295   00100C  EC2F  F008         	call	_gpio_port_get_direction_status
   296   001010  6E2C               	movwf	_ret^0,c
   297   001012                     
   298                           ;application.c: 45:         ret = gpio_port_write_logic(PORTC_INDEX,0xFF);
   299   001012  0EFF               	movlw	255
   300   001014  6E23               	movwf	gpio_port_write_logic@logic^0,c
   301   001016  0E02               	movlw	2
   302   001018  EC53  F008         	call	_gpio_port_write_logic
   303   00101C  6E2C               	movwf	_ret^0,c
   304   00101E                     
   305                           ;application.c: 46:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   306   00101E  0E06               	movlw	6
   307   001020  6E29               	movwf	(??_main+1)^0,c
   308   001022  0E13               	movlw	19
   309   001024  6E28               	movwf	??_main^0,c
   310   001026  0EAE               	movlw	174
   311   001028                     u287:
   312   001028  2EE8               	decfsz	wreg,f,c
   313   00102A  D7FE               	bra	u287
   314   00102C  2E28               	decfsz	??_main^0,f,c
   315   00102E  D7FC               	bra	u287
   316   001030  2E29               	decfsz	(??_main+1)^0,f,c
   317   001032  D7FA               	bra	u287
   318   001034                     
   319                           ;application.c: 47:         ret = gpio_port_write_logic(PORTC_INDEX,GPIO_LOW);
   320   001034  0E00               	movlw	0
   321   001036  6E23               	movwf	gpio_port_write_logic@logic^0,c
   322   001038  0E02               	movlw	2
   323   00103A  EC53  F008         	call	_gpio_port_write_logic
   324   00103E  6E2C               	movwf	_ret^0,c
   325   001040                     
   326                           ;application.c: 48:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   327   001040  0E06               	movlw	6
   328   001042  6E29               	movwf	(??_main+1)^0,c
   329   001044  0E13               	movlw	19
   330   001046  6E28               	movwf	??_main^0,c
   331   001048  0EAE               	movlw	174
   332   00104A                     u297:
   333   00104A  2EE8               	decfsz	wreg,f,c
   334   00104C  D7FE               	bra	u297
   335   00104E  2E28               	decfsz	??_main^0,f,c
   336   001050  D7FC               	bra	u297
   337   001052  2E29               	decfsz	(??_main+1)^0,f,c
   338   001054  D7FA               	bra	u297
   339   001056  EF03  F008         	goto	l1012
   340   00105A  EF00  F000         	goto	start
   341   00105E                     __end_of_main:
   342                           	callstack 0
   343                           
   344 ;; *************** function _gpio_port_write_logic *****************
   345 ;; Defined at:
   346 ;;		line 211 in file "MCAL_Layer/GPIO/hal_gpio.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;  port            1    wreg     const enum E2832
   349 ;;  logic           1    0[COMRAM] unsigned char 
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  port            1    4[COMRAM] const enum E2832
   352 ;;  ret             1    3[COMRAM] unsigned char 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      unsigned char 
   355 ;; Registers used:
   356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   362 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;Total ram usage:        5 bytes
   367 ;; Hardware stack levels used: 1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376   0010A6                     __ptext1:
   377                           	callstack 0
   378   0010A6                     _gpio_port_write_logic:
   379                           	callstack 30
   380                           
   381                           ;incstack = 0
   382                           ;gpio_port_write_logic@port stored from wreg
   383   0010A6  6E27               	movwf	gpio_port_write_logic@port^0,c
   384   0010A8                     
   385                           ;MCAL_Layer/GPIO/hal_gpio.c: 212:     std_ReturnType ret = (std_ReturnType)0x01;
   386   0010A8  0E01               	movlw	1
   387   0010AA  6E26               	movwf	gpio_port_write_logic@ret^0,c
   388   0010AC                     
   389                           ;MCAL_Layer/GPIO/hal_gpio.c: 213:     if(port > 5 - 1){
   390   0010AC  0E04               	movlw	4
   391   0010AE  6427               	cpfsgt	gpio_port_write_logic@port^0,c
   392   0010B0  EF5C  F008         	goto	u271
   393   0010B4  EF5E  F008         	goto	u270
   394   0010B8                     u271:
   395   0010B8  EF62  F008         	goto	l1002
   396   0010BC                     u270:
   397   0010BC                     
   398                           ;MCAL_Layer/GPIO/hal_gpio.c: 214:         ret = (std_ReturnType)0x00;
   399   0010BC  0E00               	movlw	0
   400   0010BE  6E26               	movwf	gpio_port_write_logic@ret^0,c
   401                           
   402                           ;MCAL_Layer/GPIO/hal_gpio.c: 215:     }
   403   0010C0  EF72  F008         	goto	l1004
   404   0010C4                     l1002:
   405                           
   406                           ;MCAL_Layer/GPIO/hal_gpio.c: 217:         *lat_registers[port] = logic;
   407   0010C4  5027               	movf	gpio_port_write_logic@port^0,w,c
   408   0010C6  0D02               	mullw	2
   409   0010C8  50F3               	movf	243,w,c
   410   0010CA  0F0B               	addlw	low _lat_registers
   411   0010CC  6ED9               	movwf	fsr2l,c
   412   0010CE  6ADA               	clrf	fsr2h,c
   413   0010D0  CFDE F024          	movff	postinc2,??_gpio_port_write_logic
   414   0010D4  CFDD F025          	movff	postdec2,??_gpio_port_write_logic+1
   415   0010D8  C024  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   416   0010DC  C025  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   417   0010E0  C023  FFDF         	movff	gpio_port_write_logic@logic,indf2
   418   0010E4                     l1004:
   419                           
   420                           ;MCAL_Layer/GPIO/hal_gpio.c: 219:     return ret;
   421   0010E4  5026               	movf	gpio_port_write_logic@ret^0,w,c
   422   0010E6  0012               	return		;funcret
   423   0010E8                     __end_of_gpio_port_write_logic:
   424                           	callstack 0
   425                           
   426 ;; *************** function _gpio_port_get_direction_status *****************
   427 ;; Defined at:
   428 ;;		line 173 in file "MCAL_Layer/GPIO/hal_gpio.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  port            1    wreg     const enum E2832
   431 ;;  direction_st    1    0[COMRAM] PTR enum E2818
   432 ;;		 -> portc_direction(1), 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  port            1    2[COMRAM] const enum E2832
   435 ;;  ret             1    1[COMRAM] unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      unsigned char 
   438 ;; Registers used:
   439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   445 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;Total ram usage:        3 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text2
   459   00105E                     __ptext2:
   460                           	callstack 0
   461   00105E                     _gpio_port_get_direction_status:
   462                           	callstack 30
   463                           
   464                           ;incstack = 0
   465                           ;gpio_port_get_direction_status@port stored from wreg
   466   00105E  6E25               	movwf	gpio_port_get_direction_status@port^0,c
   467   001060                     
   468                           ;MCAL_Layer/GPIO/hal_gpio.c: 174:     std_ReturnType ret = (std_ReturnType)0x01;
   469   001060  0E01               	movlw	1
   470   001062  6E24               	movwf	gpio_port_get_direction_status@ret^0,c
   471   001064                     
   472                           ;MCAL_Layer/GPIO/hal_gpio.c: 175:     if(((void*)0) == direction_status || port > 5 - 1)
      +                          {
   473   001064  5023               	movf	gpio_port_get_direction_status@direction_status^0,w,c
   474   001066  B4D8               	btfsc	status,2,c
   475   001068  EF38  F008         	goto	u251
   476   00106C  EF3A  F008         	goto	u250
   477   001070                     u251:
   478   001070  EF42  F008         	goto	l988
   479   001074                     u250:
   480   001074  0E04               	movlw	4
   481   001076  6425               	cpfsgt	gpio_port_get_direction_status@port^0,c
   482   001078  EF40  F008         	goto	u261
   483   00107C  EF42  F008         	goto	u260
   484   001080                     u261:
   485   001080  EF46  F008         	goto	l990
   486   001084                     u260:
   487   001084                     l988:
   488                           
   489                           ;MCAL_Layer/GPIO/hal_gpio.c: 176:         ret = (std_ReturnType)0x00;
   490   001084  0E00               	movlw	0
   491   001086  6E24               	movwf	gpio_port_get_direction_status@ret^0,c
   492                           
   493                           ;MCAL_Layer/GPIO/hal_gpio.c: 177:     }
   494   001088  EF51  F008         	goto	l992
   495   00108C                     l990:
   496                           
   497                           ;MCAL_Layer/GPIO/hal_gpio.c: 179:         *direction_status = tris_registers[port];
   498   00108C  5025               	movf	gpio_port_get_direction_status@port^0,w,c
   499   00108E  0D02               	mullw	2
   500   001090  50F3               	movf	243,w,c
   501   001092  0F15               	addlw	low _tris_registers
   502   001094  6ED9               	movwf	fsr2l,c
   503   001096  6ADA               	clrf	fsr2h,c
   504   001098  5023               	movf	gpio_port_get_direction_status@direction_status^0,w,c
   505   00109A  6EE1               	movwf	fsr1l,c
   506   00109C  6AE2               	clrf	fsr1h,c
   507   00109E  CFDF FFE7          	movff	indf2,indf1
   508   0010A2                     l992:
   509                           
   510                           ;MCAL_Layer/GPIO/hal_gpio.c: 181:     return ret;
   511   0010A2  5024               	movf	gpio_port_get_direction_status@ret^0,w,c
   512   0010A4  0012               	return		;funcret
   513   0010A6                     __end_of_gpio_port_get_direction_status:
   514                           	callstack 0
   515                           
   516 ;; *************** function _application_initialize *****************
   517 ;; Defined at:
   518 ;;		line 52 in file "application.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 1
   539 ;; This function calls:
   540 ;;		_gpio_port_direction_initialize
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text3
   547   00117A                     __ptext3:
   548                           	callstack 0
   549   00117A                     _application_initialize:
   550                           	callstack 29
   551   00117A                     
   552                           ;application.c: 57:     ret = gpio_port_direction_initialize(PORTC_INDEX,0x00);
   553   00117A  0E00               	movlw	0
   554   00117C  6E23               	movwf	gpio_port_direction_initialize@direction^0,c
   555   00117E  0E02               	movlw	2
   556   001180  EC74  F008         	call	_gpio_port_direction_initialize
   557   001184  6E2C               	movwf	_ret^0,c
   558   001186  0012               	return		;funcret
   559   001188                     __end_of_application_initialize:
   560                           	callstack 0
   561                           
   562 ;; *************** function _gpio_port_direction_initialize *****************
   563 ;; Defined at:
   564 ;;		line 154 in file "MCAL_Layer/GPIO/hal_gpio.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  port            1    wreg     const enum E2832
   567 ;;  direction       1    0[COMRAM] enum E2818
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  port            1    4[COMRAM] const enum E2832
   570 ;;  ret             1    3[COMRAM] unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      unsigned char 
   573 ;; Registers used:
   574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   580 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;Total ram usage:        5 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_application_initialize
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text4
   594   0010E8                     __ptext4:
   595                           	callstack 0
   596   0010E8                     _gpio_port_direction_initialize:
   597                           	callstack 29
   598                           
   599                           ;incstack = 0
   600                           ;gpio_port_direction_initialize@port stored from wreg
   601   0010E8  6E27               	movwf	gpio_port_direction_initialize@port^0,c
   602   0010EA                     
   603                           ;MCAL_Layer/GPIO/hal_gpio.c: 155:     std_ReturnType ret = (std_ReturnType)0x01;
   604   0010EA  0E01               	movlw	1
   605   0010EC  6E26               	movwf	gpio_port_direction_initialize@ret^0,c
   606   0010EE                     
   607                           ;MCAL_Layer/GPIO/hal_gpio.c: 156:     if(port > 5 - 1){
   608   0010EE  0E04               	movlw	4
   609   0010F0  6427               	cpfsgt	gpio_port_direction_initialize@port^0,c
   610   0010F2  EF7D  F008         	goto	u241
   611   0010F6  EF7F  F008         	goto	u240
   612   0010FA                     u241:
   613   0010FA  EF83  F008         	goto	l976
   614   0010FE                     u240:
   615   0010FE                     
   616                           ;MCAL_Layer/GPIO/hal_gpio.c: 157:         ret = (std_ReturnType)0x00;
   617   0010FE  0E00               	movlw	0
   618   001100  6E26               	movwf	gpio_port_direction_initialize@ret^0,c
   619                           
   620                           ;MCAL_Layer/GPIO/hal_gpio.c: 158:     }
   621   001102  EF93  F008         	goto	l978
   622   001106                     l976:
   623                           
   624                           ;MCAL_Layer/GPIO/hal_gpio.c: 160:         *tris_registers[port] = direction;
   625   001106  5027               	movf	gpio_port_direction_initialize@port^0,w,c
   626   001108  0D02               	mullw	2
   627   00110A  50F3               	movf	243,w,c
   628   00110C  0F15               	addlw	low _tris_registers
   629   00110E  6ED9               	movwf	fsr2l,c
   630   001110  6ADA               	clrf	fsr2h,c
   631   001112  CFDE F024          	movff	postinc2,??_gpio_port_direction_initialize
   632   001116  CFDD F025          	movff	postdec2,??_gpio_port_direction_initialize+1
   633   00111A  C024  FFD9         	movff	??_gpio_port_direction_initialize,fsr2l
   634   00111E  C025  FFDA         	movff	??_gpio_port_direction_initialize+1,fsr2h
   635   001122  C023  FFDF         	movff	gpio_port_direction_initialize@direction,indf2
   636   001126                     l978:
   637                           
   638                           ;MCAL_Layer/GPIO/hal_gpio.c: 162:     return ret;
   639   001126  5026               	movf	gpio_port_direction_initialize@ret^0,w,c
   640   001128  0012               	return		;funcret
   641   00112A                     __end_of_gpio_port_direction_initialize:
   642                           	callstack 0
   643                           
   644                           	psect	smallconst
   645   001000                     __psmallconst:
   646                           	callstack 0
   647   001000  00                 	db	0
   648   001001  00                 	db	0	; dummy byte at the end
   649   000000                     
   650                           	psect	rparam
   651   000000                     
   652                           	psect	config
   653                           
   654                           ; Padding undefined space
   655   300000                     	org	3145728
   656   300000  FF                 	db	255
   657                           
   658                           ;Config register CONFIG1H @ 0x300001
   659                           ;	Oscillator Selection bits
   660                           ;	OSC = HS, HS oscillator
   661                           ;	Fail-Safe Clock Monitor Enable bit
   662                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   663                           ;	Internal/External Oscillator Switchover bit
   664                           ;	IESO = OFF, Oscillator Switchover mode disabled
   665   300001                     	org	3145729
   666   300001  02                 	db	2
   667                           
   668                           ;Config register CONFIG2L @ 0x300002
   669                           ;	Power-up Timer Enable bit
   670                           ;	PWRT = OFF, PWRT disabled
   671                           ;	Brown-out Reset Enable bits
   672                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   673                           ;	Brown Out Reset Voltage bits
   674                           ;	BORV = 1, 
   675   300002                     	org	3145730
   676   300002  09                 	db	9
   677                           
   678                           ;Config register CONFIG2H @ 0x300003
   679                           ;	Watchdog Timer Enable bit
   680                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   681                           ;	Watchdog Timer Postscale Select bits
   682                           ;	WDTPS = 32768, 1:32768
   683   300003                     	org	3145731
   684   300003  1E                 	db	30
   685                           
   686                           ; Padding undefined space
   687   300004                     	org	3145732
   688   300004  FF                 	db	255
   689                           
   690                           ;Config register CONFIG3H @ 0x300005
   691                           ;	CCP2 MUX bit
   692                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   693                           ;	PORTB A/D Enable bit
   694                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   695                           ;	Low-Power Timer1 Oscillator Enable bit
   696                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   697                           ;	MCLR Pin Enable bit
   698                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   699   300005                     	org	3145733
   700   300005  81                 	db	129
   701                           
   702                           ;Config register CONFIG4L @ 0x300006
   703                           ;	Stack Full/Underflow Reset Enable bit
   704                           ;	STVREN = ON, Stack full/underflow will cause Reset
   705                           ;	Single-Supply ICSP Enable bit
   706                           ;	LVP = OFF, Single-Supply ICSP disabled
   707                           ;	Extended Instruction Set Enable bit
   708                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   709                           ;	Background Debugger Enable bit
   710                           ;	DEBUG = 0x1, unprogrammed default
   711   300006                     	org	3145734
   712   300006  81                 	db	129
   713                           
   714                           ; Padding undefined space
   715   300007                     	org	3145735
   716   300007  FF                 	db	255
   717                           
   718                           ;Config register CONFIG5L @ 0x300008
   719                           ;	Code Protection bit
   720                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   721                           ;	Code Protection bit
   722                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   723                           ;	Code Protection bit
   724                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   725                           ;	Code Protection bit
   726                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   727   300008                     	org	3145736
   728   300008  0F                 	db	15
   729                           
   730                           ;Config register CONFIG5H @ 0x300009
   731                           ;	Boot Block Code Protection bit
   732                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   733                           ;	Data EEPROM Code Protection bit
   734                           ;	CPD = OFF, Data EEPROM not code-protected
   735   300009                     	org	3145737
   736   300009  C0                 	db	192
   737                           
   738                           ;Config register CONFIG6L @ 0x30000A
   739                           ;	Write Protection bit
   740                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   741                           ;	Write Protection bit
   742                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   743                           ;	Write Protection bit
   744                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   745                           ;	Write Protection bit
   746                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   747   30000A                     	org	3145738
   748   30000A  0F                 	db	15
   749                           
   750                           ;Config register CONFIG6H @ 0x30000B
   751                           ;	Configuration Register Write Protection bit
   752                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   753                           ;	Boot Block Write Protection bit
   754                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   755                           ;	Data EEPROM Write Protection bit
   756                           ;	WRTD = OFF, Data EEPROM not write-protected
   757   30000B                     	org	3145739
   758   30000B  E0                 	db	224
   759                           
   760                           ;Config register CONFIG7L @ 0x30000C
   761                           ;	Table Read Protection bit
   762                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   763                           ;	Table Read Protection bit
   764                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   765                           ;	Table Read Protection bit
   766                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   767                           ;	Table Read Protection bit
   768                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   769   30000C                     	org	3145740
   770   30000C  0F                 	db	15
   771                           
   772                           ;Config register CONFIG7H @ 0x30000D
   773                           ;	Boot Block Table Read Protection bit
   774                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   775   30000D                     	org	3145741
   776   30000D  40                 	db	64
   777                           tosu	equ	0xFFF
   778                           tosh	equ	0xFFE
   779                           tosl	equ	0xFFD
   780                           stkptr	equ	0xFFC
   781                           pclatu	equ	0xFFB
   782                           pclath	equ	0xFFA
   783                           pcl	equ	0xFF9
   784                           tblptru	equ	0xFF8
   785                           tblptrh	equ	0xFF7
   786                           tblptrl	equ	0xFF6
   787                           tablat	equ	0xFF5
   788                           prodh	equ	0xFF4
   789                           prodl	equ	0xFF3
   790                           indf0	equ	0xFEF
   791                           postinc0	equ	0xFEE
   792                           postdec0	equ	0xFED
   793                           preinc0	equ	0xFEC
   794                           plusw0	equ	0xFEB
   795                           fsr0h	equ	0xFEA
   796                           fsr0l	equ	0xFE9
   797                           wreg	equ	0xFE8
   798                           indf1	equ	0xFE7
   799                           postinc1	equ	0xFE6
   800                           postdec1	equ	0xFE5
   801                           preinc1	equ	0xFE4
   802                           plusw1	equ	0xFE3
   803                           fsr1h	equ	0xFE2
   804                           fsr1l	equ	0xFE1
   805                           bsr	equ	0xFE0
   806                           indf2	equ	0xFDF
   807                           postinc2	equ	0xFDE
   808                           postdec2	equ	0xFDD
   809                           preinc2	equ	0xFDC
   810                           plusw2	equ	0xFDB
   811                           fsr2h	equ	0xFDA
   812                           fsr2l	equ	0xFD9
   813                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_port_get_direction_status@direction_status	PTR enum E2818 size(1) Largest target is 1
		 -> portc_direction(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_write_logic
    _application_initialize->_gpio_port_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     596
                                              5 COMRAM     2     2      0
             _application_initialize
     _gpio_port_get_direction_status
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     242
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _gpio_port_get_direction_status                       3     2      1     188
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0     166
     _gpio_port_direction_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_initialize                       5     4      1     166
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _gpio_port_direction_initialize
   _gpio_port_get_direction_status
   _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      7      2C       1       34.6%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      39        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 16 00:48:43 2024

                                            l94 10A4                                              l87 1128  
                                           l106 10E6                                             l146 1186  
                                           l970 10EA                                             l972 10EE  
                                           l974 10FE                                             l990 108C  
                                           l982 1060                                             l976 1106  
                                           l992 10A2                                             l984 1064  
                                           l978 1126                                             l986 1074  
                                           l988 1084                                             l996 10A8  
                                           l998 10AC                                             u240 10FE  
                                           u241 10FA                                             u250 1074  
                                           u251 1070                                             u260 1084  
                                           u261 1080                                             u270 10BC  
                                           u271 10B8                                             u287 1028  
                                           u297 104A                                             _ret 002C  
                                           wreg 0FE8                                            l1000 10BC  
                                          l1002 10C4                                            l1010 1002  
                                          l1004 10E4                                            l1020 1040  
                                          l1012 1006                                            l1014 1012  
                                          l1008 117A                                            l1016 101E  
                                          l1018 1034                                            _LATA 0F89  
                                          _LATB 0F8A                                            _LATC 0F8B  
                                          _LATD 0F8C                                            _LATE 0F8D  
                                          _led1 0022                                            _led2 0021  
                                          _led3 0020                                            _main 1002  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf1 0FE7                                            indf2 0FDF  
                                          fsr1l 0FE1                                            fsr2l 0FD9  
                                          prodl 0FF3                                            start 0000  
                                  ___param_bank 0000                           _gpio_port_write_logic 10A6  
                                         ?_main 0023                        ??_application_initialize 0028  
                                         _PORTA 0F80                                           _PORTB 0F81  
                                         _PORTC 0F82                                           _PORTD 0F83  
                                         _PORTE 0F84                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                                         _btn_1 001F                                           tablat 0FF5  
                                         status 0FD8                                 __initialization 112A  
                                  __end_of_main 105E                                   _lat_registers 000B  
                                        ??_main 0028                                   __activetblptr 0002  
                     gpio_port_write_logic@port 0027          __end_of_gpio_port_direction_initialize 112A  
                _gpio_port_direction_initialize 10E8                          ?_gpio_port_write_logic 0023  
                                        isa$std 0001                                    __pdataCOMRAM 0001  
                                  __mediumconst 0000                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                                    __accesstop 0080                         __end_of__initialization 114E  
                                 ___rparam_used 0001                                  __pcstackCOMRAM 0023  
                      gpio_port_write_logic@ret 0026                          _application_initialize 117A  
                                    __pnvCOMRAM 002C                                      _btn_status 002A  
                                _tris_registers 0015                                         __Hparam 0000  
                                       __Lparam 0000                                    __psmallconst 1000  
                                       __pcinit 112A                                         __ramtop 1000  
                                       __ptext0 1002                                         __ptext1 10A6  
                                       __ptext2 105E                                         __ptext3 117A  
                                       __ptext4 10E8                            end_of_initialization 114E  
             gpio_port_direction_initialize@ret 0026                                   __Lmediumconst 0000  
                       ??_gpio_port_write_logic 0024                                         postdec1 0FE5  
                                       postdec2 0FDD                                         postinc0 0FEE  
                                       postinc2 0FDE                ??_gpio_port_get_direction_status 0024  
               ?_gpio_port_get_direction_status 0023         gpio_port_direction_initialize@direction 0023  
                                 __pidataCOMRAM 1158                             start_initialization 112A  
                       ?_application_initialize 0023                                     __pbssCOMRAM 002A  
                __end_of_application_initialize 1188                                     __smallconst 1000  
                 __end_of_gpio_port_write_logic 10E8              gpio_port_get_direction_status@port 0025  
                                     copy_data0 113E          __end_of_gpio_port_get_direction_status 10A6  
                _gpio_port_get_direction_status 105E  gpio_port_get_direction_status@direction_status 0023  
                                      __Hrparam 0000                                        __Lrparam 0000  
                               _portc_direction 002B                                        isa$xinst 0000  
             gpio_port_get_direction_status@ret 0024                ??_gpio_port_direction_initialize 0024  
               ?_gpio_port_direction_initialize 0023              gpio_port_direction_initialize@port 0027  
                                _port_registers 0001                      gpio_port_write_logic@logic 0023  
