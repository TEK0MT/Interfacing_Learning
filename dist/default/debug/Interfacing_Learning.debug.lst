

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jul 06 22:43:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 17/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   00144C                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _keypad_values
    67   00144C  37                 	db	55
    68   00144D  38                 	db	56
    69   00144E  39                 	db	57
    70   00144F  2F                 	db	47
    71   001450  34                 	db	52
    72   001451  35                 	db	53
    73   001452  36                 	db	54
    74   001453  2A                 	db	42
    75   001454  31                 	db	49
    76   001455  32                 	db	50
    77   001456  33                 	db	51
    78   001457  2D                 	db	45
    79   001458  23                 	db	35
    80   001459  30                 	db	48
    81   00145A  3D                 	db	61
    82   00145B  2B                 	db	43
    83                           
    84                           ;initializer for _port_registers
    85   00145C  80                 	db	128
    86   00145D  0F                 	db	15
    87   00145E  81                 	db	129
    88   00145F  0F                 	db	15
    89   001460  82                 	db	130
    90   001461  0F                 	db	15
    91   001462  83                 	db	131
    92   001463  0F                 	db	15
    93   001464  84                 	db	132
    94   001465  0F                 	db	15
    95                           
    96                           ;initializer for _lat_registers
    97   001466  89                 	db	137
    98   001467  0F                 	db	15
    99   001468  8A                 	db	138
   100   001469  0F                 	db	15
   101   00146A  8B                 	db	139
   102   00146B  0F                 	db	15
   103   00146C  8C                 	db	140
   104   00146D  0F                 	db	15
   105   00146E  8D                 	db	141
   106   00146F  0F                 	db	15
   107                           
   108                           ;initializer for _tris_registers
   109   001470  92                 	db	146
   110   001471  0F                 	db	15
   111   001472  93                 	db	147
   112   001473  0F                 	db	15
   113   001474  94                 	db	148
   114   001475  0F                 	db	15
   115   001476  95                 	db	149
   116   001477  0F                 	db	15
   117   001478  96                 	db	150
   118   001479  0F                 	db	15
   119                           
   120                           ;initializer for _customChar
   121   00147A  0E                 	db	14
   122   00147B  0A                 	db	10
   123   00147C  1B                 	db	27
   124   00147D  11                 	db	17
   125   00147E  11                 	db	17
   126   00147F  11                 	db	17
   127   001480  1F                 	db	31
   128   001481  00                 	db	0
   129                           
   130                           ;initializer for _keypad1
   131   001482  02                 	db	2
   132   001483  0A                 	db	10
   133   001484  12                 	db	18
   134   001485  1A                 	db	26
   135   001486  62                 	db	98
   136   001487  6A                 	db	106
   137   001488  72                 	db	114
   138   001489  7A                 	db	122
   139                           
   140                           ;initializer for _lcd2
   141   00148A  02                 	db	2
   142   00148B  0A                 	db	10
   143   00148C  12                 	db	18
   144   00148D  1A                 	db	26
   145   00148E  22                 	db	34
   146   00148F  2A                 	db	42
   147                           
   148                           ;initializer for _led1
   149   001490  03                 	db	3
   150                           
   151                           ;initializer for _lcd1
   152   001491  2A                 	db	42
   153   001492  3A                 	db	58
   154   001493  03                 	db	3
   155   001494  0B                 	db	11
   156   001495  13                 	db	19
   157   001496  1B                 	db	27
   158   001497  23                 	db	35
   159   001498  2B                 	db	43
   160   001499  33                 	db	51
   161   00149A  3B                 	db	59
   162                           
   163                           	psect	nvCOMRAM
   164   00006A                     __pnvCOMRAM:
   165                           	callstack 0
   166   00006A                     _ret:
   167                           	callstack 0
   168   00006A                     	ds	1
   169   000000                     _PORTE	set	3972
   170   000000                     _PORTD	set	3971
   171   000000                     _PORTC	set	3970
   172   000000                     _PORTB	set	3969
   173   000000                     _PORTA	set	3968
   174   000000                     _LATA	set	3977
   175   000000                     _TRISA	set	3986
   176   000000                     _TRISE	set	3990
   177   000000                     _TRISD	set	3989
   178   000000                     _TRISC	set	3988
   179   000000                     _TRISB	set	3987
   180   000000                     _LATE	set	3981
   181   000000                     _LATD	set	3980
   182   000000                     _LATC	set	3979
   183   000000                     _LATB	set	3978
   184                           
   185                           	psect	smallconst
   186   001000                     __psmallconst:
   187                           	callstack 0
   188   001000  00                 	db	0
   189   001001                     STR_4:
   190   001001  6B                 	db	107	;'k'
   191   001002  6B                 	db	107	;'k'
   192   001003  00                 	db	0
   193   001004                     STR_1:
   194   001004  25                 	db	37
   195   001005  69                 	db	105	;'i'
   196   001006  00                 	db	0
   197   001007  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   0014DA                     __pcinit:
   203                           	callstack 0
   204   0014DA                     start_initialization:
   205                           	callstack 0
   206   0014DA                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to COMRAM (79 bytes)
   210                           ; load TBLPTR registers with __pidataCOMRAM
   211   0014DA  0E4C               	movlw	low __pidataCOMRAM
   212   0014DC  6EF6               	movwf	tblptrl,c
   213   0014DE  0E14               	movlw	high __pidataCOMRAM
   214   0014E0  6EF7               	movwf	tblptrh,c
   215   0014E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   216   0014E4  6EF8               	movwf	tblptru,c
   217   0014E6  EE00  F001         	lfsr	0,__pdataCOMRAM
   218   0014EA  EE10 F04F          	lfsr	1,79
   219   0014EE                     copy_data0:
   220   0014EE  0009               	tblrd		*+
   221   0014F0  CFF5 FFEE          	movff	tablat,postinc0
   222   0014F4  50E5               	movf	postdec1,w,c
   223   0014F6  50E1               	movf	fsr1l,w,c
   224   0014F8  E1FA               	bnz	copy_data0
   225                           
   226                           ; Clear objects allocated to COMRAM (7 bytes)
   227   0014FA  EE00  F063         	lfsr	0,__pbssCOMRAM
   228   0014FE  0E07               	movlw	7
   229   001500                     clear_0:
   230   001500  6AEE               	clrf	postinc0,c
   231   001502  06E8               	decf	wreg,f,c
   232   001504  E1FD               	bnz	clear_0
   233   001506                     end_of_initialization:
   234                           	callstack 0
   235   001506                     __end_of__initialization:
   236                           	callstack 0
   237   001506  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238   001508  6EF8               	movwf	tblptru,c
   239   00150A  0100               	movlb	0
   240   00150C  EFA3  F00A         	goto	_main	;jump to C main() function
   241                           
   242                           	psect	bssCOMRAM
   243   000063                     __pbssCOMRAM:
   244                           	callstack 0
   245   000063                     relay_turn_off@F3065:
   246                           	callstack 0
   247   000063                     	ds	1
   248   000064                     relay_turn_on@F3060:
   249                           	callstack 0
   250   000064                     	ds	1
   251   000065                     relay_initialization@F3055:
   252                           	callstack 0
   253   000065                     	ds	1
   254   000066                     led_turn_toggle@F3077:
   255                           	callstack 0
   256   000066                     	ds	1
   257   000067                     led_turn_off@F3072:
   258                           	callstack 0
   259   000067                     	ds	1
   260   000068                     led_turn_on@F3067:
   261                           	callstack 0
   262   000068                     	ds	1
   263   000069                     led_initialize@F3062:
   264                           	callstack 0
   265   000069                     	ds	1
   266                           
   267                           	psect	dataCOMRAM
   268   000001                     __pdataCOMRAM:
   269                           	callstack 0
   270   000001                     _keypad_values:
   271                           	callstack 0
   272   000001                     	ds	16
   273   000011                     _port_registers:
   274                           	callstack 0
   275   000011                     	ds	10
   276   00001B                     _lat_registers:
   277                           	callstack 0
   278   00001B                     	ds	10
   279   000025                     _tris_registers:
   280                           	callstack 0
   281   000025                     	ds	10
   282   00002F                     _customChar:
   283                           	callstack 0
   284   00002F                     	ds	8
   285   000037                     _keypad1:
   286                           	callstack 0
   287   000037                     	ds	8
   288   00003F                     _lcd2:
   289                           	callstack 0
   290   00003F                     	ds	6
   291   000045                     _led1:
   292                           	callstack 0
   293   000045                     	ds	1
   294   000046                     _lcd1:
   295                           	callstack 0
   296   000046                     	ds	10
   297                           
   298                           	psect	cstackCOMRAM
   299   000050                     __pcstackCOMRAM:
   300                           	callstack 0
   301   000050                     gpio_pin_direction_intialize@_pin_config:
   302                           	callstack 0
   303   000050                     gpio_pin_write_logic@_pin_config:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x0
   307   000050                     	ds	1
   308   000051                     ??_gpio_pin_direction_intialize:
   309   000051                     gpio_pin_write_logic@logic:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x1
   313   000051                     	ds	1
   314   000052                     ??_gpio_pin_write_logic:
   315                           
   316                           ; 1 bytes @ 0x2
   317   000052                     	ds	4
   318   000056                     gpio_pin_direction_intialize@ret:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x6
   322   000056                     	ds	1
   323   000057                     gpio_pin_write_logic@ret:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x7
   327   000057                     	ds	1
   328   000058                     enable_signal_8bits@lcd:
   329                           	callstack 0
   330   000058                     gpio_pin_initialize@_pin_config:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x8
   334   000058                     	ds	1
   335   000059                     lcd_8bit_send_command@lcd:
   336                           	callstack 0
   337   000059                     lcd_8bit_send_char@lcd:
   338                           	callstack 0
   339   000059                     gpio_pin_initialize@ret:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x9
   343   000059                     	ds	1
   344   00005A                     lcd_8bit_send_command@command:
   345                           	callstack 0
   346   00005A                     lcd_8bit_send_char@_char:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xA
   350   00005A                     	ds	1
   351   00005B                     ??_lcd_8bit_send_command:
   352   00005B                     ??_lcd_8bit_send_char:
   353                           
   354                           ; 1 bytes @ 0xB
   355   00005B                     	ds	2
   356   00005D                     lcd_8bit_send_command@ret:
   357                           	callstack 0
   358   00005D                     lcd_8bit_send_char@ret:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0xD
   362   00005D                     	ds	1
   363   00005E                     lcd_8bit_send_command@counter:
   364                           	callstack 0
   365   00005E                     lcd_8bit_send_char@counter:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0xE
   369   00005E                     	ds	1
   370   00005F                     lcd_8bit_initialize@lcd:
   371                           	callstack 0
   372   00005F                     lcd_8bit_send_string@lcd:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xF
   376   00005F                     	ds	1
   377   000060                     ??_lcd_8bit_initialize:
   378   000060                     lcd_8bit_send_string@str:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x10
   382   000060                     	ds	1
   383   000061                     lcd_8bit_initialize@ret:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x11
   387   000061                     	ds	1
   388   000062                     lcd_8bit_initialize@counter:
   389                           	callstack 0
   390   000062                     lcd_8bit_send_string@ret:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x12
   394   000062                     	ds	1
   395   000063                     
   396                           ; 1 bytes @ 0x13
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 22 in file "application.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  2  452[None  ] int 
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels required when called: 6
   422 ;; This function calls:
   423 ;;		_application_initialize
   424 ;;		_lcd_8bit_send_string
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text0
   431   001546                     __ptext0:
   432                           	callstack 0
   433   001546                     _main:
   434                           	callstack 25
   435   001546                     
   436                           ;application.c: 24:     application_initialize();
   437   001546  ECB8  F00A         	call	_application_initialize	;wreg free
   438   00154A                     
   439                           ;application.c: 27:     lcd_8bit_send_string(&lcd1,"kk");
   440   00154A  0E46               	movlw	low _lcd1
   441   00154C  6E5F               	movwf	lcd_8bit_send_string@lcd^0,c
   442   00154E  0E01               	movlw	low STR_4
   443   001550  6E60               	movwf	lcd_8bit_send_string@str^0,c
   444   001552  5060               	movf	lcd_8bit_send_string@str^0,w,c
   445   001554  A4D8               	btfss	status,2,c
   446   001556  0E10               	movlw	high __smallconst
   447   001558  6E61               	movwf	(lcd_8bit_send_string@str+1)^0,c
   448   00155A  EC6E  F009         	call	_lcd_8bit_send_string	;wreg free
   449   00155E                     l453:
   450   00155E  EFAF  F00A         	goto	l453
   451   001562  EF00  F000         	goto	start
   452   001566                     __end_of_main:
   453                           	callstack 0
   454                           
   455 ;; *************** function _lcd_8bit_send_string *****************
   456 ;; Defined at:
   457 ;;		line 90 in file "ECU_Layer/LCD/ecu_lcd.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  lcd             1   15[COMRAM] PTR const struct .
   460 ;;		 -> lcd1(10), 
   461 ;;  str             2   16[COMRAM] PTR unsigned char 
   462 ;;		 -> STR_4(3), RAM(4095), 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  ret             1   18[COMRAM] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      unsigned char 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        4 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 3
   481 ;; This function calls:
   482 ;;		_lcd_8bit_send_char
   483 ;; This function is called by:
   484 ;;		_main
   485 ;;		_lcd_8bit_send_string_pos
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text1
   490   0012DC                     __ptext1:
   491                           	callstack 0
   492   0012DC                     _lcd_8bit_send_string:
   493                           	callstack 27
   494   0012DC                     
   495                           ;ECU_Layer/LCD/ecu_lcd.c: 91:     std_ReturnType ret = (std_ReturnType)0x01;
   496   0012DC  0E01               	movlw	1
   497   0012DE  6E62               	movwf	lcd_8bit_send_string@ret^0,c
   498                           
   499                           ;ECU_Layer/LCD/ecu_lcd.c: 92:     if(((void*)0) == lcd){
   500   0012E0  505F               	movf	lcd_8bit_send_string@lcd^0,w,c
   501   0012E2  A4D8               	btfss	status,2,c
   502   0012E4  EF76  F009         	goto	u1131
   503   0012E8  EF78  F009         	goto	u1130
   504   0012EC                     u1131:
   505   0012EC  EF95  F009         	goto	l2162
   506   0012F0                     u1130:
   507   0012F0                     
   508                           ;ECU_Layer/LCD/ecu_lcd.c: 93:         ret = (std_ReturnType)0x00;
   509   0012F0  0E00               	movlw	0
   510   0012F2  6E62               	movwf	lcd_8bit_send_string@ret^0,c
   511                           
   512                           ;ECU_Layer/LCD/ecu_lcd.c: 94:     }
   513   0012F4  EFAE  F009         	goto	l2164
   514   0012F8                     l2158:
   515                           
   516                           ;ECU_Layer/LCD/ecu_lcd.c: 97:             ret = lcd_8bit_send_char(lcd,*str++);
   517   0012F8  C05F  F059         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char@lcd
   518   0012FC  C060  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   519   001300  C061  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
   520   001304  0E00               	movlw	low (__smallconst shr (0+16))
   521   001306  6EF8               	movwf	tblptru,c
   522   001308  0E0F               	movlw	(high __ramtop+-1)
   523   00130A  64F7               	cpfsgt	tblptrh,c
   524   00130C  D003               	bra	u1147
   525   00130E  0008               	tblrd		*
   526   001310  50F5               	movf	tablat,w,c
   527   001312  D005               	bra	u1140
   528   001314                     u1147:
   529   001314  CFF6 FFE9          	movff	tblptrl,fsr0l
   530   001318  CFF7 FFEA          	movff	tblptrh,fsr0h
   531   00131C  50EF               	movf	indf0,w,c
   532   00131E                     u1140:
   533   00131E  6E5A               	movwf	lcd_8bit_send_char@_char^0,c
   534   001320  ECB0  F009         	call	_lcd_8bit_send_char	;wreg free
   535   001324  6E62               	movwf	lcd_8bit_send_string@ret^0,c
   536   001326  4A60               	infsnz	lcd_8bit_send_string@str^0,f,c
   537   001328  2A61               	incf	(lcd_8bit_send_string@str+1)^0,f,c
   538   00132A                     l2162:
   539                           
   540                           ;ECU_Layer/LCD/ecu_lcd.c: 96:         while(*str){
   541   00132A  C060  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   542   00132E  C061  FFF7         	movff	lcd_8bit_send_string@str+1,tblptrh
   543   001332  0E00               	movlw	low (__smallconst shr (0+16))
   544   001334  6EF8               	movwf	tblptru,c
   545   001336  0E0F               	movlw	(high __ramtop+-1)
   546   001338  64F7               	cpfsgt	tblptrh,c
   547   00133A  D003               	bra	u1157
   548   00133C  0008               	tblrd		*
   549   00133E  50F5               	movf	tablat,w,c
   550   001340  D005               	bra	u1150
   551   001342                     u1157:
   552   001342  CFF6 FFE9          	movff	tblptrl,fsr0l
   553   001346  CFF7 FFEA          	movff	tblptrh,fsr0h
   554   00134A  50EF               	movf	indf0,w,c
   555   00134C                     u1150:
   556   00134C  0900               	iorlw	0
   557   00134E  A4D8               	btfss	status,2,c
   558   001350  EFAC  F009         	goto	u1161
   559   001354  EFAE  F009         	goto	u1160
   560   001358                     u1161:
   561   001358  EF7C  F009         	goto	l2158
   562   00135C                     u1160:
   563   00135C                     l2164:
   564                           
   565                           ;ECU_Layer/LCD/ecu_lcd.c: 100:     return ret;
   566   00135C  5062               	movf	lcd_8bit_send_string@ret^0,w,c
   567   00135E  0012               	return		;funcret
   568   001360                     __end_of_lcd_8bit_send_string:
   569                           	callstack 0
   570                           
   571 ;; *************** function _lcd_8bit_send_char *****************
   572 ;; Defined at:
   573 ;;		line 62 in file "ECU_Layer/LCD/ecu_lcd.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  lcd             1    9[COMRAM] PTR const struct .
   576 ;;		 -> lcd1(10), 
   577 ;;  _char           1   10[COMRAM] unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  counter         1   14[COMRAM] unsigned char 
   580 ;;  ret             1   13[COMRAM] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      unsigned char 
   583 ;; Registers used:
   584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;Total ram usage:        6 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; Hardware stack levels required when called: 2
   597 ;; This function calls:
   598 ;;		_enable_signal_8bits
   599 ;;		_gpio_pin_write_logic
   600 ;; This function is called by:
   601 ;;		_lcd_8bit_send_string
   602 ;;		_lcd_8bit_send_char_pos
   603 ;;		_lcd_8bit_custom_character
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text2
   608   001360                     __ptext2:
   609                           	callstack 0
   610   001360                     _lcd_8bit_send_char:
   611                           	callstack 27
   612   001360                     
   613                           ;ECU_Layer/LCD/ecu_lcd.c: 64:     uint8 counter = 0;
   614   001360  0E00               	movlw	0
   615   001362  6E5E               	movwf	lcd_8bit_send_char@counter^0,c
   616                           
   617                           ;ECU_Layer/LCD/ecu_lcd.c: 65:     if(((void*)0) == lcd){
   618   001364  5059               	movf	lcd_8bit_send_char@lcd^0,w,c
   619   001366  A4D8               	btfss	status,2,c
   620   001368  EFB8  F009         	goto	u1071
   621   00136C  EFBA  F009         	goto	u1070
   622   001370                     u1071:
   623   001370  EFBE  F009         	goto	l2094
   624   001374                     u1070:
   625   001374                     
   626                           ;ECU_Layer/LCD/ecu_lcd.c: 66:         ret = (std_ReturnType)0x00;
   627   001374  0E00               	movlw	0
   628   001376  6E5D               	movwf	lcd_8bit_send_char@ret^0,c
   629                           
   630                           ;ECU_Layer/LCD/ecu_lcd.c: 67:     }
   631   001378  EFE9  F009         	goto	l2110
   632   00137C                     l2094:
   633   00137C  C059  F050         	movff	lcd_8bit_send_char@lcd,gpio_pin_write_logic@_pin_config
   634   001380  0E01               	movlw	1
   635   001382  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   636   001384  EC8D  F008         	call	_gpio_pin_write_logic	;wreg free
   637   001388                     
   638                           ;ECU_Layer/LCD/ecu_lcd.c: 70:         for(counter = 0;counter < 8;counter++){
   639   001388  0E00               	movlw	0
   640   00138A  6E5E               	movwf	lcd_8bit_send_char@counter^0,c
   641   00138C                     l2102:
   642                           
   643                           ;ECU_Layer/LCD/ecu_lcd.c: 71:             ret = gpio_pin_write_logic(&(lcd->data_pins[co
      +                          unter]),((_char >> counter) & (uint8)0x01));
   644   00138C  5059               	movf	lcd_8bit_send_char@lcd^0,w,c
   645   00138E  245E               	addwf	lcd_8bit_send_char@counter^0,w,c
   646   001390  0F02               	addlw	2
   647   001392  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
   648   001394  C05E  F05B         	movff	lcd_8bit_send_char@counter,??_lcd_8bit_send_char
   649   001398  C05A  F05C         	movff	lcd_8bit_send_char@_char,??_lcd_8bit_send_char+1
   650   00139C  2A5B               	incf	??_lcd_8bit_send_char^0,f,c
   651   00139E  EFD3  F009         	goto	u1084
   652   0013A2                     u1085:
   653   0013A2  90D8               	bcf	status,0,c
   654   0013A4  325C               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
   655   0013A6                     u1084:
   656   0013A6  2E5B               	decfsz	??_lcd_8bit_send_char^0,f,c
   657   0013A8  EFD1  F009         	goto	u1085
   658   0013AC  505C               	movf	(??_lcd_8bit_send_char+1)^0,w,c
   659   0013AE  0B01               	andlw	1
   660   0013B0  6E51               	movwf	gpio_pin_write_logic@logic^0,c
   661   0013B2  EC8D  F008         	call	_gpio_pin_write_logic	;wreg free
   662   0013B6  6E5D               	movwf	lcd_8bit_send_char@ret^0,c
   663   0013B8                     
   664                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         }
   665   0013B8  2A5E               	incf	lcd_8bit_send_char@counter^0,f,c
   666   0013BA  0E07               	movlw	7
   667   0013BC  645E               	cpfsgt	lcd_8bit_send_char@counter^0,c
   668   0013BE  EFE3  F009         	goto	u1091
   669   0013C2  EFE5  F009         	goto	u1090
   670   0013C6                     u1091:
   671   0013C6  EFC6  F009         	goto	l2102
   672   0013CA                     u1090:
   673   0013CA                     
   674                           ;ECU_Layer/LCD/ecu_lcd.c: 73:         enable_signal_8bits(lcd);
   675   0013CA  C059  F058         	movff	lcd_8bit_send_char@lcd,enable_signal_8bits@lcd
   676   0013CE  EC88  F00A         	call	_enable_signal_8bits	;wreg free
   677   0013D2                     l2110:
   678                           
   679                           ;ECU_Layer/LCD/ecu_lcd.c: 75:     return ret;
   680   0013D2  505D               	movf	lcd_8bit_send_char@ret^0,w,c
   681   0013D4  0012               	return		;funcret
   682   0013D6                     __end_of_lcd_8bit_send_char:
   683                           	callstack 0
   684                           
   685 ;; *************** function _application_initialize *****************
   686 ;; Defined at:
   687 ;;		line 36 in file "application.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 5
   708 ;; This function calls:
   709 ;;		_Ecu_initialize
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text3
   716   001570                     __ptext3:
   717                           	callstack 0
   718   001570                     _application_initialize:
   719                           	callstack 25
   720   001570                     
   721                           ;application.c: 37:     ret = Ecu_initialize();
   722   001570  ECB3  F00A         	call	_Ecu_initialize	;wreg free
   723   001574  6E6A               	movwf	_ret^0,c
   724   001576  0012               	return		;funcret
   725   001578                     __end_of_application_initialize:
   726                           	callstack 0
   727                           
   728 ;; *************** function _Ecu_initialize *****************
   729 ;; Defined at:
   730 ;;		line 40 in file "ECU_Layer/ECU_LAYER.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      unsigned char 
   737 ;; Registers used:
   738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 4
   751 ;; This function calls:
   752 ;;		_lcd_8bit_initialize
   753 ;; This function is called by:
   754 ;;		_application_initialize
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text4
   759   001566                     __ptext4:
   760                           	callstack 0
   761   001566                     _Ecu_initialize:
   762                           	callstack 25
   763   001566                     
   764                           ;ECU_Layer/ECU_LAYER.c: 43:     lcd_8bit_initialize(&lcd1);
   765   001566  0E46               	movlw	low _lcd1
   766   001568  6E5F               	movwf	lcd_8bit_initialize@lcd^0,c
   767   00156A  EC05  F009         	call	_lcd_8bit_initialize	;wreg free
   768   00156E  0012               	return		;funcret
   769   001570                     __end_of_Ecu_initialize:
   770                           	callstack 0
   771                           
   772 ;; *************** function _lcd_8bit_initialize *****************
   773 ;; Defined at:
   774 ;;		line 19 in file "ECU_Layer/LCD/ecu_lcd.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  lcd             1   15[COMRAM] PTR const struct .
   777 ;;		 -> lcd1(10), 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  counter         1   18[COMRAM] unsigned char 
   780 ;;  ret             1   17[COMRAM] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      unsigned char 
   783 ;; Registers used:
   784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   790 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;Total ram usage:        4 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 3
   797 ;; This function calls:
   798 ;;		_gpio_pin_initialize
   799 ;;		_lcd_8bit_send_command
   800 ;; This function is called by:
   801 ;;		_Ecu_initialize
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text5
   806   00120A                     __ptext5:
   807                           	callstack 0
   808   00120A                     _lcd_8bit_initialize:
   809                           	callstack 25
   810   00120A                     
   811                           ;ECU_Layer/LCD/ecu_lcd.c: 21:     uint8 counter = 0;
   812   00120A  0E00               	movlw	0
   813   00120C  6E62               	movwf	lcd_8bit_initialize@counter^0,c
   814                           
   815                           ;ECU_Layer/LCD/ecu_lcd.c: 22:     if(((void*)0) == lcd){
   816   00120E  505F               	movf	lcd_8bit_initialize@lcd^0,w,c
   817   001210  A4D8               	btfss	status,2,c
   818   001212  EF0D  F009         	goto	u1051
   819   001216  EF0F  F009         	goto	u1050
   820   00121A                     u1051:
   821   00121A  EF11  F009         	goto	l2054
   822   00121E                     u1050:
   823   00121E                     
   824                           ;ECU_Layer/LCD/ecu_lcd.c: 24:     }
   825   00121E  EF6D  F009         	goto	l102
   826   001222                     l2054:
   827                           
   828                           ;ECU_Layer/LCD/ecu_lcd.c: 26:         ret = gpio_pin_initialize(&(lcd->rs));
   829   001222  C05F  F058         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
   830   001226  EC4E  F00A         	call	_gpio_pin_initialize	;wreg free
   831   00122A  6E61               	movwf	lcd_8bit_initialize@ret^0,c
   832                           
   833                           ;ECU_Layer/LCD/ecu_lcd.c: 27:         ret = gpio_pin_initialize(&(lcd->enable));
   834   00122C  285F               	incf	lcd_8bit_initialize@lcd^0,w,c
   835   00122E  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
   836   001230  EC4E  F00A         	call	_gpio_pin_initialize	;wreg free
   837   001234  6E61               	movwf	lcd_8bit_initialize@ret^0,c
   838   001236                     
   839                           ;ECU_Layer/LCD/ecu_lcd.c: 28:         for(counter = 0;counter < 8;counter++){
   840   001236  0E00               	movlw	0
   841   001238  6E62               	movwf	lcd_8bit_initialize@counter^0,c
   842   00123A                     l2062:
   843   00123A  505F               	movf	lcd_8bit_initialize@lcd^0,w,c
   844   00123C  2462               	addwf	lcd_8bit_initialize@counter^0,w,c
   845   00123E  0F02               	addlw	2
   846   001240  6E58               	movwf	gpio_pin_initialize@_pin_config^0,c
   847   001242  EC4E  F00A         	call	_gpio_pin_initialize	;wreg free
   848   001246                     
   849                           ;ECU_Layer/LCD/ecu_lcd.c: 30:         }
   850   001246  2A62               	incf	lcd_8bit_initialize@counter^0,f,c
   851   001248  0E07               	movlw	7
   852   00124A  6462               	cpfsgt	lcd_8bit_initialize@counter^0,c
   853   00124C  EF2A  F009         	goto	u1061
   854   001250  EF2C  F009         	goto	u1060
   855   001254                     u1061:
   856   001254  EF1D  F009         	goto	l2062
   857   001258                     u1060:
   858   001258                     
   859                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         _delay((unsigned long)((20)*(8000000/4000.0)));
   860   001258  0E34               	movlw	52
   861   00125A  6E60               	movwf	??_lcd_8bit_initialize^0,c
   862   00125C  0EF2               	movlw	242
   863   00125E                     u1607:
   864   00125E  2EE8               	decfsz	wreg,f,c
   865   001260  D7FE               	bra	u1607
   866   001262  2E60               	decfsz	??_lcd_8bit_initialize^0,f,c
   867   001264  D7FC               	bra	u1607
   868   001266                     
   869                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         lcd_8bit_send_command(lcd,0x38);
   870   001266  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   871   00126A  0E38               	movlw	56
   872   00126C  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   873   00126E  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   874   001272                     
   875                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         _delay((unsigned long)((5)*(8000000/4000.0)));
   876   001272  0E0D               	movlw	13
   877   001274  6E60               	movwf	??_lcd_8bit_initialize^0,c
   878   001276  0EFC               	movlw	252
   879   001278                     u1617:
   880   001278  2EE8               	decfsz	wreg,f,c
   881   00127A  D7FE               	bra	u1617
   882   00127C  2E60               	decfsz	??_lcd_8bit_initialize^0,f,c
   883   00127E  D7FC               	bra	u1617
   884                           
   885                           ;ECU_Layer/LCD/ecu_lcd.c: 34:         lcd_8bit_send_command(lcd,0x38);
   886   001280  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   887   001284  0E38               	movlw	56
   888   001286  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   889   001288  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   890   00128C                     
   891                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         _delay((unsigned long)((150)*(8000000/4000000.0)))
      +                          ;
   892   00128C  0E64               	movlw	100
   893   00128E                     u1627:
   894   00128E  2EE8               	decfsz	wreg,f,c
   895   001290  D7FE               	bra	u1627
   896   001292                     
   897                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         lcd_8bit_send_command(lcd,0x38);
   898   001292  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   899   001296  0E38               	movlw	56
   900   001298  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   901   00129A  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   902   00129E                     
   903                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         lcd_8bit_send_command(lcd,0x01);
   904   00129E  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   905   0012A2  0E01               	movlw	1
   906   0012A4  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   907   0012A6  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   908   0012AA                     
   909                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         lcd_8bit_send_command(lcd,0x02);
   910   0012AA  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   911   0012AE  0E02               	movlw	2
   912   0012B0  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   913   0012B2  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   914   0012B6                     
   915                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         lcd_8bit_send_command(lcd,0x06);
   916   0012B6  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   917   0012BA  0E06               	movlw	6
   918   0012BC  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   919   0012BE  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   920   0012C2                     
   921                           ;ECU_Layer/LCD/ecu_lcd.c: 40:         lcd_8bit_send_command(lcd,0x0C);
   922   0012C2  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   923   0012C6  0E0C               	movlw	12
   924   0012C8  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   925   0012CA  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   926   0012CE                     
   927                           ;ECU_Layer/LCD/ecu_lcd.c: 41:         lcd_8bit_send_command(lcd,0x38);
   928   0012CE  C05F  F059         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   929   0012D2  0E38               	movlw	56
   930   0012D4  6E5A               	movwf	lcd_8bit_send_command@command^0,c
   931   0012D6  ECEB  F009         	call	_lcd_8bit_send_command	;wreg free
   932   0012DA                     l102:
   933   0012DA  0012               	return		;funcret
   934   0012DC                     __end_of_lcd_8bit_initialize:
   935                           	callstack 0
   936                           
   937 ;; *************** function _lcd_8bit_send_command *****************
   938 ;; Defined at:
   939 ;;		line 45 in file "ECU_Layer/LCD/ecu_lcd.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  lcd             1    9[COMRAM] PTR const struct .
   942 ;;		 -> lcd1(10), 
   943 ;;  command         1   10[COMRAM] unsigned char 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  counter         1   14[COMRAM] unsigned char 
   946 ;;  ret             1   13[COMRAM] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      unsigned char 
   949 ;; Registers used:
   950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;Total ram usage:        6 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 2
   963 ;; This function calls:
   964 ;;		_enable_signal_8bits
   965 ;;		_gpio_pin_write_logic
   966 ;; This function is called by:
   967 ;;		_lcd_8bit_initialize
   968 ;;		_lcd_8bit_custom_character
   969 ;;		_lcd_8bits_set_cursor
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text6
   974   0013D6                     __ptext6:
   975                           	callstack 0
   976   0013D6                     _lcd_8bit_send_command:
   977                           	callstack 25
   978   0013D6                     
   979                           ;ECU_Layer/LCD/ecu_lcd.c: 48:     uint8 counter = 0;
   980   0013D6  0E00               	movlw	0
   981   0013D8  6E5E               	movwf	lcd_8bit_send_command@counter^0,c
   982                           
   983                           ;ECU_Layer/LCD/ecu_lcd.c: 49:     if(((void*)0) == lcd){
   984   0013DA  5059               	movf	lcd_8bit_send_command@lcd^0,w,c
   985   0013DC  A4D8               	btfss	status,2,c
   986   0013DE  EFF3  F009         	goto	u1021
   987   0013E2  EFF5  F009         	goto	u1020
   988   0013E6                     u1021:
   989   0013E6  EFF9  F009         	goto	l2030
   990   0013EA                     u1020:
   991   0013EA                     
   992                           ;ECU_Layer/LCD/ecu_lcd.c: 50:         ret = (std_ReturnType)0x00;
   993   0013EA  0E00               	movlw	0
   994   0013EC  6E5D               	movwf	lcd_8bit_send_command@ret^0,c
   995                           
   996                           ;ECU_Layer/LCD/ecu_lcd.c: 51:     }
   997   0013EE  EF24  F00A         	goto	l2046
   998   0013F2                     l2030:
   999   0013F2  C059  F050         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1000   0013F6  0E00               	movlw	0
  1001   0013F8  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1002   0013FA  EC8D  F008         	call	_gpio_pin_write_logic	;wreg free
  1003   0013FE                     
  1004                           ;ECU_Layer/LCD/ecu_lcd.c: 54:         for(counter = 0;counter < 8;counter++){
  1005   0013FE  0E00               	movlw	0
  1006   001400  6E5E               	movwf	lcd_8bit_send_command@counter^0,c
  1007   001402                     l2038:
  1008                           
  1009                           ;ECU_Layer/LCD/ecu_lcd.c: 55:             ret = gpio_pin_write_logic(&(lcd->data_pins[co
      +                          unter]),(command >> counter) & (uint8)0x01);
  1010   001402  5059               	movf	lcd_8bit_send_command@lcd^0,w,c
  1011   001404  245E               	addwf	lcd_8bit_send_command@counter^0,w,c
  1012   001406  0F02               	addlw	2
  1013   001408  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1014   00140A  C05E  F05B         	movff	lcd_8bit_send_command@counter,??_lcd_8bit_send_command
  1015   00140E  C05A  F05C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1016   001412  2A5B               	incf	??_lcd_8bit_send_command^0,f,c
  1017   001414  EF0E  F00A         	goto	u1034
  1018   001418                     u1035:
  1019   001418  90D8               	bcf	status,0,c
  1020   00141A  325C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1021   00141C                     u1034:
  1022   00141C  2E5B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1023   00141E  EF0C  F00A         	goto	u1035
  1024   001422  505C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1025   001424  0B01               	andlw	1
  1026   001426  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1027   001428  EC8D  F008         	call	_gpio_pin_write_logic	;wreg free
  1028   00142C  6E5D               	movwf	lcd_8bit_send_command@ret^0,c
  1029   00142E                     
  1030                           ;ECU_Layer/LCD/ecu_lcd.c: 56:         }
  1031   00142E  2A5E               	incf	lcd_8bit_send_command@counter^0,f,c
  1032   001430  0E07               	movlw	7
  1033   001432  645E               	cpfsgt	lcd_8bit_send_command@counter^0,c
  1034   001434  EF1E  F00A         	goto	u1041
  1035   001438  EF20  F00A         	goto	u1040
  1036   00143C                     u1041:
  1037   00143C  EF01  F00A         	goto	l2038
  1038   001440                     u1040:
  1039   001440                     
  1040                           ;ECU_Layer/LCD/ecu_lcd.c: 58:         enable_signal_8bits(lcd);
  1041   001440  C059  F058         	movff	lcd_8bit_send_command@lcd,enable_signal_8bits@lcd
  1042   001444  EC88  F00A         	call	_enable_signal_8bits	;wreg free
  1043   001448                     l2046:
  1044                           
  1045                           ;ECU_Layer/LCD/ecu_lcd.c: 60:     return ret;
  1046   001448  505D               	movf	lcd_8bit_send_command@ret^0,w,c
  1047   00144A  0012               	return		;funcret
  1048   00144C                     __end_of_lcd_8bit_send_command:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _enable_signal_8bits *****************
  1052 ;; Defined at:
  1053 ;;		line 300 in file "ECU_Layer/LCD/ecu_lcd.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  lcd             1    8[COMRAM] PTR const struct .
  1056 ;;		 -> lcd1(10), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  ret             1    0        unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      unsigned char 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1068 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;Total ram usage:        1 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 1
  1075 ;; This function calls:
  1076 ;;		_gpio_pin_write_logic
  1077 ;; This function is called by:
  1078 ;;		_lcd_8bit_send_command
  1079 ;;		_lcd_8bit_send_char
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text7
  1084   001510                     __ptext7:
  1085                           	callstack 0
  1086   001510                     _enable_signal_8bits:
  1087                           	callstack 27
  1088   001510                     
  1089                           ;ECU_Layer/LCD/ecu_lcd.c: 302:     if(((void*)0) == lcd){
  1090   001510  5058               	movf	enable_signal_8bits@lcd^0,w,c
  1091   001512  A4D8               	btfss	status,2,c
  1092   001514  EF8E  F00A         	goto	u1001
  1093   001518  EF90  F00A         	goto	u1000
  1094   00151C                     u1001:
  1095   00151C  EF92  F00A         	goto	l2008
  1096   001520                     u1000:
  1097   001520                     
  1098                           ;ECU_Layer/LCD/ecu_lcd.c: 304:     }
  1099   001520  EFA2  F00A         	goto	l204
  1100   001524                     l2008:
  1101   001524  2858               	incf	enable_signal_8bits@lcd^0,w,c
  1102   001526  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1103   001528  0E01               	movlw	1
  1104   00152A  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1105   00152C  EC8D  F008         	call	_gpio_pin_write_logic	;wreg free
  1106   001530                     
  1107                           ;ECU_Layer/LCD/ecu_lcd.c: 307:         _delay((unsigned long)((5)*(8000000/4000000.0)));
  1108   001530  0E03               	movlw	3
  1109   001532                     u1637:
  1110   001532  2EE8               	decfsz	wreg,f,c
  1111   001534  D7FE               	bra	u1637
  1112   001536  0000               	nop	
  1113   001538  2858               	incf	enable_signal_8bits@lcd^0,w,c
  1114   00153A  6E50               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1115   00153C  0E00               	movlw	0
  1116   00153E  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1117   001540  EC8D  F008         	call	_gpio_pin_write_logic	;wreg free
  1118   001544                     l204:
  1119   001544  0012               	return		;funcret
  1120   001546                     __end_of_enable_signal_8bits:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _gpio_pin_initialize *****************
  1124 ;; Defined at:
  1125 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1128 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  ret             1    9[COMRAM] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      unsigned char 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 1
  1147 ;; This function calls:
  1148 ;;		_gpio_pin_direction_intialize
  1149 ;;		_gpio_pin_write_logic
  1150 ;; This function is called by:
  1151 ;;		_lcd_8bit_initialize
  1152 ;;		_sev_seg_initialize
  1153 ;;		_keypad_initialize
  1154 ;;		_lcd_4bit_initialize
  1155 ;;		_led_initialize
  1156 ;;		_motor_initialize
  1157 ;;		_relay_initialization
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text8
  1162   00149C                     __ptext8:
  1163                           	callstack 0
  1164   00149C                     _gpio_pin_initialize:
  1165                           	callstack 26
  1166   00149C                     
  1167                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:     std_ReturnType ret = (std_ReturnType)0x01;
  1168   00149C  0E01               	movlw	1
  1169   00149E  6E59               	movwf	gpio_pin_initialize@ret^0,c
  1170                           
  1171                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config ){
  1172   0014A0  5058               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1173   0014A2  A4D8               	btfss	status,2,c
  1174   0014A4  EF56  F00A         	goto	u1011
  1175   0014A8  EF58  F00A         	goto	u1010
  1176   0014AC                     u1011:
  1177   0014AC  EF5C  F00A         	goto	l2020
  1178   0014B0                     u1010:
  1179   0014B0                     
  1180                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:         ret = (std_ReturnType)0x00;
  1181   0014B0  0E00               	movlw	0
  1182   0014B2  6E59               	movwf	gpio_pin_initialize@ret^0,c
  1183                           
  1184                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:     }
  1185   0014B4  EF6B  F00A         	goto	l2022
  1186   0014B8                     l2020:
  1187                           
  1188                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:         gpio_pin_direction_intialize(_pin_config);
  1189   0014B8  C058  F050         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1190   0014BC  EC04  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1191                           
  1192                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:         gpio_pin_write_logic(_pin_config,_pin_config->
      +                          logic);
  1193   0014C0  C058  F050         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1194   0014C4  5058               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1195   0014C6  6ED9               	movwf	fsr2l,c
  1196   0014C8  6ADA               	clrf	fsr2h,c
  1197   0014CA  0E00               	movlw	0
  1198   0014CC  BEDF               	btfsc	indf2,7,c
  1199   0014CE  0E01               	movlw	1
  1200   0014D0  6E51               	movwf	gpio_pin_write_logic@logic^0,c
  1201   0014D2  EC8D  F008         	call	_gpio_pin_write_logic	;wreg free
  1202   0014D6                     l2022:
  1203                           
  1204                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     return ret;
  1205   0014D6  5059               	movf	gpio_pin_initialize@ret^0,w,c
  1206   0014D8  0012               	return		;funcret
  1207   0014DA                     __end_of_gpio_pin_initialize:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _gpio_pin_write_logic *****************
  1211 ;; Defined at:
  1212 ;;		line 68 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1215 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  1216 ;;		 -> relay_initialization@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1217 ;;  logic           1    1[COMRAM] enum E2981
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  ret             1    7[COMRAM] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      unsigned char 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;Total ram usage:        8 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_lcd_8bit_send_command
  1239 ;;		_lcd_8bit_send_char
  1240 ;;		_enable_signal_8bits
  1241 ;;		_gpio_pin_initialize
  1242 ;;		_sev_seg_write_number
  1243 ;;		_keypad_read_value
  1244 ;;		_lcd_4bit_send_command
  1245 ;;		_lcd_4bit_send_char
  1246 ;;		_lcd_send_8bits
  1247 ;;		_lcd_send_4bits
  1248 ;;		_enable_signal_4bits
  1249 ;;		_led_turn_on
  1250 ;;		_led_turn_off
  1251 ;;		_motor_turn_right
  1252 ;;		_motor_turn_left
  1253 ;;		_motor_stop
  1254 ;;		_relay_turn_on
  1255 ;;		_relay_turn_off
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text9
  1260   00111A                     __ptext9:
  1261                           	callstack 0
  1262   00111A                     _gpio_pin_write_logic:
  1263                           	callstack 28
  1264   00111A                     
  1265                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:     std_ReturnType ret = (std_ReturnType)0x01;
  1266   00111A  0E01               	movlw	1
  1267   00111C  6E57               	movwf	gpio_pin_write_logic@ret^0,c
  1268                           
  1269                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:     if(((void*)0) == _pin_config){
  1270   00111E  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1271   001120  A4D8               	btfss	status,2,c
  1272   001122  EF95  F008         	goto	u921
  1273   001126  EF97  F008         	goto	u920
  1274   00112A                     u921:
  1275   00112A  EFEE  F008         	goto	l1976
  1276   00112E                     u920:
  1277   00112E                     
  1278                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:         ret = (std_ReturnType)0x00;
  1279   00112E  0E00               	movlw	0
  1280   001130  6E57               	movwf	gpio_pin_write_logic@ret^0,c
  1281                           
  1282                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     }
  1283   001132  EF03  F009         	goto	l1978
  1284   001136                     l1970:
  1285                           
  1286                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
  1287   001136  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1288   001138  6ED9               	movwf	fsr2l,c
  1289   00113A  6ADA               	clrf	fsr2h,c
  1290   00113C  30DF               	rrcf	223,w,c
  1291   00113E  32E8               	rrcf	wreg,f,c
  1292   001140  32E8               	rrcf	wreg,f,c
  1293   001142  0B07               	andlw	7
  1294   001144  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1295   001146  0E01               	movlw	1
  1296   001148  6E53               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1297   00114A  2A52               	incf	??_gpio_pin_write_logic^0,f,c
  1298   00114C  EFAA  F008         	goto	u934
  1299   001150                     u935:
  1300   001150  90D8               	bcf	status,0,c
  1301   001152  3653               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1302   001154                     u934:
  1303   001154  2E52               	decfsz	??_gpio_pin_write_logic^0,f,c
  1304   001156  EFA8  F008         	goto	u935
  1305   00115A  5053               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1306   00115C  0AFF               	xorlw	255
  1307   00115E  6E54               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1308   001160  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1309   001162  6ED9               	movwf	fsr2l,c
  1310   001164  6ADA               	clrf	fsr2h,c
  1311   001166  50DF               	movf	223,w,c
  1312   001168  0B07               	andlw	7
  1313   00116A  0D02               	mullw	2
  1314   00116C  50F3               	movf	243,w,c
  1315   00116E  0F1B               	addlw	low _lat_registers
  1316   001170  6ED9               	movwf	fsr2l,c
  1317   001172  6ADA               	clrf	fsr2h,c
  1318   001174  CFDE F055          	movff	postinc2,??_gpio_pin_write_logic+3
  1319   001178  CFDD F056          	movff	postdec2,??_gpio_pin_write_logic+4
  1320   00117C  C055  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1321   001180  C056  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1322   001184  5054               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1323   001186  16DF               	andwf	indf2,f,c
  1324                           
  1325                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 break;
  1326   001188  EF03  F009         	goto	l1978
  1327   00118C                     l1972:
  1328                           
  1329                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  1330   00118C  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1331   00118E  6ED9               	movwf	fsr2l,c
  1332   001190  6ADA               	clrf	fsr2h,c
  1333   001192  30DF               	rrcf	223,w,c
  1334   001194  32E8               	rrcf	wreg,f,c
  1335   001196  32E8               	rrcf	wreg,f,c
  1336   001198  0B07               	andlw	7
  1337   00119A  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1338   00119C  0E01               	movlw	1
  1339   00119E  6E53               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1340   0011A0  2A52               	incf	??_gpio_pin_write_logic^0,f,c
  1341   0011A2  EFD5  F008         	goto	u944
  1342   0011A6                     u945:
  1343   0011A6  90D8               	bcf	status,0,c
  1344   0011A8  3653               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1345   0011AA                     u944:
  1346   0011AA  2E52               	decfsz	??_gpio_pin_write_logic^0,f,c
  1347   0011AC  EFD3  F008         	goto	u945
  1348   0011B0  5050               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1349   0011B2  6ED9               	movwf	fsr2l,c
  1350   0011B4  6ADA               	clrf	fsr2h,c
  1351   0011B6  50DF               	movf	223,w,c
  1352   0011B8  0B07               	andlw	7
  1353   0011BA  0D02               	mullw	2
  1354   0011BC  50F3               	movf	243,w,c
  1355   0011BE  0F1B               	addlw	low _lat_registers
  1356   0011C0  6ED9               	movwf	fsr2l,c
  1357   0011C2  6ADA               	clrf	fsr2h,c
  1358   0011C4  CFDE F054          	movff	postinc2,??_gpio_pin_write_logic+2
  1359   0011C8  CFDD F055          	movff	postdec2,??_gpio_pin_write_logic+3
  1360   0011CC  C054  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1361   0011D0  C055  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1362   0011D4  5053               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1363   0011D6  12DF               	iorwf	indf2,f,c
  1364                           
  1365                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 break;
  1366   0011D8  EF03  F009         	goto	l1978
  1367   0011DC                     l1976:
  1368   0011DC  5051               	movf	gpio_pin_write_logic@logic^0,w,c
  1369   0011DE  6E52               	movwf	??_gpio_pin_write_logic^0,c
  1370   0011E0  6A53               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1371                           
  1372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1373                           ; Switch size 1, requested type "simple"
  1374                           ; Number of cases is 1, Range of values is 0 to 0
  1375                           ; switch strategies available:
  1376                           ; Name         Instructions Cycles
  1377                           ; simple_byte            4     3 (average)
  1378                           ;	Chosen strategy is simple_byte
  1379   0011E2  5053               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1380   0011E4  0A00               	xorlw	0	; case 0
  1381   0011E6  B4D8               	btfsc	status,2,c
  1382   0011E8  EFF8  F008         	goto	l2622
  1383   0011EC  EF03  F009         	goto	l1978
  1384   0011F0                     l2622:
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 2, Range of values is 0 to 1
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte            7     4 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392   0011F0  5052               	movf	??_gpio_pin_write_logic^0,w,c
  1393   0011F2  0A00               	xorlw	0	; case 0
  1394   0011F4  B4D8               	btfsc	status,2,c
  1395   0011F6  EF9B  F008         	goto	l1970
  1396   0011FA  0A01               	xorlw	1	; case 1
  1397   0011FC  B4D8               	btfsc	status,2,c
  1398   0011FE  EFC6  F008         	goto	l1972
  1399   001202  EF03  F009         	goto	l1978
  1400   001206                     l1978:
  1401                           
  1402                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     return ret;
  1403   001206  5057               	movf	gpio_pin_write_logic@ret^0,w,c
  1404   001208  0012               	return		;funcret
  1405   00120A                     __end_of_gpio_pin_write_logic:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _gpio_pin_direction_intialize *****************
  1409 ;; Defined at:
  1410 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1413 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  ret             1    6[COMRAM] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      unsigned char 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;Total ram usage:        7 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_gpio_pin_initialize
  1435 ;;		_button_initialize
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text10
  1440   001008                     __ptext10:
  1441                           	callstack 0
  1442   001008                     _gpio_pin_direction_intialize:
  1443                           	callstack 26
  1444   001008                     
  1445                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     std_ReturnType ret = (std_ReturnType)0x01;
  1446   001008  0E01               	movlw	1
  1447   00100A  6E56               	movwf	gpio_pin_direction_intialize@ret^0,c
  1448                           
  1449                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 - 1){
  1450   00100C  5050               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1451   00100E  B4D8               	btfsc	status,2,c
  1452   001010  EF0C  F008         	goto	u951
  1453   001014  EF0E  F008         	goto	u950
  1454   001018                     u951:
  1455   001018  EF1E  F008         	goto	l1990
  1456   00101C                     u950:
  1457   00101C  5050               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1458   00101E  6ED9               	movwf	fsr2l,c
  1459   001020  6ADA               	clrf	fsr2h,c
  1460   001022  30DF               	rrcf	223,w,c
  1461   001024  32E8               	rrcf	wreg,f,c
  1462   001026  32E8               	rrcf	wreg,f,c
  1463   001028  0B07               	andlw	7
  1464   00102A  6E51               	movwf	??_gpio_pin_direction_intialize^0,c
  1465   00102C  0E07               	movlw	7
  1466   00102E  6451               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1467   001030  EF1C  F008         	goto	u961
  1468   001034  EF1E  F008         	goto	u960
  1469   001038                     u961:
  1470   001038  EF75  F008         	goto	l1998
  1471   00103C                     u960:
  1472   00103C                     l1990:
  1473                           
  1474                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:         ret = (std_ReturnType)0x00;
  1475   00103C  0E00               	movlw	0
  1476   00103E  6E56               	movwf	gpio_pin_direction_intialize@ret^0,c
  1477                           
  1478                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     }
  1479   001040  EF8B  F008         	goto	l2000
  1480   001044                     l1992:
  1481                           
  1482                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1<<_pin_config->pin));
  1483   001044  5050               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1484   001046  6ED9               	movwf	fsr2l,c
  1485   001048  6ADA               	clrf	fsr2h,c
  1486   00104A  30DF               	rrcf	223,w,c
  1487   00104C  32E8               	rrcf	wreg,f,c
  1488   00104E  32E8               	rrcf	wreg,f,c
  1489   001050  0B07               	andlw	7
  1490   001052  6E51               	movwf	??_gpio_pin_direction_intialize^0,c
  1491   001054  0E01               	movlw	1
  1492   001056  6E52               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1493   001058  2A51               	incf	??_gpio_pin_direction_intialize^0,f,c
  1494   00105A  EF31  F008         	goto	u974
  1495   00105E                     u975:
  1496   00105E  90D8               	bcf	status,0,c
  1497   001060  3652               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1498   001062                     u974:
  1499   001062  2E51               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1500   001064  EF2F  F008         	goto	u975
  1501   001068  5052               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1502   00106A  0AFF               	xorlw	255
  1503   00106C  6E53               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1504   00106E  5050               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1505   001070  6ED9               	movwf	fsr2l,c
  1506   001072  6ADA               	clrf	fsr2h,c
  1507   001074  50DF               	movf	223,w,c
  1508   001076  0B07               	andlw	7
  1509   001078  0D02               	mullw	2
  1510   00107A  50F3               	movf	243,w,c
  1511   00107C  0F25               	addlw	low _tris_registers
  1512   00107E  6ED9               	movwf	fsr2l,c
  1513   001080  6ADA               	clrf	fsr2h,c
  1514   001082  CFDE F054          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1515   001086  CFDD F055          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1516   00108A  C054  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1517   00108E  C055  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1518   001092  5053               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1519   001094  16DF               	andwf	indf2,f,c
  1520                           
  1521                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:             break;
  1522   001096  EF8B  F008         	goto	l2000
  1523   00109A                     l1994:
  1524                           
  1525                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  1526   00109A  5050               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1527   00109C  6ED9               	movwf	fsr2l,c
  1528   00109E  6ADA               	clrf	fsr2h,c
  1529   0010A0  30DF               	rrcf	223,w,c
  1530   0010A2  32E8               	rrcf	wreg,f,c
  1531   0010A4  32E8               	rrcf	wreg,f,c
  1532   0010A6  0B07               	andlw	7
  1533   0010A8  6E51               	movwf	??_gpio_pin_direction_intialize^0,c
  1534   0010AA  0E01               	movlw	1
  1535   0010AC  6E52               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1536   0010AE  2A51               	incf	??_gpio_pin_direction_intialize^0,f,c
  1537   0010B0  EF5C  F008         	goto	u984
  1538   0010B4                     u985:
  1539   0010B4  90D8               	bcf	status,0,c
  1540   0010B6  3652               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1541   0010B8                     u984:
  1542   0010B8  2E51               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1543   0010BA  EF5A  F008         	goto	u985
  1544   0010BE  5050               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1545   0010C0  6ED9               	movwf	fsr2l,c
  1546   0010C2  6ADA               	clrf	fsr2h,c
  1547   0010C4  50DF               	movf	223,w,c
  1548   0010C6  0B07               	andlw	7
  1549   0010C8  0D02               	mullw	2
  1550   0010CA  50F3               	movf	243,w,c
  1551   0010CC  0F25               	addlw	low _tris_registers
  1552   0010CE  6ED9               	movwf	fsr2l,c
  1553   0010D0  6ADA               	clrf	fsr2h,c
  1554   0010D2  CFDE F053          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1555   0010D6  CFDD F054          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1556   0010DA  C053  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1557   0010DE  C054  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1558   0010E2  5052               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1559   0010E4  12DF               	iorwf	indf2,f,c
  1560                           
  1561                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             break;
  1562   0010E6  EF8B  F008         	goto	l2000
  1563   0010EA                     l1998:
  1564   0010EA  5050               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1565   0010EC  6ED9               	movwf	fsr2l,c
  1566   0010EE  6ADA               	clrf	fsr2h,c
  1567   0010F0  BCDF               	btfsc	indf2,6,c
  1568   0010F2  EF7D  F008         	goto	u991
  1569   0010F6  EF80  F008         	goto	u990
  1570   0010FA                     u991:
  1571   0010FA  0E01               	movlw	1
  1572   0010FC  EF81  F008         	goto	u996
  1573   001100                     u990:
  1574   001100  0E00               	movlw	0
  1575   001102                     u996:
  1576                           
  1577                           ; Switch size 1, requested type "simple"
  1578                           ; Number of cases is 2, Range of values is 0 to 1
  1579                           ; switch strategies available:
  1580                           ; Name         Instructions Cycles
  1581                           ; simple_byte            7     4 (average)
  1582                           ;	Chosen strategy is simple_byte
  1583   001102  0A00               	xorlw	0	; case 0
  1584   001104  B4D8               	btfsc	status,2,c
  1585   001106  EF22  F008         	goto	l1992
  1586   00110A  0A01               	xorlw	1	; case 1
  1587   00110C  B4D8               	btfsc	status,2,c
  1588   00110E  EF4D  F008         	goto	l1994
  1589   001112  EF1E  F008         	goto	l1990
  1590   001116                     l2000:
  1591                           
  1592                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  1593   001116  5056               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1594   001118  0012               	return		;funcret
  1595   00111A                     __end_of_gpio_pin_direction_intialize:
  1596                           	callstack 0
  1597                           
  1598                           	psect	rparam
  1599   000000                     
  1600                           	psect	config
  1601                           
  1602                           ; Padding undefined space
  1603   300000                     	org	3145728
  1604   300000  FF                 	db	255
  1605                           
  1606                           ;Config register CONFIG1H @ 0x300001
  1607                           ;	Oscillator Selection bits
  1608                           ;	OSC = HS, HS oscillator
  1609                           ;	Fail-Safe Clock Monitor Enable bit
  1610                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1611                           ;	Internal/External Oscillator Switchover bit
  1612                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1613   300001                     	org	3145729
  1614   300001  02                 	db	2
  1615                           
  1616                           ;Config register CONFIG2L @ 0x300002
  1617                           ;	Power-up Timer Enable bit
  1618                           ;	PWRT = OFF, PWRT disabled
  1619                           ;	Brown-out Reset Enable bits
  1620                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1621                           ;	Brown Out Reset Voltage bits
  1622                           ;	BORV = 1, 
  1623   300002                     	org	3145730
  1624   300002  09                 	db	9
  1625                           
  1626                           ;Config register CONFIG2H @ 0x300003
  1627                           ;	Watchdog Timer Enable bit
  1628                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1629                           ;	Watchdog Timer Postscale Select bits
  1630                           ;	WDTPS = 32768, 1:32768
  1631   300003                     	org	3145731
  1632   300003  1E                 	db	30
  1633                           
  1634                           ; Padding undefined space
  1635   300004                     	org	3145732
  1636   300004  FF                 	db	255
  1637                           
  1638                           ;Config register CONFIG3H @ 0x300005
  1639                           ;	CCP2 MUX bit
  1640                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1641                           ;	PORTB A/D Enable bit
  1642                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1643                           ;	Low-Power Timer1 Oscillator Enable bit
  1644                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1645                           ;	MCLR Pin Enable bit
  1646                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1647   300005                     	org	3145733
  1648   300005  81                 	db	129
  1649                           
  1650                           ;Config register CONFIG4L @ 0x300006
  1651                           ;	Stack Full/Underflow Reset Enable bit
  1652                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1653                           ;	Single-Supply ICSP Enable bit
  1654                           ;	LVP = OFF, Single-Supply ICSP disabled
  1655                           ;	Extended Instruction Set Enable bit
  1656                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1657                           ;	Background Debugger Enable bit
  1658                           ;	DEBUG = 0x1, unprogrammed default
  1659   300006                     	org	3145734
  1660   300006  81                 	db	129
  1661                           
  1662                           ; Padding undefined space
  1663   300007                     	org	3145735
  1664   300007  FF                 	db	255
  1665                           
  1666                           ;Config register CONFIG5L @ 0x300008
  1667                           ;	Code Protection bit
  1668                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1669                           ;	Code Protection bit
  1670                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1671                           ;	Code Protection bit
  1672                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1673                           ;	Code Protection bit
  1674                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1675   300008                     	org	3145736
  1676   300008  0F                 	db	15
  1677                           
  1678                           ;Config register CONFIG5H @ 0x300009
  1679                           ;	Boot Block Code Protection bit
  1680                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1681                           ;	Data EEPROM Code Protection bit
  1682                           ;	CPD = OFF, Data EEPROM not code-protected
  1683   300009                     	org	3145737
  1684   300009  C0                 	db	192
  1685                           
  1686                           ;Config register CONFIG6L @ 0x30000A
  1687                           ;	Write Protection bit
  1688                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1689                           ;	Write Protection bit
  1690                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1691                           ;	Write Protection bit
  1692                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1693                           ;	Write Protection bit
  1694                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1695   30000A                     	org	3145738
  1696   30000A  0F                 	db	15
  1697                           
  1698                           ;Config register CONFIG6H @ 0x30000B
  1699                           ;	Configuration Register Write Protection bit
  1700                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1701                           ;	Boot Block Write Protection bit
  1702                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1703                           ;	Data EEPROM Write Protection bit
  1704                           ;	WRTD = OFF, Data EEPROM not write-protected
  1705   30000B                     	org	3145739
  1706   30000B  E0                 	db	224
  1707                           
  1708                           ;Config register CONFIG7L @ 0x30000C
  1709                           ;	Table Read Protection bit
  1710                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1711                           ;	Table Read Protection bit
  1712                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1713                           ;	Table Read Protection bit
  1714                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1715                           ;	Table Read Protection bit
  1716                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1717   30000C                     	org	3145740
  1718   30000C  0F                 	db	15
  1719                           
  1720                           ;Config register CONFIG7H @ 0x30000D
  1721                           ;	Boot Block Table Read Protection bit
  1722                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1723   30000D                     	org	3145741
  1724   30000D  40                 	db	64
  1725                           tosu	equ	0xFFF
  1726                           tosh	equ	0xFFE
  1727                           tosl	equ	0xFFD
  1728                           stkptr	equ	0xFFC
  1729                           pclatu	equ	0xFFB
  1730                           pclath	equ	0xFFA
  1731                           pcl	equ	0xFF9
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           prodh	equ	0xFF4
  1737                           prodl	equ	0xFF3
  1738                           indf0	equ	0xFEF
  1739                           postinc0	equ	0xFEE
  1740                           postdec0	equ	0xFED
  1741                           preinc0	equ	0xFEC
  1742                           plusw0	equ	0xFEB
  1743                           fsr0h	equ	0xFEA
  1744                           fsr0l	equ	0xFE9
  1745                           wreg	equ	0xFE8
  1746                           indf1	equ	0xFE7
  1747                           postinc1	equ	0xFE6
  1748                           postdec1	equ	0xFE5
  1749                           preinc1	equ	0xFE4
  1750                           plusw1	equ	0xFE3
  1751                           fsr1h	equ	0xFE2
  1752                           fsr1l	equ	0xFE1
  1753                           bsr	equ	0xFE0
  1754                           indf2	equ	0xFDF
  1755                           postinc2	equ	0xFDE
  1756                           postdec2	equ	0xFDD
  1757                           preinc2	equ	0xFDC
  1758                           plusw2	equ	0xFDB
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        79
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     19     106
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    enable_signal_8bits@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_char@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), STR_4(CODE[3]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1280$buffer	PTR unsigned char  size(2) Largest target is 0

    S1280$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_enable_signal_8bits
    _Ecu_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_enable_signal_8bits
    _enable_signal_8bits->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30939
             _application_initialize
               _lcd_8bit_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string                                 4     1      3   11369
                                             15 COMRAM     4     1      3
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char                                   6     4      2   10951
                                              9 COMRAM     6     4      2
                _enable_signal_8bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   19570
                     _Ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _Ecu_initialize                                       0     0      0   19570
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19570
                                             15 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                6     4      2   12471
                                              9 COMRAM     6     4      2
                _enable_signal_8bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _enable_signal_8bits                                  2     1      1    5248
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  2     1      1    6679
                                              8 COMRAM     2     1      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    5020
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _Ecu_initialize
       _lcd_8bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_8bit_send_command
           _enable_signal_8bits
             _gpio_pin_write_logic
           _gpio_pin_write_logic
   _lcd_8bit_send_string
     _lcd_8bit_send_char
       _enable_signal_8bits
       _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     13      6A       1       83.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      39        0.0%
DATA                 0      0      6A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jul 06 22:43:51 2024

             __end_of_lcd_8bit_send_char 13D6                                      l102 12DA  
                                    l204 1544                                      l116 13D4  
                                    l109 144A                                      l129 135E  
                                    l325 156E                                      l407 14D8  
                                    l373 1118                                      l453 155E  
                                    l390 1208                                      l454 155E  
                                    l459 1576                                      u920 112E  
                                    u921 112A                                      u950 101C  
                                    u934 1154                                      u951 1018  
                                    u935 1150                                      u960 103C  
                                    u944 11AA                                      u961 1038  
                                    u945 11A6                                      u990 1100  
                                    u974 1062                                      u991 10FA  
                                    u975 105E                                      u984 10B8  
                                    u985 10B4                                      u996 1102  
                                    _ret 006A                      led_initialize@F3062 0069  
                                    wreg 0FE8                                     l2000 1116  
                                   l2010 1530             __end_of_lcd_8bit_send_string 1360  
                                   l2020 14B8                                     l2012 1538  
                                   l2004 1510                                     l2022 14D6  
                                   l2006 1520                                     l2030 13F2  
                                   l2102 138C                                     l2110 13D2  
                                   l2016 149C                                     l2008 1524  
                                   l2040 142E                                     l2032 13FE  
                                   l2104 13B8                                     l2018 14B0  
                                   l2042 1430                                     l2026 13D6  
                                   l2050 120A                                     l2106 13BA  
                                   l2044 1440                                     l2028 13EA  
                                   l2052 121E                                     l2108 13CA  
                                   l2038 1402                                     l2046 1448  
                                   l2070 1266                                     l2062 123A  
                                   l2054 1222                                     l2080 12AA  
                                   l2072 1272                                     l2064 1246  
                                   l2056 1236                                     l2152 1566  
                                   l2208 1570                                     l2160 1326  
                                   l2082 12B6                                     l2074 128C  
                                   l2066 1248                                     l2090 1360  
                                   l2162 132A                                     l2154 12DC  
                                   l2084 12C2                                     l2076 1292  
                                   l2068 1258                                     l2092 1374  
                                   l2164 135C                                     l2156 12F0  
                                   l2086 12CE                                     l2078 129E  
                                   l2094 137C                                     l2158 12F8  
                                   l2096 1388                                     l2622 11F0  
                                   l2614 1546                                     l2616 154A  
                                   l1970 1136                                     l1972 118C  
                                   l1990 103C                                     l1966 111A  
                                   l1992 1044                                     l1968 112E  
                                   l1976 11DC                                     l1994 109A  
                                   l1986 1008                                     l1978 1206  
                                   l1988 101C                                     l1998 10EA  
                                   STR_1 1004                                     STR_4 1001  
                                   u1000 1520                                     u1001 151C  
                                   u1010 14B0                                     u1011 14AC  
                                   u1020 13EA                                     u1021 13E6  
                                   u1040 1440                                     u1041 143C  
                                   u1034 141C                                     u1050 121E  
                                   u1130 12F0                                     u1035 1418  
                                   u1051 121A                                     u1131 12EC  
                                   u1060 1258                                     u1140 131E  
                                   u1061 1254                                     u1070 1374  
                                   u1150 134C                                     u1071 1370  
                                   u1160 135C                                     u1161 1358  
                                   u1090 13CA                                     u1091 13C6  
                                   u1147 1314                                     u1084 13A6  
                                   u1085 13A2                                     u1157 1342  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u1607 125E  
                                   u1617 1278                                     u1627 128E  
                                   u1637 1532                                     _lcd1 0046  
                                   _lcd2 003F                                     _led1 0045  
                                   _main 1546                                     fsr0h 0FEA  
                                   indf0 0FEF                                     fsr2h 0FDA  
                                   fsr0l 0FE9                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
             lcd_8bit_initialize@counter 0062            __end_of_lcd_8bit_send_command 144C  
                           ___param_bank 0000                     _gpio_pin_write_logic 111A  
                                  ?_main 0050                 ??_application_initialize 0063  
                    relay_turn_off@F3065 0063                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    tablat 0FF5  
                                  status 0FD8                          __initialization 14DA  
                           __end_of_main 1566                    ?_gpio_pin_write_logic 0050  
                          _lat_registers 001B                                   ??_main 0063  
                         _Ecu_initialize 1566                            __activetblptr 0002  
                       led_turn_on@F3067 0068                     _lcd_8bit_send_string 12DC  
                 __end_of_Ecu_initialize 1570                                   clear_0 1500  
                                 isa$std 0001  gpio_pin_direction_intialize@_pin_config 0050  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization 1506                            ___rparam_used 0001  
                 ??_gpio_pin_write_logic 0052                           __pcstackCOMRAM 0050  
                  ?_lcd_8bit_send_string 005F                          ?_Ecu_initialize 0050  
                     _lcd_8bit_send_char 1360                      ?_lcd_8bit_send_char 0059  
                 _application_initialize 1570                               __pnvCOMRAM 006A  
                    _enable_signal_8bits 1510                   lcd_8bit_initialize@lcd 005F  
                 lcd_8bit_initialize@ret 0061                        led_turn_off@F3072 0067  
                   ??_lcd_8bit_send_char 005B                     ?_enable_signal_8bits 0058  
                          _keypad_values 0001                     led_turn_toggle@F3077 0066  
                         _tris_registers 0025                                  __Hparam 0000  
                                __Lparam 0000                   ??_lcd_8bit_send_string 0062  
                    _gpio_pin_initialize 149C                    _lcd_8bit_send_command 13D6  
                           __psmallconst 1000                                  __pcinit 14DA  
                                __ramtop 1000                               _customChar 002F  
                                __ptext0 1546                                  __ptext1 12DC  
                                __ptext2 1360                                  __ptext3 1570  
                                __ptext4 1566                                  __ptext5 120A  
                                __ptext6 13D6                                  __ptext7 1510  
                                __ptext8 149C                                  __ptext9 111A  
                  ??_enable_signal_8bits 0059                                  _keypad1 0037  
                   ?_gpio_pin_initialize 0058                     end_of_initialization 1506  
                          __Lmediumconst 0000                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE     __end_of_gpio_pin_direction_intialize 111A  
           _gpio_pin_direction_intialize 1008                    ??_gpio_pin_initialize 0059  
                       ??_Ecu_initialize 0063                       relay_turn_on@F3060 0064  
                 ?_lcd_8bit_send_command 0059                   enable_signal_8bits@lcd 0058  
                          __pidataCOMRAM 144C                      start_initialization 14DA  
                    _lcd_8bit_initialize 120A                lcd_8bit_send_char@counter 005E  
          ?_gpio_pin_direction_intialize 0050                  ?_application_initialize 0050  
                   ?_lcd_8bit_initialize 005F                 lcd_8bit_send_command@lcd 0059  
               lcd_8bit_send_command@ret 005D                              __pbssCOMRAM 0063  
         __end_of_application_initialize 1578          gpio_pin_direction_intialize@ret 0056  
                  ??_lcd_8bit_initialize 0060          gpio_pin_write_logic@_pin_config 0050  
              gpio_pin_write_logic@logic 0051                              __smallconst 1000  
         ??_gpio_pin_direction_intialize 0051                  lcd_8bit_send_char@_char 005A  
            __end_of_enable_signal_8bits 1546                   gpio_pin_initialize@ret 0059  
                gpio_pin_write_logic@ret 0057                                copy_data0 14EE  
              relay_initialization@F3055 0065                  ??_lcd_8bit_send_command 005B  
                               __Hrparam 0000                                 __Lrparam 0000  
            __end_of_gpio_pin_initialize 14DA           gpio_pin_initialize@_pin_config 0058  
                               __ptext10 1008                                 isa$xinst 0000  
           __end_of_gpio_pin_write_logic 120A                    lcd_8bit_send_char@lcd 0059  
                  lcd_8bit_send_char@ret 005D                           _port_registers 0011  
                lcd_8bit_send_string@lcd 005F                  lcd_8bit_send_string@ret 0062  
                lcd_8bit_send_string@str 0060              __end_of_lcd_8bit_initialize 12DC  
           lcd_8bit_send_command@command 005A             lcd_8bit_send_command@counter 005E  
