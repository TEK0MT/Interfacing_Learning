

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 08 02:35:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 17/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4620 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   0015C2                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _keypad_values
    71   0015C2  37                 	db	55
    72   0015C3  38                 	db	56
    73   0015C4  39                 	db	57
    74   0015C5  2F                 	db	47
    75   0015C6  34                 	db	52
    76   0015C7  35                 	db	53
    77   0015C8  36                 	db	54
    78   0015C9  2A                 	db	42
    79   0015CA  31                 	db	49
    80   0015CB  32                 	db	50
    81   0015CC  33                 	db	51
    82   0015CD  2D                 	db	45
    83   0015CE  23                 	db	35
    84   0015CF  30                 	db	48
    85   0015D0  3D                 	db	61
    86   0015D1  2B                 	db	43
    87                           
    88                           ;initializer for _port_registers
    89   0015D2  80                 	db	128
    90   0015D3  0F                 	db	15
    91   0015D4  81                 	db	129
    92   0015D5  0F                 	db	15
    93   0015D6  82                 	db	130
    94   0015D7  0F                 	db	15
    95   0015D8  83                 	db	131
    96   0015D9  0F                 	db	15
    97   0015DA  84                 	db	132
    98   0015DB  0F                 	db	15
    99                           
   100                           ;initializer for _lat_registers
   101   0015DC  89                 	db	137
   102   0015DD  0F                 	db	15
   103   0015DE  8A                 	db	138
   104   0015DF  0F                 	db	15
   105   0015E0  8B                 	db	139
   106   0015E1  0F                 	db	15
   107   0015E2  8C                 	db	140
   108   0015E3  0F                 	db	15
   109   0015E4  8D                 	db	141
   110   0015E5  0F                 	db	15
   111                           
   112                           ;initializer for _tris_registers
   113   0015E6  92                 	db	146
   114   0015E7  0F                 	db	15
   115   0015E8  93                 	db	147
   116   0015E9  0F                 	db	15
   117   0015EA  94                 	db	148
   118   0015EB  0F                 	db	15
   119   0015EC  95                 	db	149
   120   0015ED  0F                 	db	15
   121   0015EE  96                 	db	150
   122   0015EF  0F                 	db	15
   123                           
   124                           ;initializer for _led1
   125   0015F0  03                 	db	3
   126                           
   127                           ;initializer for _lcd1
   128   0015F1  2A                 	db	42
   129   0015F2  3A                 	db	58
   130   0015F3  03                 	db	3
   131   0015F4  0B                 	db	11
   132   0015F5  13                 	db	19
   133   0015F6  1B                 	db	27
   134   0015F7  23                 	db	35
   135   0015F8  2B                 	db	43
   136   0015F9  33                 	db	51
   137   0015FA  3B                 	db	59
   138                           
   139                           	psect	smallconst
   140   001000                     __psmallconst:
   141                           	callstack 0
   142   001000  00                 	db	0
   143   001001                     _customChar6:
   144                           	callstack 0
   145   001001  0E                 	db	14
   146   001002  0E                 	db	14
   147   001003  1F                 	db	31
   148   001004  1F                 	db	31
   149   001005  1F                 	db	31
   150   001006  1F                 	db	31
   151   001007  1F                 	db	31
   152   001008  00                 	db	0
   153   001009                     __end_of_customChar6:
   154                           	callstack 0
   155   001009                     _customChar5:
   156                           	callstack 0
   157   001009  0E                 	db	14
   158   00100A  0A                 	db	10
   159   00100B  1F                 	db	31
   160   00100C  1F                 	db	31
   161   00100D  1F                 	db	31
   162   00100E  1F                 	db	31
   163   00100F  1F                 	db	31
   164   001010  00                 	db	0
   165   001011                     __end_of_customChar5:
   166                           	callstack 0
   167   001011                     _customChar4:
   168                           	callstack 0
   169   001011  0E                 	db	14
   170   001012  0A                 	db	10
   171   001013  11                 	db	17
   172   001014  1F                 	db	31
   173   001015  1F                 	db	31
   174   001016  1F                 	db	31
   175   001017  1F                 	db	31
   176   001018  00                 	db	0
   177   001019                     __end_of_customChar4:
   178                           	callstack 0
   179   001019                     _customChar3:
   180                           	callstack 0
   181   001019  0E                 	db	14
   182   00101A  0A                 	db	10
   183   00101B  11                 	db	17
   184   00101C  11                 	db	17
   185   00101D  1F                 	db	31
   186   00101E  1F                 	db	31
   187   00101F  1F                 	db	31
   188   001020  00                 	db	0
   189   001021                     __end_of_customChar3:
   190                           	callstack 0
   191   001021                     _customChar2:
   192                           	callstack 0
   193   001021  0E                 	db	14
   194   001022  0A                 	db	10
   195   001023  11                 	db	17
   196   001024  11                 	db	17
   197   001025  11                 	db	17
   198   001026  1F                 	db	31
   199   001027  1F                 	db	31
   200   001028  00                 	db	0
   201   001029                     __end_of_customChar2:
   202                           	callstack 0
   203   001029                     _customChar:
   204                           	callstack 0
   205   001029  0E                 	db	14
   206   00102A  0A                 	db	10
   207   00102B  11                 	db	17
   208   00102C  11                 	db	17
   209   00102D  11                 	db	17
   210   00102E  11                 	db	17
   211   00102F  1F                 	db	31
   212   001030  00                 	db	0
   213   001031                     __end_of_customChar:
   214                           	callstack 0
   215   001031                     _customChar7:
   216                           	callstack 0
   217   001031  04                 	db	4
   218   001032  0A                 	db	10
   219   001033  04                 	db	4
   220   001034  04                 	db	4
   221   001035  04                 	db	4
   222   001036  0E                 	db	14
   223   001037  15                 	db	21
   224   001038  0E                 	db	14
   225   001039                     __end_of_customChar7:
   226                           	callstack 0
   227   001039                     STR_4:
   228   001039  33                 	db	51	;'3'
   229   00103A  4F                 	db	79	;'O'
   230   00103B  4B                 	db	75	;'K'
   231   00103C  53                 	db	83	;'S'
   232   00103D  48                 	db	72	;'H'
   233   00103E  41                 	db	65	;'A'
   234   00103F  00                 	db	0
   235   001040                     STR_2:
   236   001040  25                 	db	37
   237   001041  69                 	db	105	;'i'
   238   001042  00                 	db	0
   239   001043  25                 	db	37
   240   001044  75                 	db	117	;'u'
   241   001045  00                 	db	0
   242   001046  00                 	db	0	; dummy byte at the end
   243   000000                     
   244                           	psect	nvCOMRAM
   245   00005F                     __pnvCOMRAM:
   246                           	callstack 0
   247   00005F                     _ret:
   248                           	callstack 0
   249   00005F                     	ds	1
   250   000000                     _PORTE	set	3972
   251   000000                     _PORTD	set	3971
   252   000000                     _PORTC	set	3970
   253   000000                     _PORTB	set	3969
   254   000000                     _PORTA	set	3968
   255   000000                     _LATA	set	3977
   256   000000                     _TRISA	set	3986
   257   000000                     _TRISE	set	3990
   258   000000                     _TRISD	set	3989
   259   000000                     _TRISC	set	3988
   260   000000                     _TRISB	set	3987
   261   000000                     _LATE	set	3981
   262   000000                     _LATD	set	3980
   263   000000                     _LATC	set	3979
   264   000000                     _LATB	set	3978
   265                           
   266                           ; #config settings
   267                           
   268                           	psect	cinit
   269   001634                     __pcinit:
   270                           	callstack 0
   271   001634                     start_initialization:
   272                           	callstack 0
   273   001634                     __initialization:
   274                           	callstack 0
   275                           
   276                           ; Initialize objects allocated to COMRAM (57 bytes)
   277                           ; load TBLPTR registers with __pidataCOMRAM
   278   001634  0EC2               	movlw	low __pidataCOMRAM
   279   001636  6EF6               	movwf	tblptrl,c
   280   001638  0E15               	movlw	high __pidataCOMRAM
   281   00163A  6EF7               	movwf	tblptrh,c
   282   00163C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   283   00163E  6EF8               	movwf	tblptru,c
   284   001640  EE00  F001         	lfsr	0,__pdataCOMRAM
   285   001644  EE10 F039          	lfsr	1,57
   286   001648                     copy_data0:
   287   001648  0009               	tblrd		*+
   288   00164A  CFF5 FFEE          	movff	tablat,postinc0
   289   00164E  50E5               	movf	postdec1,w,c
   290   001650  50E1               	movf	fsr1l,w,c
   291   001652  E1FA               	bnz	copy_data0
   292                           
   293                           ; Clear objects allocated to COMRAM (7 bytes)
   294   001654  EE00  F058         	lfsr	0,__pbssCOMRAM
   295   001658  0E07               	movlw	7
   296   00165A                     clear_0:
   297   00165A  6AEE               	clrf	postinc0,c
   298   00165C  06E8               	decf	wreg,f,c
   299   00165E  E1FD               	bnz	clear_0
   300   001660                     end_of_initialization:
   301                           	callstack 0
   302   001660                     __end_of__initialization:
   303                           	callstack 0
   304   001660  0E00               	movlw	low (__Lmediumconst shr (0+16))
   305   001662  6EF8               	movwf	tblptru,c
   306   001664  0100               	movlb	0
   307   001666  EFFE  F00A         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMRAM
   310   000058                     __pbssCOMRAM:
   311                           	callstack 0
   312   000058                     relay_turn_off@F3065:
   313                           	callstack 0
   314   000058                     	ds	1
   315   000059                     relay_turn_on@F3060:
   316                           	callstack 0
   317   000059                     	ds	1
   318   00005A                     relay_initialization@F3055:
   319                           	callstack 0
   320   00005A                     	ds	1
   321   00005B                     led_turn_toggle@F3077:
   322                           	callstack 0
   323   00005B                     	ds	1
   324   00005C                     led_turn_off@F3072:
   325                           	callstack 0
   326   00005C                     	ds	1
   327   00005D                     led_turn_on@F3067:
   328                           	callstack 0
   329   00005D                     	ds	1
   330   00005E                     led_initialize@F3062:
   331                           	callstack 0
   332   00005E                     	ds	1
   333                           
   334                           	psect	dataCOMRAM
   335   000001                     __pdataCOMRAM:
   336                           	callstack 0
   337   000001                     _keypad_values:
   338                           	callstack 0
   339   000001                     	ds	16
   340   000011                     _port_registers:
   341                           	callstack 0
   342   000011                     	ds	10
   343   00001B                     _lat_registers:
   344                           	callstack 0
   345   00001B                     	ds	10
   346   000025                     _tris_registers:
   347                           	callstack 0
   348   000025                     	ds	10
   349   00002F                     _led1:
   350                           	callstack 0
   351   00002F                     	ds	1
   352   000030                     _lcd1:
   353                           	callstack 0
   354   000030                     	ds	10
   355                           
   356                           	psect	cstackCOMRAM
   357   00003A                     __pcstackCOMRAM:
   358                           	callstack 0
   359   00003A                     gpio_pin_direction_intialize@_pin_config:
   360                           	callstack 0
   361   00003A                     gpio_pin_write_logic@_pin_config:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x0
   365   00003A                     	ds	1
   366   00003B                     ??_gpio_pin_direction_intialize:
   367   00003B                     gpio_pin_write_logic@logic:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x1
   371   00003B                     	ds	1
   372   00003C                     ??_gpio_pin_write_logic:
   373                           
   374                           ; 1 bytes @ 0x2
   375   00003C                     	ds	4
   376   000040                     gpio_pin_direction_intialize@ret:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x6
   380   000040                     	ds	1
   381   000041                     gpio_pin_write_logic@ret:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x7
   385   000041                     	ds	1
   386   000042                     enable_signal_8bits@lcd:
   387                           	callstack 0
   388   000042                     gpio_pin_initialize@_pin_config:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x8
   392   000042                     	ds	1
   393   000043                     lcd_8bit_send_command@lcd:
   394                           	callstack 0
   395   000043                     lcd_8bit_send_char@lcd:
   396                           	callstack 0
   397   000043                     gpio_pin_initialize@ret:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x9
   401   000043                     	ds	1
   402   000044                     lcd_8bit_send_command@command:
   403                           	callstack 0
   404   000044                     lcd_8bit_send_char@_char:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0xA
   408   000044                     	ds	1
   409   000045                     ??_lcd_8bit_send_command:
   410   000045                     ??_lcd_8bit_send_char:
   411                           
   412                           ; 1 bytes @ 0xB
   413   000045                     	ds	2
   414   000047                     lcd_8bit_send_command@ret:
   415                           	callstack 0
   416   000047                     lcd_8bit_send_char@ret:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0xD
   420   000047                     	ds	1
   421   000048                     lcd_8bit_send_command@counter:
   422                           	callstack 0
   423   000048                     lcd_8bit_send_char@counter:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0xE
   427   000048                     	ds	1
   428   000049                     lcd_8bit_initialize@lcd:
   429                           	callstack 0
   430   000049                     lcd_8bit_send_string@lcd:
   431                           	callstack 0
   432   000049                     lcd_8bits_set_cursor@lcd:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xF
   436   000049                     	ds	1
   437   00004A                     ??_lcd_8bit_initialize:
   438   00004A                     lcd_8bit_send_string@str:
   439                           	callstack 0
   440   00004A                     lcd_8bits_set_cursor@Rows:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x10
   444   00004A                     	ds	1
   445   00004B                     lcd_8bit_initialize@ret:
   446                           	callstack 0
   447   00004B                     lcd_8bit_send_string@ret:
   448                           	callstack 0
   449   00004B                     lcd_8bits_set_cursor@coloumns:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x11
   453   00004B                     	ds	1
   454   00004C                     lcd_8bit_initialize@counter:
   455                           	callstack 0
   456   00004C                     lcd_8bit_send_char_pos@lcd:
   457                           	callstack 0
   458   00004C                     lcd_8bit_send_string_pos@lcd:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x12
   462   00004C                     	ds	1
   463   00004D                     lcd_8bit_send_char_pos@Row:
   464                           	callstack 0
   465   00004D                     lcd_8bit_send_string_pos@Row:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x13
   469   00004D                     	ds	1
   470   00004E                     lcd_8bit_send_char_pos@coloumns:
   471                           	callstack 0
   472   00004E                     lcd_8bit_send_string_pos@coloumns:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x14
   476   00004E                     	ds	1
   477   00004F                     lcd_8bit_send_char_pos@_char:
   478                           	callstack 0
   479   00004F                     lcd_8bit_send_string_pos@str:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x15
   483   00004F                     	ds	1
   484   000050                     lcd_8bit_send_char_pos@ret:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x16
   488   000050                     	ds	1
   489   000051                     lcd_8bit_custom_character@lcd:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x17
   493   000051                     	ds	1
   494   000052                     lcd_8bit_custom_character@Row:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x18
   498   000052                     	ds	1
   499   000053                     lcd_8bit_custom_character@coloumns:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x19
   503   000053                     	ds	1
   504   000054                     lcd_8bit_custom_character@chr:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x1A
   508   000054                     	ds	1
   509   000055                     lcd_8bit_custom_character@mempos:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x1B
   513   000055                     	ds	1
   514   000056                     ??_lcd_8bit_custom_character:
   515                           
   516                           ; 1 bytes @ 0x1C
   517   000056                     	ds	1
   518   000057                     lcd_8bit_custom_character@counter:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x1D
   522   000057                     	ds	1
   523   000058                     
   524                           ; 1 bytes @ 0x1E
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 13 in file "application.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  2  469[None  ] int 
   537 ;; Registers used:
   538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels required when called: 6
   550 ;; This function calls:
   551 ;;		_application_initialize
   552 ;;		_lcd_8bit_custom_character
   553 ;;		_lcd_8bit_send_string_pos
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560   0015FC                     __ptext0:
   561                           	callstack 0
   562   0015FC                     _main:
   563                           	callstack 25
   564   0015FC                     
   565                           ;application.c: 15:     application_initialize();
   566   0015FC  EC6E  F00B         	call	_application_initialize	;wreg free
   567   001600                     l2677:
   568                           
   569                           ;application.c: 28:         lcd_8bit_send_string_pos(&lcd1,1,15,"3OKSHA");
   570   001600  0E30               	movlw	low _lcd1
   571   001602  6E4C               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   572   001604  0E01               	movlw	1
   573   001606  6E4D               	movwf	lcd_8bit_send_string_pos@Row^0,c
   574   001608  0E0F               	movlw	15
   575   00160A  6E4E               	movwf	lcd_8bit_send_string_pos@coloumns^0,c
   576   00160C  0E39               	movlw	low STR_4
   577   00160E  6E4F               	movwf	lcd_8bit_send_string_pos@str^0,c
   578   001610  EC50  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   579   001614                     
   580                           ;application.c: 29:         lcd_8bit_custom_character(&lcd1,2,15,customChar7,1);
   581   001614  0E30               	movlw	low _lcd1
   582   001616  6E51               	movwf	lcd_8bit_custom_character@lcd^0,c
   583   001618  0E02               	movlw	2
   584   00161A  6E52               	movwf	lcd_8bit_custom_character@Row^0,c
   585   00161C  0E0F               	movlw	15
   586   00161E  6E53               	movwf	lcd_8bit_custom_character@coloumns^0,c
   587   001620  0E31               	movlw	low _customChar7
   588   001622  6E54               	movwf	lcd_8bit_custom_character@chr^0,c
   589   001624  0E01               	movlw	1
   590   001626  6E55               	movwf	lcd_8bit_custom_character@mempos^0,c
   591   001628  EC40  F00A         	call	_lcd_8bit_custom_character	;wreg free
   592   00162C  EF00  F00B         	goto	l2677
   593   001630  EF00  F000         	goto	start
   594   001634                     __end_of_main:
   595                           	callstack 0
   596                           
   597 ;; *************** function _lcd_8bit_send_string_pos *****************
   598 ;; Defined at:
   599 ;;		line 101 in file "ECU_Layer/LCD/ecu_lcd.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  lcd             1   18[COMRAM] PTR const struct .
   602 ;;		 -> lcd1(10), 
   603 ;;  Row             1   19[COMRAM] unsigned char 
   604 ;;  coloumns        1   20[COMRAM] unsigned char 
   605 ;;  str             1   21[COMRAM] PTR unsigned char 
   606 ;;		 -> STR_4(7), 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  ret             1    0        unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      unsigned char 
   611 ;; Registers used:
   612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;Total ram usage:        4 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 4
   625 ;; This function calls:
   626 ;;		_lcd_8bit_send_string
   627 ;;		_lcd_8bits_set_cursor
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text1
   634   0016A0                     __ptext1:
   635                           	callstack 0
   636   0016A0                     _lcd_8bit_send_string_pos:
   637                           	callstack 26
   638   0016A0                     
   639                           ;ECU_Layer/LCD/ecu_lcd.c: 103:     if(((void*)0) == lcd){
   640   0016A0  504C               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   641   0016A2  A4D8               	btfss	status,2,c
   642   0016A4  EF56  F00B         	goto	u1161
   643   0016A8  EF58  F00B         	goto	u1160
   644   0016AC                     u1161:
   645   0016AC  EF5A  F00B         	goto	l2241
   646   0016B0                     u1160:
   647   0016B0                     
   648                           ;ECU_Layer/LCD/ecu_lcd.c: 105:     }
   649   0016B0  EF68  F00B         	goto	l134
   650   0016B4                     l2241:
   651   0016B4  C04C  F049         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bits_set_cursor@lcd
   652   0016B8  C04D  F04A         	movff	lcd_8bit_send_string_pos@Row,lcd_8bits_set_cursor@Rows
   653   0016BC  C04E  F04B         	movff	lcd_8bit_send_string_pos@coloumns,lcd_8bits_set_cursor@coloumns
   654   0016C0  EC8E  F009         	call	_lcd_8bits_set_cursor	;wreg free
   655   0016C4  C04C  F049         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
   656   0016C8  C04F  F04A         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
   657   0016CC  EC79  F00A         	call	_lcd_8bit_send_string	;wreg free
   658   0016D0                     l134:
   659   0016D0  0012               	return		;funcret
   660   0016D2                     __end_of_lcd_8bit_send_string_pos:
   661                           	callstack 0
   662                           
   663 ;; *************** function _lcd_8bit_send_string *****************
   664 ;; Defined at:
   665 ;;		line 89 in file "ECU_Layer/LCD/ecu_lcd.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  lcd             1   15[COMRAM] PTR const struct .
   668 ;;		 -> lcd1(10), 
   669 ;;  str             1   16[COMRAM] PTR unsigned char 
   670 ;;		 -> STR_4(7), 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  ret             1   17[COMRAM] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      unsigned char 
   675 ;; Registers used:
   676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;Total ram usage:        3 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 3
   689 ;; This function calls:
   690 ;;		_lcd_8bit_send_char
   691 ;; This function is called by:
   692 ;;		_lcd_8bit_send_string_pos
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text2
   697   0014F2                     __ptext2:
   698                           	callstack 0
   699   0014F2                     _lcd_8bit_send_string:
   700                           	callstack 26
   701   0014F2                     
   702                           ;ECU_Layer/LCD/ecu_lcd.c: 90:     std_ReturnType ret = (std_ReturnType)0x01;
   703   0014F2  0E01               	movlw	1
   704   0014F4  6E4B               	movwf	lcd_8bit_send_string@ret^0,c
   705                           
   706                           ;ECU_Layer/LCD/ecu_lcd.c: 91:     if(((void*)0) == lcd){
   707   0014F6  5049               	movf	lcd_8bit_send_string@lcd^0,w,c
   708   0014F8  A4D8               	btfss	status,2,c
   709   0014FA  EF81  F00A         	goto	u1111
   710   0014FE  EF83  F00A         	goto	u1110
   711   001502                     u1111:
   712   001502  EF94  F00A         	goto	l2191
   713   001506                     u1110:
   714   001506                     
   715                           ;ECU_Layer/LCD/ecu_lcd.c: 92:         ret = (std_ReturnType)0x00;
   716   001506  0E00               	movlw	0
   717   001508  6E4B               	movwf	lcd_8bit_send_string@ret^0,c
   718                           
   719                           ;ECU_Layer/LCD/ecu_lcd.c: 93:     }
   720   00150A  EFA2  F00A         	goto	l2193
   721   00150E                     l2187:
   722                           
   723                           ;ECU_Layer/LCD/ecu_lcd.c: 96:             ret = lcd_8bit_send_char(lcd,*str++);
   724   00150E  C049  F043         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char@lcd
   725   001512  C04A  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   726   001516                     	if	1	;There is more than 1 active tblptr byte
   727   001516  0E10               	movlw	high __smallconst
   728   001518  6EF7               	movwf	tblptrh,c
   729   00151A                     	endif
   730   00151A                     	if	0	;tblptru may be non-zero
   731   00151A                     	endif
   732   00151A                     	if	0	;tblptru may be non-zero
   733   00151A                     	endif
   734   00151A  0008               	tblrd		*
   735   00151C  CFF5 F044          	movff	tablat,lcd_8bit_send_char@_char
   736   001520  ECCA  F009         	call	_lcd_8bit_send_char	;wreg free
   737   001524  6E4B               	movwf	lcd_8bit_send_string@ret^0,c
   738   001526  2A4A               	incf	lcd_8bit_send_string@str^0,f,c
   739   001528                     l2191:
   740                           
   741                           ;ECU_Layer/LCD/ecu_lcd.c: 95:         while(*str){
   742   001528  C04A  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
   743   00152C                     	if	1	;There is more than 1 active tblptr byte
   744   00152C  0E10               	movlw	high __smallconst
   745   00152E  6EF7               	movwf	tblptrh,c
   746   001530                     	endif
   747   001530                     	if	0	;tblptru may be non-zero
   748   001530                     	endif
   749   001530                     	if	0	;tblptru may be non-zero
   750   001530                     	endif
   751   001530  0008               	tblrd		*
   752   001532  50F5               	movf	tablat,w,c
   753   001534  0900               	iorlw	0
   754   001536  A4D8               	btfss	status,2,c
   755   001538  EFA0  F00A         	goto	u1121
   756   00153C  EFA2  F00A         	goto	u1120
   757   001540                     u1121:
   758   001540  EF87  F00A         	goto	l2187
   759   001544                     u1120:
   760   001544                     l2193:
   761                           
   762                           ;ECU_Layer/LCD/ecu_lcd.c: 99:     return ret;
   763   001544  504B               	movf	lcd_8bit_send_string@ret^0,w,c
   764   001546  0012               	return		;funcret
   765   001548                     __end_of_lcd_8bit_send_string:
   766                           	callstack 0
   767                           
   768 ;; *************** function _lcd_8bit_custom_character *****************
   769 ;; Defined at:
   770 ;;		line 114 in file "ECU_Layer/LCD/ecu_lcd.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  lcd             1   23[COMRAM] PTR const struct .
   773 ;;		 -> lcd1(10), 
   774 ;;  Row             1   24[COMRAM] unsigned char 
   775 ;;  coloumns        1   25[COMRAM] unsigned char 
   776 ;;  chr             1   26[COMRAM] PTR unsigned char 
   777 ;;		 -> customChar7(8), 
   778 ;;  mempos          1   27[COMRAM] unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  counter         1   29[COMRAM] unsigned char 
   781 ;;  ret             1    0        unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      unsigned char 
   784 ;; Registers used:
   785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   791 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;Total ram usage:        7 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 5
   798 ;; This function calls:
   799 ;;		_lcd_8bit_send_char
   800 ;;		_lcd_8bit_send_char_pos
   801 ;;		_lcd_8bit_send_command
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text3
   808   001480                     __ptext3:
   809                           	callstack 0
   810   001480                     _lcd_8bit_custom_character:
   811                           	callstack 25
   812   001480                     
   813                           ;ECU_Layer/LCD/ecu_lcd.c: 116:     uint8 counter = 0;
   814   001480  0E00               	movlw	0
   815   001482  6E57               	movwf	lcd_8bit_custom_character@counter^0,c
   816                           
   817                           ;ECU_Layer/LCD/ecu_lcd.c: 117:     if(((void*)0) == lcd){
   818   001484  5051               	movf	lcd_8bit_custom_character@lcd^0,w,c
   819   001486  A4D8               	btfss	status,2,c
   820   001488  EF48  F00A         	goto	u1171
   821   00148C  EF4A  F00A         	goto	u1170
   822   001490                     u1171:
   823   001490  EF4C  F00A         	goto	l2251
   824   001494                     u1170:
   825   001494                     
   826                           ;ECU_Layer/LCD/ecu_lcd.c: 119:     }
   827   001494  EF78  F00A         	goto	l141
   828   001498                     l2251:
   829   001498  C051  F043         	movff	lcd_8bit_custom_character@lcd,lcd_8bit_send_command@lcd
   830   00149C  5055               	movf	lcd_8bit_custom_character@mempos^0,w,c
   831   00149E  0D08               	mullw	8
   832   0014A0  50F3               	movf	243,w,c
   833   0014A2  0F40               	addlw	64
   834   0014A4  6E44               	movwf	lcd_8bit_send_command@command^0,c
   835   0014A6  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
   836   0014AA                     
   837                           ;ECU_Layer/LCD/ecu_lcd.c: 123:         for(counter = 0;counter <= 7;counter++){
   838   0014AA  0E00               	movlw	0
   839   0014AC  6E57               	movwf	lcd_8bit_custom_character@counter^0,c
   840   0014AE                     l2259:
   841   0014AE  C051  F043         	movff	lcd_8bit_custom_character@lcd,lcd_8bit_send_char@lcd
   842   0014B2  5054               	movf	lcd_8bit_custom_character@chr^0,w,c
   843   0014B4  2457               	addwf	lcd_8bit_custom_character@counter^0,w,c
   844   0014B6  6E56               	movwf	??_lcd_8bit_custom_character^0,c
   845   0014B8  C056  FFF6         	movff	??_lcd_8bit_custom_character,tblptrl
   846   0014BC                     	if	1	;There is more than 1 active tblptr byte
   847   0014BC  0E10               	movlw	high __smallconst
   848   0014BE  6EF7               	movwf	tblptrh,c
   849   0014C0                     	endif
   850   0014C0                     	if	0	;tblptru may be non-zero
   851   0014C0                     	endif
   852   0014C0                     	if	0	;tblptru may be non-zero
   853   0014C0                     	endif
   854   0014C0  0008               	tblrd		*
   855   0014C2  CFF5 F044          	movff	tablat,lcd_8bit_send_char@_char
   856   0014C6  ECCA  F009         	call	_lcd_8bit_send_char	;wreg free
   857   0014CA                     
   858                           ;ECU_Layer/LCD/ecu_lcd.c: 125:         }
   859   0014CA  2A57               	incf	lcd_8bit_custom_character@counter^0,f,c
   860   0014CC  0E07               	movlw	7
   861   0014CE  6457               	cpfsgt	lcd_8bit_custom_character@counter^0,c
   862   0014D0  EF6C  F00A         	goto	u1181
   863   0014D4  EF6E  F00A         	goto	u1180
   864   0014D8                     u1181:
   865   0014D8  EF57  F00A         	goto	l2259
   866   0014DC                     u1180:
   867   0014DC  C051  F04C         	movff	lcd_8bit_custom_character@lcd,lcd_8bit_send_char_pos@lcd
   868   0014E0  C052  F04D         	movff	lcd_8bit_custom_character@Row,lcd_8bit_send_char_pos@Row
   869   0014E4  C053  F04E         	movff	lcd_8bit_custom_character@coloumns,lcd_8bit_send_char_pos@coloumns
   870   0014E8  C055  F04F         	movff	lcd_8bit_custom_character@mempos,lcd_8bit_send_char_pos@_char
   871   0014EC  ECC3  F00A         	call	_lcd_8bit_send_char_pos	;wreg free
   872   0014F0                     l141:
   873   0014F0  0012               	return		;funcret
   874   0014F2                     __end_of_lcd_8bit_custom_character:
   875                           	callstack 0
   876                           
   877 ;; *************** function _lcd_8bit_send_char_pos *****************
   878 ;; Defined at:
   879 ;;		line 77 in file "ECU_Layer/LCD/ecu_lcd.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  lcd             1   18[COMRAM] PTR const struct .
   882 ;;		 -> lcd1(10), 
   883 ;;  Row             1   19[COMRAM] unsigned char 
   884 ;;  coloumns        1   20[COMRAM] unsigned char 
   885 ;;  _char           1   21[COMRAM] unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  ret             1   22[COMRAM] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      unsigned char 
   890 ;; Registers used:
   891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:        5 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 4
   904 ;; This function calls:
   905 ;;		_lcd_8bit_send_char
   906 ;;		_lcd_8bits_set_cursor
   907 ;; This function is called by:
   908 ;;		_lcd_8bit_custom_character
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text4
   913   001586                     __ptext4:
   914                           	callstack 0
   915   001586                     _lcd_8bit_send_char_pos:
   916                           	callstack 25
   917   001586                     
   918                           ;ECU_Layer/LCD/ecu_lcd.c: 78:     std_ReturnType ret = (std_ReturnType)0x01;
   919   001586  0E01               	movlw	1
   920   001588  6E50               	movwf	lcd_8bit_send_char_pos@ret^0,c
   921                           
   922                           ;ECU_Layer/LCD/ecu_lcd.c: 79:     if(((void*)0) == lcd){
   923   00158A  504C               	movf	lcd_8bit_send_char_pos@lcd^0,w,c
   924   00158C  A4D8               	btfss	status,2,c
   925   00158E  EFCB  F00A         	goto	u1101
   926   001592  EFCD  F00A         	goto	u1100
   927   001596                     u1101:
   928   001596  EFD1  F00A         	goto	l2177
   929   00159A                     u1100:
   930   00159A                     
   931                           ;ECU_Layer/LCD/ecu_lcd.c: 80:         ret = (std_ReturnType)0x00;
   932   00159A  0E00               	movlw	0
   933   00159C  6E50               	movwf	lcd_8bit_send_char_pos@ret^0,c
   934                           
   935                           ;ECU_Layer/LCD/ecu_lcd.c: 81:     }
   936   00159E  EFDF  F00A         	goto	l2179
   937   0015A2                     l2177:
   938                           
   939                           ;ECU_Layer/LCD/ecu_lcd.c: 83:         lcd_8bits_set_cursor(lcd,Row,coloumns);
   940   0015A2  C04C  F049         	movff	lcd_8bit_send_char_pos@lcd,lcd_8bits_set_cursor@lcd
   941   0015A6  C04D  F04A         	movff	lcd_8bit_send_char_pos@Row,lcd_8bits_set_cursor@Rows
   942   0015AA  C04E  F04B         	movff	lcd_8bit_send_char_pos@coloumns,lcd_8bits_set_cursor@coloumns
   943   0015AE  EC8E  F009         	call	_lcd_8bits_set_cursor	;wreg free
   944                           
   945                           ;ECU_Layer/LCD/ecu_lcd.c: 84:         lcd_8bit_send_char(lcd,_char);
   946   0015B2  C04C  F043         	movff	lcd_8bit_send_char_pos@lcd,lcd_8bit_send_char@lcd
   947   0015B6  C04F  F044         	movff	lcd_8bit_send_char_pos@_char,lcd_8bit_send_char@_char
   948   0015BA  ECCA  F009         	call	_lcd_8bit_send_char	;wreg free
   949   0015BE                     l2179:
   950                           
   951                           ;ECU_Layer/LCD/ecu_lcd.c: 86:     return ret;
   952   0015BE  5050               	movf	lcd_8bit_send_char_pos@ret^0,w,c
   953   0015C0  0012               	return		;funcret
   954   0015C2                     __end_of_lcd_8bit_send_char_pos:
   955                           	callstack 0
   956                           
   957 ;; *************** function _lcd_8bits_set_cursor *****************
   958 ;; Defined at:
   959 ;;		line 339 in file "ECU_Layer/LCD/ecu_lcd.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  lcd             1   15[COMRAM] PTR const struct .
   962 ;;		 -> lcd1(10), 
   963 ;;  Rows            1   16[COMRAM] unsigned char 
   964 ;;  coloumns        1   17[COMRAM] unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  ret             1    0        unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      unsigned char 
   969 ;; Registers used:
   970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        3 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 3
   983 ;; This function calls:
   984 ;;		_lcd_8bit_send_command
   985 ;; This function is called by:
   986 ;;		_lcd_8bit_send_char_pos
   987 ;;		_lcd_8bit_send_string_pos
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text5
   992   00131C                     __ptext5:
   993                           	callstack 0
   994   00131C                     _lcd_8bits_set_cursor:
   995                           	callstack 26
   996   00131C                     
   997                           ;ECU_Layer/LCD/ecu_lcd.c: 341:     coloumns--;
   998   00131C  064B               	decf	lcd_8bits_set_cursor@coloumns^0,f,c
   999                           
  1000                           ;ECU_Layer/LCD/ecu_lcd.c: 343:         switch(Rows){
  1001   00131E  EFB5  F009         	goto	l2167
  1002   001322                     l2157:
  1003   001322  C049  F043         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
  1004   001326  504B               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
  1005   001328  0F80               	addlw	128
  1006   00132A  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1007   00132C  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1008   001330  EFC8  F009         	goto	l2169
  1009   001334                     l2159:
  1010   001334  C049  F043         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
  1011   001338  504B               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
  1012   00133A  0FC0               	addlw	192
  1013   00133C  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1014   00133E  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1015   001342  EFC8  F009         	goto	l2169
  1016   001346                     l2161:
  1017   001346  C049  F043         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
  1018   00134A  504B               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
  1019   00134C  0F94               	addlw	148
  1020   00134E  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1021   001350  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1022   001354  EFC8  F009         	goto	l2169
  1023   001358                     l2163:
  1024   001358  C049  F043         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
  1025   00135C  504B               	movf	lcd_8bits_set_cursor@coloumns^0,w,c
  1026   00135E  0FD4               	addlw	212
  1027   001360  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1028   001362  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1029   001366  EFC8  F009         	goto	l2169
  1030   00136A                     l2167:
  1031   00136A  504A               	movf	lcd_8bits_set_cursor@Rows^0,w,c
  1032                           
  1033                           ; Switch size 1, requested type "simple"
  1034                           ; Number of cases is 4, Range of values is 1 to 4
  1035                           ; switch strategies available:
  1036                           ; Name         Instructions Cycles
  1037                           ; simple_byte           13     7 (average)
  1038                           ;	Chosen strategy is simple_byte
  1039   00136C  0A01               	xorlw	1	; case 1
  1040   00136E  B4D8               	btfsc	status,2,c
  1041   001370  EF91  F009         	goto	l2157
  1042   001374  0A03               	xorlw	3	; case 2
  1043   001376  B4D8               	btfsc	status,2,c
  1044   001378  EF9A  F009         	goto	l2159
  1045   00137C  0A01               	xorlw	1	; case 3
  1046   00137E  B4D8               	btfsc	status,2,c
  1047   001380  EFA3  F009         	goto	l2161
  1048   001384  0A07               	xorlw	7	; case 4
  1049   001386  B4D8               	btfsc	status,2,c
  1050   001388  EFAC  F009         	goto	l2163
  1051   00138C  EFC8  F009         	goto	l2169
  1052   001390                     l2169:
  1053                           
  1054                           ;ECU_Layer/LCD/ecu_lcd.c: 352:     return ret;
  1055   001390  0E01               	movlw	1
  1056   001392  0012               	return		;funcret
  1057   001394                     __end_of_lcd_8bits_set_cursor:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _lcd_8bit_send_char *****************
  1061 ;; Defined at:
  1062 ;;		line 62 in file "ECU_Layer/LCD/ecu_lcd.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  lcd             1    9[COMRAM] PTR const struct .
  1065 ;;		 -> lcd1(10), 
  1066 ;;  _char           1   10[COMRAM] unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  counter         1   14[COMRAM] unsigned char 
  1069 ;;  ret             1   13[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      unsigned char 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;Total ram usage:        6 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 2
  1086 ;; This function calls:
  1087 ;;		_enable_signal_8bits
  1088 ;;		_gpio_pin_write_logic
  1089 ;; This function is called by:
  1090 ;;		_lcd_8bit_send_char_pos
  1091 ;;		_lcd_8bit_send_string
  1092 ;;		_lcd_8bit_custom_character
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text6
  1097   001394                     __ptext6:
  1098                           	callstack 0
  1099   001394                     _lcd_8bit_send_char:
  1100                           	callstack 26
  1101   001394                     
  1102                           ;ECU_Layer/LCD/ecu_lcd.c: 64:     uint8 counter = 0;
  1103   001394  0E00               	movlw	0
  1104   001396  6E48               	movwf	lcd_8bit_send_char@counter^0,c
  1105                           
  1106                           ;ECU_Layer/LCD/ecu_lcd.c: 65:     if(((void*)0) == lcd){
  1107   001398  5043               	movf	lcd_8bit_send_char@lcd^0,w,c
  1108   00139A  A4D8               	btfss	status,2,c
  1109   00139C  EFD2  F009         	goto	u1071
  1110   0013A0  EFD4  F009         	goto	u1070
  1111   0013A4                     u1071:
  1112   0013A4  EFD8  F009         	goto	l2133
  1113   0013A8                     u1070:
  1114   0013A8                     
  1115                           ;ECU_Layer/LCD/ecu_lcd.c: 66:         ret = (std_ReturnType)0x00;
  1116   0013A8  0E00               	movlw	0
  1117   0013AA  6E47               	movwf	lcd_8bit_send_char@ret^0,c
  1118                           
  1119                           ;ECU_Layer/LCD/ecu_lcd.c: 67:     }
  1120   0013AC  EF03  F00A         	goto	l2149
  1121   0013B0                     l2133:
  1122   0013B0  C043  F03A         	movff	lcd_8bit_send_char@lcd,gpio_pin_write_logic@_pin_config
  1123   0013B4  0E01               	movlw	1
  1124   0013B6  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1125   0013B8  ECAD  F008         	call	_gpio_pin_write_logic	;wreg free
  1126   0013BC                     
  1127                           ;ECU_Layer/LCD/ecu_lcd.c: 70:         for(counter = 0;counter < 8;counter++){
  1128   0013BC  0E00               	movlw	0
  1129   0013BE  6E48               	movwf	lcd_8bit_send_char@counter^0,c
  1130   0013C0                     l2141:
  1131                           
  1132                           ;ECU_Layer/LCD/ecu_lcd.c: 71:             ret = gpio_pin_write_logic(&(lcd->data_pins[co
      +                          unter]),(_char >> counter) & (uint8)0x01);
  1133   0013C0  5043               	movf	lcd_8bit_send_char@lcd^0,w,c
  1134   0013C2  2448               	addwf	lcd_8bit_send_char@counter^0,w,c
  1135   0013C4  0F02               	addlw	2
  1136   0013C6  6E3A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1137   0013C8  C048  F045         	movff	lcd_8bit_send_char@counter,??_lcd_8bit_send_char
  1138   0013CC  C044  F046         	movff	lcd_8bit_send_char@_char,??_lcd_8bit_send_char+1
  1139   0013D0  2A45               	incf	??_lcd_8bit_send_char^0,f,c
  1140   0013D2  EFED  F009         	goto	u1084
  1141   0013D6                     u1085:
  1142   0013D6  90D8               	bcf	status,0,c
  1143   0013D8  3246               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
  1144   0013DA                     u1084:
  1145   0013DA  2E45               	decfsz	??_lcd_8bit_send_char^0,f,c
  1146   0013DC  EFEB  F009         	goto	u1085
  1147   0013E0  5046               	movf	(??_lcd_8bit_send_char+1)^0,w,c
  1148   0013E2  0B01               	andlw	1
  1149   0013E4  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1150   0013E6  ECAD  F008         	call	_gpio_pin_write_logic	;wreg free
  1151   0013EA  6E47               	movwf	lcd_8bit_send_char@ret^0,c
  1152   0013EC                     
  1153                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         }
  1154   0013EC  2A48               	incf	lcd_8bit_send_char@counter^0,f,c
  1155   0013EE  0E07               	movlw	7
  1156   0013F0  6448               	cpfsgt	lcd_8bit_send_char@counter^0,c
  1157   0013F2  EFFD  F009         	goto	u1091
  1158   0013F6  EFFF  F009         	goto	u1090
  1159   0013FA                     u1091:
  1160   0013FA  EFE0  F009         	goto	l2141
  1161   0013FE                     u1090:
  1162   0013FE                     
  1163                           ;ECU_Layer/LCD/ecu_lcd.c: 73:         enable_signal_8bits(lcd);
  1164   0013FE  C043  F042         	movff	lcd_8bit_send_char@lcd,enable_signal_8bits@lcd
  1165   001402  EC35  F00B         	call	_enable_signal_8bits	;wreg free
  1166   001406                     l2149:
  1167                           
  1168                           ;ECU_Layer/LCD/ecu_lcd.c: 75:     return ret;
  1169   001406  5047               	movf	lcd_8bit_send_char@ret^0,w,c
  1170   001408  0012               	return		;funcret
  1171   00140A                     __end_of_lcd_8bit_send_char:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _application_initialize *****************
  1175 ;; Defined at:
  1176 ;;		line 36 in file "application.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 5
  1197 ;; This function calls:
  1198 ;;		_Ecu_initialize
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text7
  1205   0016DC                     __ptext7:
  1206                           	callstack 0
  1207   0016DC                     _application_initialize:
  1208                           	callstack 25
  1209   0016DC                     
  1210                           ;application.c: 37:     ret = Ecu_initialize();
  1211   0016DC  EC69  F00B         	call	_Ecu_initialize	;wreg free
  1212   0016E0  6E5F               	movwf	_ret^0,c
  1213   0016E2  0012               	return		;funcret
  1214   0016E4                     __end_of_application_initialize:
  1215                           	callstack 0
  1216                           
  1217 ;; *************** function _Ecu_initialize *****************
  1218 ;; Defined at:
  1219 ;;		line 40 in file "ECU_Layer/ECU_LAYER.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      unsigned char 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 4
  1240 ;; This function calls:
  1241 ;;		_lcd_8bit_initialize
  1242 ;; This function is called by:
  1243 ;;		_application_initialize
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text8
  1248   0016D2                     __ptext8:
  1249                           	callstack 0
  1250   0016D2                     _Ecu_initialize:
  1251                           	callstack 25
  1252   0016D2                     
  1253                           ;ECU_Layer/ECU_LAYER.c: 43:     lcd_8bit_initialize(&lcd1);
  1254   0016D2  0E30               	movlw	low _lcd1
  1255   0016D4  6E49               	movwf	lcd_8bit_initialize@lcd^0,c
  1256   0016D6  EC25  F009         	call	_lcd_8bit_initialize	;wreg free
  1257   0016DA  0012               	return		;funcret
  1258   0016DC                     __end_of_Ecu_initialize:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _lcd_8bit_initialize *****************
  1262 ;; Defined at:
  1263 ;;		line 19 in file "ECU_Layer/LCD/ecu_lcd.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  lcd             1   15[COMRAM] PTR const struct .
  1266 ;;		 -> lcd1(10), 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  counter         1   18[COMRAM] unsigned char 
  1269 ;;  ret             1   17[COMRAM] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      unsigned char 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1279 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        4 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 3
  1286 ;; This function calls:
  1287 ;;		_gpio_pin_initialize
  1288 ;;		_lcd_8bit_send_command
  1289 ;; This function is called by:
  1290 ;;		_Ecu_initialize
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text9
  1295   00124A                     __ptext9:
  1296                           	callstack 0
  1297   00124A                     _lcd_8bit_initialize:
  1298                           	callstack 25
  1299   00124A                     
  1300                           ;ECU_Layer/LCD/ecu_lcd.c: 21:     uint8 counter = 0;
  1301   00124A  0E00               	movlw	0
  1302   00124C  6E4C               	movwf	lcd_8bit_initialize@counter^0,c
  1303                           
  1304                           ;ECU_Layer/LCD/ecu_lcd.c: 22:     if(((void*)0) == lcd){
  1305   00124E  5049               	movf	lcd_8bit_initialize@lcd^0,w,c
  1306   001250  A4D8               	btfss	status,2,c
  1307   001252  EF2D  F009         	goto	u1051
  1308   001256  EF2F  F009         	goto	u1050
  1309   00125A                     u1051:
  1310   00125A  EF31  F009         	goto	l2093
  1311   00125E                     u1050:
  1312   00125E                     
  1313                           ;ECU_Layer/LCD/ecu_lcd.c: 24:     }
  1314   00125E  EF8D  F009         	goto	l102
  1315   001262                     l2093:
  1316                           
  1317                           ;ECU_Layer/LCD/ecu_lcd.c: 26:         ret = gpio_pin_initialize(&(lcd->rs));
  1318   001262  C049  F042         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1319   001266  ECA4  F00A         	call	_gpio_pin_initialize	;wreg free
  1320   00126A  6E4B               	movwf	lcd_8bit_initialize@ret^0,c
  1321                           
  1322                           ;ECU_Layer/LCD/ecu_lcd.c: 27:         ret = gpio_pin_initialize(&(lcd->enable));
  1323   00126C  2849               	incf	lcd_8bit_initialize@lcd^0,w,c
  1324   00126E  6E42               	movwf	gpio_pin_initialize@_pin_config^0,c
  1325   001270  ECA4  F00A         	call	_gpio_pin_initialize	;wreg free
  1326   001274  6E4B               	movwf	lcd_8bit_initialize@ret^0,c
  1327   001276                     
  1328                           ;ECU_Layer/LCD/ecu_lcd.c: 28:         for(counter = 0;counter < 8;counter++){
  1329   001276  0E00               	movlw	0
  1330   001278  6E4C               	movwf	lcd_8bit_initialize@counter^0,c
  1331   00127A                     l2101:
  1332   00127A  5049               	movf	lcd_8bit_initialize@lcd^0,w,c
  1333   00127C  244C               	addwf	lcd_8bit_initialize@counter^0,w,c
  1334   00127E  0F02               	addlw	2
  1335   001280  6E42               	movwf	gpio_pin_initialize@_pin_config^0,c
  1336   001282  ECA4  F00A         	call	_gpio_pin_initialize	;wreg free
  1337   001286                     
  1338                           ;ECU_Layer/LCD/ecu_lcd.c: 30:         }
  1339   001286  2A4C               	incf	lcd_8bit_initialize@counter^0,f,c
  1340   001288  0E07               	movlw	7
  1341   00128A  644C               	cpfsgt	lcd_8bit_initialize@counter^0,c
  1342   00128C  EF4A  F009         	goto	u1061
  1343   001290  EF4C  F009         	goto	u1060
  1344   001294                     u1061:
  1345   001294  EF3D  F009         	goto	l2101
  1346   001298                     u1060:
  1347   001298                     
  1348                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1349   001298  0E34               	movlw	52
  1350   00129A  6E4A               	movwf	??_lcd_8bit_initialize^0,c
  1351   00129C  0EF2               	movlw	242
  1352   00129E                     u1607:
  1353   00129E  2EE8               	decfsz	wreg,f,c
  1354   0012A0  D7FE               	bra	u1607
  1355   0012A2  2E4A               	decfsz	??_lcd_8bit_initialize^0,f,c
  1356   0012A4  D7FC               	bra	u1607
  1357   0012A6                     
  1358                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         lcd_8bit_send_command(lcd,0x38);
  1359   0012A6  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1360   0012AA  0E38               	movlw	56
  1361   0012AC  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1362   0012AE  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1363   0012B2                     
  1364                           ;ECU_Layer/LCD/ecu_lcd.c: 33:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1365   0012B2  0E0D               	movlw	13
  1366   0012B4  6E4A               	movwf	??_lcd_8bit_initialize^0,c
  1367   0012B6  0EFC               	movlw	252
  1368   0012B8                     u1617:
  1369   0012B8  2EE8               	decfsz	wreg,f,c
  1370   0012BA  D7FE               	bra	u1617
  1371   0012BC  2E4A               	decfsz	??_lcd_8bit_initialize^0,f,c
  1372   0012BE  D7FC               	bra	u1617
  1373                           
  1374                           ;ECU_Layer/LCD/ecu_lcd.c: 34:         lcd_8bit_send_command(lcd,0x38);
  1375   0012C0  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1376   0012C4  0E38               	movlw	56
  1377   0012C6  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1378   0012C8  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1379   0012CC                     
  1380                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         _delay((unsigned long)((150)*(8000000/4000000.0)))
      +                          ;
  1381   0012CC  0E64               	movlw	100
  1382   0012CE                     u1627:
  1383   0012CE  2EE8               	decfsz	wreg,f,c
  1384   0012D0  D7FE               	bra	u1627
  1385   0012D2                     
  1386                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         lcd_8bit_send_command(lcd,0x38);
  1387   0012D2  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1388   0012D6  0E38               	movlw	56
  1389   0012D8  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1390   0012DA  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1391   0012DE                     
  1392                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         lcd_8bit_send_command(lcd,0x01);
  1393   0012DE  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1394   0012E2  0E01               	movlw	1
  1395   0012E4  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1396   0012E6  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1397   0012EA                     
  1398                           ;ECU_Layer/LCD/ecu_lcd.c: 38:         lcd_8bit_send_command(lcd,0x02);
  1399   0012EA  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1400   0012EE  0E02               	movlw	2
  1401   0012F0  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1402   0012F2  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1403   0012F6                     
  1404                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         lcd_8bit_send_command(lcd,0x06);
  1405   0012F6  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1406   0012FA  0E06               	movlw	6
  1407   0012FC  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1408   0012FE  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1409   001302                     
  1410                           ;ECU_Layer/LCD/ecu_lcd.c: 40:         lcd_8bit_send_command(lcd,0x0C);
  1411   001302  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1412   001306  0E0C               	movlw	12
  1413   001308  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1414   00130A  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1415   00130E                     
  1416                           ;ECU_Layer/LCD/ecu_lcd.c: 41:         lcd_8bit_send_command(lcd,0x38);
  1417   00130E  C049  F043         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1418   001312  0E38               	movlw	56
  1419   001314  6E44               	movwf	lcd_8bit_send_command@command^0,c
  1420   001316  EC05  F00A         	call	_lcd_8bit_send_command	;wreg free
  1421   00131A                     l102:
  1422   00131A  0012               	return		;funcret
  1423   00131C                     __end_of_lcd_8bit_initialize:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _lcd_8bit_send_command *****************
  1427 ;; Defined at:
  1428 ;;		line 45 in file "ECU_Layer/LCD/ecu_lcd.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  lcd             1    9[COMRAM] PTR const struct .
  1431 ;;		 -> lcd1(10), 
  1432 ;;  command         1   10[COMRAM] unsigned char 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  counter         1   14[COMRAM] unsigned char 
  1435 ;;  ret             1   13[COMRAM] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      unsigned char 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:        6 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 2
  1452 ;; This function calls:
  1453 ;;		_enable_signal_8bits
  1454 ;;		_gpio_pin_write_logic
  1455 ;; This function is called by:
  1456 ;;		_lcd_8bit_initialize
  1457 ;;		_lcd_8bit_custom_character
  1458 ;;		_lcd_8bits_set_cursor
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text10
  1463   00140A                     __ptext10:
  1464                           	callstack 0
  1465   00140A                     _lcd_8bit_send_command:
  1466                           	callstack 26
  1467   00140A                     
  1468                           ;ECU_Layer/LCD/ecu_lcd.c: 48:     uint8 counter = 0;
  1469   00140A  0E00               	movlw	0
  1470   00140C  6E48               	movwf	lcd_8bit_send_command@counter^0,c
  1471                           
  1472                           ;ECU_Layer/LCD/ecu_lcd.c: 49:     if(((void*)0) == lcd){
  1473   00140E  5043               	movf	lcd_8bit_send_command@lcd^0,w,c
  1474   001410  A4D8               	btfss	status,2,c
  1475   001412  EF0D  F00A         	goto	u1021
  1476   001416  EF0F  F00A         	goto	u1020
  1477   00141A                     u1021:
  1478   00141A  EF13  F00A         	goto	l2069
  1479   00141E                     u1020:
  1480   00141E                     
  1481                           ;ECU_Layer/LCD/ecu_lcd.c: 50:         ret = (std_ReturnType)0x00;
  1482   00141E  0E00               	movlw	0
  1483   001420  6E47               	movwf	lcd_8bit_send_command@ret^0,c
  1484                           
  1485                           ;ECU_Layer/LCD/ecu_lcd.c: 51:     }
  1486   001422  EF3E  F00A         	goto	l2085
  1487   001426                     l2069:
  1488   001426  C043  F03A         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1489   00142A  0E00               	movlw	0
  1490   00142C  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1491   00142E  ECAD  F008         	call	_gpio_pin_write_logic	;wreg free
  1492   001432                     
  1493                           ;ECU_Layer/LCD/ecu_lcd.c: 54:         for(counter = 0;counter < 8;counter++){
  1494   001432  0E00               	movlw	0
  1495   001434  6E48               	movwf	lcd_8bit_send_command@counter^0,c
  1496   001436                     l2077:
  1497                           
  1498                           ;ECU_Layer/LCD/ecu_lcd.c: 55:             ret = gpio_pin_write_logic(&(lcd->data_pins[co
      +                          unter]),(command >> counter) & (uint8)0x01);
  1499   001436  5043               	movf	lcd_8bit_send_command@lcd^0,w,c
  1500   001438  2448               	addwf	lcd_8bit_send_command@counter^0,w,c
  1501   00143A  0F02               	addlw	2
  1502   00143C  6E3A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1503   00143E  C048  F045         	movff	lcd_8bit_send_command@counter,??_lcd_8bit_send_command
  1504   001442  C044  F046         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1505   001446  2A45               	incf	??_lcd_8bit_send_command^0,f,c
  1506   001448  EF28  F00A         	goto	u1034
  1507   00144C                     u1035:
  1508   00144C  90D8               	bcf	status,0,c
  1509   00144E  3246               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1510   001450                     u1034:
  1511   001450  2E45               	decfsz	??_lcd_8bit_send_command^0,f,c
  1512   001452  EF26  F00A         	goto	u1035
  1513   001456  5046               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1514   001458  0B01               	andlw	1
  1515   00145A  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1516   00145C  ECAD  F008         	call	_gpio_pin_write_logic	;wreg free
  1517   001460  6E47               	movwf	lcd_8bit_send_command@ret^0,c
  1518   001462                     
  1519                           ;ECU_Layer/LCD/ecu_lcd.c: 56:         }
  1520   001462  2A48               	incf	lcd_8bit_send_command@counter^0,f,c
  1521   001464  0E07               	movlw	7
  1522   001466  6448               	cpfsgt	lcd_8bit_send_command@counter^0,c
  1523   001468  EF38  F00A         	goto	u1041
  1524   00146C  EF3A  F00A         	goto	u1040
  1525   001470                     u1041:
  1526   001470  EF1B  F00A         	goto	l2077
  1527   001474                     u1040:
  1528   001474                     
  1529                           ;ECU_Layer/LCD/ecu_lcd.c: 58:         enable_signal_8bits(lcd);
  1530   001474  C043  F042         	movff	lcd_8bit_send_command@lcd,enable_signal_8bits@lcd
  1531   001478  EC35  F00B         	call	_enable_signal_8bits	;wreg free
  1532   00147C                     l2085:
  1533                           
  1534                           ;ECU_Layer/LCD/ecu_lcd.c: 60:     return ret;
  1535   00147C  5047               	movf	lcd_8bit_send_command@ret^0,w,c
  1536   00147E  0012               	return		;funcret
  1537   001480                     __end_of_lcd_8bit_send_command:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _enable_signal_8bits *****************
  1541 ;; Defined at:
  1542 ;;		line 315 in file "ECU_Layer/LCD/ecu_lcd.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  lcd             1    8[COMRAM] PTR const struct .
  1545 ;;		 -> lcd1(10), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  ret             1    0        unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1557 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;Total ram usage:        1 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 1
  1564 ;; This function calls:
  1565 ;;		_gpio_pin_write_logic
  1566 ;; This function is called by:
  1567 ;;		_lcd_8bit_send_command
  1568 ;;		_lcd_8bit_send_char
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text11
  1573   00166A                     __ptext11:
  1574                           	callstack 0
  1575   00166A                     _enable_signal_8bits:
  1576                           	callstack 26
  1577   00166A                     
  1578                           ;ECU_Layer/LCD/ecu_lcd.c: 317:     if(((void*)0) == lcd){
  1579   00166A  5042               	movf	enable_signal_8bits@lcd^0,w,c
  1580   00166C  A4D8               	btfss	status,2,c
  1581   00166E  EF3B  F00B         	goto	u1001
  1582   001672  EF3D  F00B         	goto	u1000
  1583   001676                     u1001:
  1584   001676  EF3F  F00B         	goto	l2047
  1585   00167A                     u1000:
  1586   00167A                     
  1587                           ;ECU_Layer/LCD/ecu_lcd.c: 319:     }
  1588   00167A  EF4F  F00B         	goto	l211
  1589   00167E                     l2047:
  1590   00167E  2842               	incf	enable_signal_8bits@lcd^0,w,c
  1591   001680  6E3A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1592   001682  0E01               	movlw	1
  1593   001684  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1594   001686  ECAD  F008         	call	_gpio_pin_write_logic	;wreg free
  1595   00168A                     
  1596                           ;ECU_Layer/LCD/ecu_lcd.c: 322:         _delay((unsigned long)((5)*(8000000/4000000.0)));
  1597   00168A  0E03               	movlw	3
  1598   00168C                     u1637:
  1599   00168C  2EE8               	decfsz	wreg,f,c
  1600   00168E  D7FE               	bra	u1637
  1601   001690  0000               	nop	
  1602   001692  2842               	incf	enable_signal_8bits@lcd^0,w,c
  1603   001694  6E3A               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1604   001696  0E00               	movlw	0
  1605   001698  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1606   00169A  ECAD  F008         	call	_gpio_pin_write_logic	;wreg free
  1607   00169E                     l211:
  1608   00169E  0012               	return		;funcret
  1609   0016A0                     __end_of_enable_signal_8bits:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _gpio_pin_initialize *****************
  1613 ;; Defined at:
  1614 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1617 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  ret             1    9[COMRAM] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      unsigned char 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;Total ram usage:        2 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 1
  1636 ;; This function calls:
  1637 ;;		_gpio_pin_direction_intialize
  1638 ;;		_gpio_pin_write_logic
  1639 ;; This function is called by:
  1640 ;;		_lcd_8bit_initialize
  1641 ;;		_sev_seg_initialize
  1642 ;;		_keypad_initialize
  1643 ;;		_lcd_4bit_initialize
  1644 ;;		_led_initialize
  1645 ;;		_motor_initialize
  1646 ;;		_relay_initialization
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text12
  1651   001548                     __ptext12:
  1652                           	callstack 0
  1653   001548                     _gpio_pin_initialize:
  1654                           	callstack 26
  1655   001548                     
  1656                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:     std_ReturnType ret = (std_ReturnType)0x01;
  1657   001548  0E01               	movlw	1
  1658   00154A  6E43               	movwf	gpio_pin_initialize@ret^0,c
  1659                           
  1660                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config ){
  1661   00154C  5042               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1662   00154E  A4D8               	btfss	status,2,c
  1663   001550  EFAC  F00A         	goto	u1011
  1664   001554  EFAE  F00A         	goto	u1010
  1665   001558                     u1011:
  1666   001558  EFB2  F00A         	goto	l2059
  1667   00155C                     u1010:
  1668   00155C                     
  1669                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:         ret = (std_ReturnType)0x00;
  1670   00155C  0E00               	movlw	0
  1671   00155E  6E43               	movwf	gpio_pin_initialize@ret^0,c
  1672                           
  1673                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:     }
  1674   001560  EFC1  F00A         	goto	l2061
  1675   001564                     l2059:
  1676                           
  1677                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:         gpio_pin_direction_intialize(_pin_config);
  1678   001564  C042  F03A         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  1679   001568  EC24  F008         	call	_gpio_pin_direction_intialize	;wreg free
  1680                           
  1681                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:         gpio_pin_write_logic(_pin_config,_pin_config->
      +                          logic);
  1682   00156C  C042  F03A         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1683   001570  5042               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1684   001572  6ED9               	movwf	fsr2l,c
  1685   001574  6ADA               	clrf	fsr2h,c
  1686   001576  0E00               	movlw	0
  1687   001578  BEDF               	btfsc	indf2,7,c
  1688   00157A  0E01               	movlw	1
  1689   00157C  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1690   00157E  ECAD  F008         	call	_gpio_pin_write_logic	;wreg free
  1691   001582                     l2061:
  1692                           
  1693                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     return ret;
  1694   001582  5043               	movf	gpio_pin_initialize@ret^0,w,c
  1695   001584  0012               	return		;funcret
  1696   001586                     __end_of_gpio_pin_initialize:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _gpio_pin_write_logic *****************
  1700 ;; Defined at:
  1701 ;;		line 68 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1704 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  1705 ;;		 -> relay_initialization@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  1706 ;;  logic           1    1[COMRAM] enum E2981
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  ret             1    7[COMRAM] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      unsigned char 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;Total ram usage:        8 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_lcd_8bit_send_command
  1728 ;;		_lcd_8bit_send_char
  1729 ;;		_enable_signal_8bits
  1730 ;;		_gpio_pin_initialize
  1731 ;;		_sev_seg_write_number
  1732 ;;		_keypad_read_value
  1733 ;;		_lcd_4bit_send_command
  1734 ;;		_lcd_4bit_send_char
  1735 ;;		_lcd_send_8bits
  1736 ;;		_lcd_send_4bits
  1737 ;;		_enable_signal_4bits
  1738 ;;		_led_turn_on
  1739 ;;		_led_turn_off
  1740 ;;		_motor_turn_right
  1741 ;;		_motor_turn_left
  1742 ;;		_motor_stop
  1743 ;;		_relay_turn_on
  1744 ;;		_relay_turn_off
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text13
  1749   00115A                     __ptext13:
  1750                           	callstack 0
  1751   00115A                     _gpio_pin_write_logic:
  1752                           	callstack 27
  1753   00115A                     
  1754                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:     std_ReturnType ret = (std_ReturnType)0x01;
  1755   00115A  0E01               	movlw	1
  1756   00115C  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  1757                           
  1758                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:     if(((void*)0) == _pin_config){
  1759   00115E  503A               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1760   001160  A4D8               	btfss	status,2,c
  1761   001162  EFB5  F008         	goto	u921
  1762   001166  EFB7  F008         	goto	u920
  1763   00116A                     u921:
  1764   00116A  EF0E  F009         	goto	l2015
  1765   00116E                     u920:
  1766   00116E                     
  1767                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:         ret = (std_ReturnType)0x00;
  1768   00116E  0E00               	movlw	0
  1769   001170  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  1770                           
  1771                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     }
  1772   001172  EF23  F009         	goto	l2017
  1773   001176                     l2009:
  1774                           
  1775                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1<<_pin_config->pin));
  1776   001176  503A               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1777   001178  6ED9               	movwf	fsr2l,c
  1778   00117A  6ADA               	clrf	fsr2h,c
  1779   00117C  30DF               	rrcf	223,w,c
  1780   00117E  32E8               	rrcf	wreg,f,c
  1781   001180  32E8               	rrcf	wreg,f,c
  1782   001182  0B07               	andlw	7
  1783   001184  6E3C               	movwf	??_gpio_pin_write_logic^0,c
  1784   001186  0E01               	movlw	1
  1785   001188  6E3D               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1786   00118A  2A3C               	incf	??_gpio_pin_write_logic^0,f,c
  1787   00118C  EFCA  F008         	goto	u934
  1788   001190                     u935:
  1789   001190  90D8               	bcf	status,0,c
  1790   001192  363D               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1791   001194                     u934:
  1792   001194  2E3C               	decfsz	??_gpio_pin_write_logic^0,f,c
  1793   001196  EFC8  F008         	goto	u935
  1794   00119A  503D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1795   00119C  0AFF               	xorlw	255
  1796   00119E  6E3E               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1797   0011A0  503A               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1798   0011A2  6ED9               	movwf	fsr2l,c
  1799   0011A4  6ADA               	clrf	fsr2h,c
  1800   0011A6  50DF               	movf	223,w,c
  1801   0011A8  0B07               	andlw	7
  1802   0011AA  0D02               	mullw	2
  1803   0011AC  50F3               	movf	243,w,c
  1804   0011AE  0F1B               	addlw	low _lat_registers
  1805   0011B0  6ED9               	movwf	fsr2l,c
  1806   0011B2  6ADA               	clrf	fsr2h,c
  1807   0011B4  CFDE F03F          	movff	postinc2,??_gpio_pin_write_logic+3
  1808   0011B8  CFDD F040          	movff	postdec2,??_gpio_pin_write_logic+4
  1809   0011BC  C03F  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1810   0011C0  C040  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1811   0011C4  503E               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1812   0011C6  16DF               	andwf	indf2,f,c
  1813                           
  1814                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 break;
  1815   0011C8  EF23  F009         	goto	l2017
  1816   0011CC                     l2011:
  1817                           
  1818                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1<<_pin_config->pin));
  1819   0011CC  503A               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1820   0011CE  6ED9               	movwf	fsr2l,c
  1821   0011D0  6ADA               	clrf	fsr2h,c
  1822   0011D2  30DF               	rrcf	223,w,c
  1823   0011D4  32E8               	rrcf	wreg,f,c
  1824   0011D6  32E8               	rrcf	wreg,f,c
  1825   0011D8  0B07               	andlw	7
  1826   0011DA  6E3C               	movwf	??_gpio_pin_write_logic^0,c
  1827   0011DC  0E01               	movlw	1
  1828   0011DE  6E3D               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1829   0011E0  2A3C               	incf	??_gpio_pin_write_logic^0,f,c
  1830   0011E2  EFF5  F008         	goto	u944
  1831   0011E6                     u945:
  1832   0011E6  90D8               	bcf	status,0,c
  1833   0011E8  363D               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1834   0011EA                     u944:
  1835   0011EA  2E3C               	decfsz	??_gpio_pin_write_logic^0,f,c
  1836   0011EC  EFF3  F008         	goto	u945
  1837   0011F0  503A               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1838   0011F2  6ED9               	movwf	fsr2l,c
  1839   0011F4  6ADA               	clrf	fsr2h,c
  1840   0011F6  50DF               	movf	223,w,c
  1841   0011F8  0B07               	andlw	7
  1842   0011FA  0D02               	mullw	2
  1843   0011FC  50F3               	movf	243,w,c
  1844   0011FE  0F1B               	addlw	low _lat_registers
  1845   001200  6ED9               	movwf	fsr2l,c
  1846   001202  6ADA               	clrf	fsr2h,c
  1847   001204  CFDE F03E          	movff	postinc2,??_gpio_pin_write_logic+2
  1848   001208  CFDD F03F          	movff	postdec2,??_gpio_pin_write_logic+3
  1849   00120C  C03E  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1850   001210  C03F  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1851   001214  503D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1852   001216  12DF               	iorwf	indf2,f,c
  1853                           
  1854                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 break;
  1855   001218  EF23  F009         	goto	l2017
  1856   00121C                     l2015:
  1857   00121C  503B               	movf	gpio_pin_write_logic@logic^0,w,c
  1858   00121E  6E3C               	movwf	??_gpio_pin_write_logic^0,c
  1859   001220  6A3D               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1860                           
  1861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1862                           ; Switch size 1, requested type "simple"
  1863                           ; Number of cases is 1, Range of values is 0 to 0
  1864                           ; switch strategies available:
  1865                           ; Name         Instructions Cycles
  1866                           ; simple_byte            4     3 (average)
  1867                           ;	Chosen strategy is simple_byte
  1868   001222  503D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1869   001224  0A00               	xorlw	0	; case 0
  1870   001226  B4D8               	btfsc	status,2,c
  1871   001228  EF18  F009         	goto	l2685
  1872   00122C  EF23  F009         	goto	l2017
  1873   001230                     l2685:
  1874                           
  1875                           ; Switch size 1, requested type "simple"
  1876                           ; Number of cases is 2, Range of values is 0 to 1
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte            7     4 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881   001230  503C               	movf	??_gpio_pin_write_logic^0,w,c
  1882   001232  0A00               	xorlw	0	; case 0
  1883   001234  B4D8               	btfsc	status,2,c
  1884   001236  EFBB  F008         	goto	l2009
  1885   00123A  0A01               	xorlw	1	; case 1
  1886   00123C  B4D8               	btfsc	status,2,c
  1887   00123E  EFE6  F008         	goto	l2011
  1888   001242  EF23  F009         	goto	l2017
  1889   001246                     l2017:
  1890                           
  1891                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     return ret;
  1892   001246  5041               	movf	gpio_pin_write_logic@ret^0,w,c
  1893   001248  0012               	return		;funcret
  1894   00124A                     __end_of_gpio_pin_write_logic:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _gpio_pin_direction_intialize *****************
  1898 ;; Defined at:
  1899 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1902 ;;		 -> lcd1$data_pins(8), lcd1(10), relay_initialization@pin_obj(1), led_initialize@pin_obj(1), 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  ret             1    6[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      unsigned char 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1914 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;Total ram usage:        7 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_gpio_pin_initialize
  1924 ;;		_button_initialize
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text14
  1929   001048                     __ptext14:
  1930                           	callstack 0
  1931   001048                     _gpio_pin_direction_intialize:
  1932                           	callstack 26
  1933   001048                     
  1934                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     std_ReturnType ret = (std_ReturnType)0x01;
  1935   001048  0E01               	movlw	1
  1936   00104A  6E40               	movwf	gpio_pin_direction_intialize@ret^0,c
  1937                           
  1938                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 - 1){
  1939   00104C  503A               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1940   00104E  B4D8               	btfsc	status,2,c
  1941   001050  EF2C  F008         	goto	u951
  1942   001054  EF2E  F008         	goto	u950
  1943   001058                     u951:
  1944   001058  EF3E  F008         	goto	l2029
  1945   00105C                     u950:
  1946   00105C  503A               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1947   00105E  6ED9               	movwf	fsr2l,c
  1948   001060  6ADA               	clrf	fsr2h,c
  1949   001062  30DF               	rrcf	223,w,c
  1950   001064  32E8               	rrcf	wreg,f,c
  1951   001066  32E8               	rrcf	wreg,f,c
  1952   001068  0B07               	andlw	7
  1953   00106A  6E3B               	movwf	??_gpio_pin_direction_intialize^0,c
  1954   00106C  0E07               	movlw	7
  1955   00106E  643B               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1956   001070  EF3C  F008         	goto	u961
  1957   001074  EF3E  F008         	goto	u960
  1958   001078                     u961:
  1959   001078  EF95  F008         	goto	l2037
  1960   00107C                     u960:
  1961   00107C                     l2029:
  1962                           
  1963                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:         ret = (std_ReturnType)0x00;
  1964   00107C  0E00               	movlw	0
  1965   00107E  6E40               	movwf	gpio_pin_direction_intialize@ret^0,c
  1966                           
  1967                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     }
  1968   001080  EFAB  F008         	goto	l2039
  1969   001084                     l2031:
  1970                           
  1971                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1<<_pin_config->pin));
  1972   001084  503A               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1973   001086  6ED9               	movwf	fsr2l,c
  1974   001088  6ADA               	clrf	fsr2h,c
  1975   00108A  30DF               	rrcf	223,w,c
  1976   00108C  32E8               	rrcf	wreg,f,c
  1977   00108E  32E8               	rrcf	wreg,f,c
  1978   001090  0B07               	andlw	7
  1979   001092  6E3B               	movwf	??_gpio_pin_direction_intialize^0,c
  1980   001094  0E01               	movlw	1
  1981   001096  6E3C               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1982   001098  2A3B               	incf	??_gpio_pin_direction_intialize^0,f,c
  1983   00109A  EF51  F008         	goto	u974
  1984   00109E                     u975:
  1985   00109E  90D8               	bcf	status,0,c
  1986   0010A0  363C               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1987   0010A2                     u974:
  1988   0010A2  2E3B               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1989   0010A4  EF4F  F008         	goto	u975
  1990   0010A8  503C               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1991   0010AA  0AFF               	xorlw	255
  1992   0010AC  6E3D               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1993   0010AE  503A               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1994   0010B0  6ED9               	movwf	fsr2l,c
  1995   0010B2  6ADA               	clrf	fsr2h,c
  1996   0010B4  50DF               	movf	223,w,c
  1997   0010B6  0B07               	andlw	7
  1998   0010B8  0D02               	mullw	2
  1999   0010BA  50F3               	movf	243,w,c
  2000   0010BC  0F25               	addlw	low _tris_registers
  2001   0010BE  6ED9               	movwf	fsr2l,c
  2002   0010C0  6ADA               	clrf	fsr2h,c
  2003   0010C2  CFDE F03E          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2004   0010C6  CFDD F03F          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2005   0010CA  C03E  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2006   0010CE  C03F  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2007   0010D2  503D               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2008   0010D4  16DF               	andwf	indf2,f,c
  2009                           
  2010                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:             break;
  2011   0010D6  EFAB  F008         	goto	l2039
  2012   0010DA                     l2033:
  2013                           
  2014                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1<<_pin_config->pin));
  2015   0010DA  503A               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2016   0010DC  6ED9               	movwf	fsr2l,c
  2017   0010DE  6ADA               	clrf	fsr2h,c
  2018   0010E0  30DF               	rrcf	223,w,c
  2019   0010E2  32E8               	rrcf	wreg,f,c
  2020   0010E4  32E8               	rrcf	wreg,f,c
  2021   0010E6  0B07               	andlw	7
  2022   0010E8  6E3B               	movwf	??_gpio_pin_direction_intialize^0,c
  2023   0010EA  0E01               	movlw	1
  2024   0010EC  6E3C               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2025   0010EE  2A3B               	incf	??_gpio_pin_direction_intialize^0,f,c
  2026   0010F0  EF7C  F008         	goto	u984
  2027   0010F4                     u985:
  2028   0010F4  90D8               	bcf	status,0,c
  2029   0010F6  363C               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2030   0010F8                     u984:
  2031   0010F8  2E3B               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2032   0010FA  EF7A  F008         	goto	u985
  2033   0010FE  503A               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2034   001100  6ED9               	movwf	fsr2l,c
  2035   001102  6ADA               	clrf	fsr2h,c
  2036   001104  50DF               	movf	223,w,c
  2037   001106  0B07               	andlw	7
  2038   001108  0D02               	mullw	2
  2039   00110A  50F3               	movf	243,w,c
  2040   00110C  0F25               	addlw	low _tris_registers
  2041   00110E  6ED9               	movwf	fsr2l,c
  2042   001110  6ADA               	clrf	fsr2h,c
  2043   001112  CFDE F03D          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2044   001116  CFDD F03E          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2045   00111A  C03D  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2046   00111E  C03E  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2047   001122  503C               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2048   001124  12DF               	iorwf	indf2,f,c
  2049                           
  2050                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             break;
  2051   001126  EFAB  F008         	goto	l2039
  2052   00112A                     l2037:
  2053   00112A  503A               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  2054   00112C  6ED9               	movwf	fsr2l,c
  2055   00112E  6ADA               	clrf	fsr2h,c
  2056   001130  BCDF               	btfsc	indf2,6,c
  2057   001132  EF9D  F008         	goto	u991
  2058   001136  EFA0  F008         	goto	u990
  2059   00113A                     u991:
  2060   00113A  0E01               	movlw	1
  2061   00113C  EFA1  F008         	goto	u996
  2062   001140                     u990:
  2063   001140  0E00               	movlw	0
  2064   001142                     u996:
  2065                           
  2066                           ; Switch size 1, requested type "simple"
  2067                           ; Number of cases is 2, Range of values is 0 to 1
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; simple_byte            7     4 (average)
  2071                           ;	Chosen strategy is simple_byte
  2072   001142  0A00               	xorlw	0	; case 0
  2073   001144  B4D8               	btfsc	status,2,c
  2074   001146  EF42  F008         	goto	l2031
  2075   00114A  0A01               	xorlw	1	; case 1
  2076   00114C  B4D8               	btfsc	status,2,c
  2077   00114E  EF6D  F008         	goto	l2033
  2078   001152  EF3E  F008         	goto	l2029
  2079   001156                     l2039:
  2080                           
  2081                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret;
  2082   001156  5040               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2083   001158  0012               	return		;funcret
  2084   00115A                     __end_of_gpio_pin_direction_intialize:
  2085                           	callstack 0
  2086                           
  2087                           	psect	rparam
  2088   000000                     
  2089                           	psect	config
  2090                           
  2091                           ; Padding undefined space
  2092   300000                     	org	3145728
  2093   300000  FF                 	db	255
  2094                           
  2095                           ;Config register CONFIG1H @ 0x300001
  2096                           ;	Oscillator Selection bits
  2097                           ;	OSC = HS, HS oscillator
  2098                           ;	Fail-Safe Clock Monitor Enable bit
  2099                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2100                           ;	Internal/External Oscillator Switchover bit
  2101                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2102   300001                     	org	3145729
  2103   300001  02                 	db	2
  2104                           
  2105                           ;Config register CONFIG2L @ 0x300002
  2106                           ;	Power-up Timer Enable bit
  2107                           ;	PWRT = OFF, PWRT disabled
  2108                           ;	Brown-out Reset Enable bits
  2109                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2110                           ;	Brown Out Reset Voltage bits
  2111                           ;	BORV = 1, 
  2112   300002                     	org	3145730
  2113   300002  09                 	db	9
  2114                           
  2115                           ;Config register CONFIG2H @ 0x300003
  2116                           ;	Watchdog Timer Enable bit
  2117                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2118                           ;	Watchdog Timer Postscale Select bits
  2119                           ;	WDTPS = 32768, 1:32768
  2120   300003                     	org	3145731
  2121   300003  1E                 	db	30
  2122                           
  2123                           ; Padding undefined space
  2124   300004                     	org	3145732
  2125   300004  FF                 	db	255
  2126                           
  2127                           ;Config register CONFIG3H @ 0x300005
  2128                           ;	CCP2 MUX bit
  2129                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2130                           ;	PORTB A/D Enable bit
  2131                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2132                           ;	Low-Power Timer1 Oscillator Enable bit
  2133                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2134                           ;	MCLR Pin Enable bit
  2135                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2136   300005                     	org	3145733
  2137   300005  81                 	db	129
  2138                           
  2139                           ;Config register CONFIG4L @ 0x300006
  2140                           ;	Stack Full/Underflow Reset Enable bit
  2141                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2142                           ;	Single-Supply ICSP Enable bit
  2143                           ;	LVP = OFF, Single-Supply ICSP disabled
  2144                           ;	Extended Instruction Set Enable bit
  2145                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2146                           ;	Background Debugger Enable bit
  2147                           ;	DEBUG = 0x1, unprogrammed default
  2148   300006                     	org	3145734
  2149   300006  81                 	db	129
  2150                           
  2151                           ; Padding undefined space
  2152   300007                     	org	3145735
  2153   300007  FF                 	db	255
  2154                           
  2155                           ;Config register CONFIG5L @ 0x300008
  2156                           ;	Code Protection bit
  2157                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2158                           ;	Code Protection bit
  2159                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2160                           ;	Code Protection bit
  2161                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2162                           ;	Code Protection bit
  2163                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2164   300008                     	org	3145736
  2165   300008  0F                 	db	15
  2166                           
  2167                           ;Config register CONFIG5H @ 0x300009
  2168                           ;	Boot Block Code Protection bit
  2169                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2170                           ;	Data EEPROM Code Protection bit
  2171                           ;	CPD = OFF, Data EEPROM not code-protected
  2172   300009                     	org	3145737
  2173   300009  C0                 	db	192
  2174                           
  2175                           ;Config register CONFIG6L @ 0x30000A
  2176                           ;	Write Protection bit
  2177                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2178                           ;	Write Protection bit
  2179                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2180                           ;	Write Protection bit
  2181                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2182                           ;	Write Protection bit
  2183                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2184   30000A                     	org	3145738
  2185   30000A  0F                 	db	15
  2186                           
  2187                           ;Config register CONFIG6H @ 0x30000B
  2188                           ;	Configuration Register Write Protection bit
  2189                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2190                           ;	Boot Block Write Protection bit
  2191                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2192                           ;	Data EEPROM Write Protection bit
  2193                           ;	WRTD = OFF, Data EEPROM not write-protected
  2194   30000B                     	org	3145739
  2195   30000B  E0                 	db	224
  2196                           
  2197                           ;Config register CONFIG7L @ 0x30000C
  2198                           ;	Table Read Protection bit
  2199                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2200                           ;	Table Read Protection bit
  2201                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2202                           ;	Table Read Protection bit
  2203                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2204                           ;	Table Read Protection bit
  2205                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2206   30000C                     	org	3145740
  2207   30000C  0F                 	db	15
  2208                           
  2209                           ;Config register CONFIG7H @ 0x30000D
  2210                           ;	Boot Block Table Read Protection bit
  2211                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2212   30000D                     	org	3145741
  2213   30000D  40                 	db	64
  2214                           tosu	equ	0xFFF
  2215                           tosh	equ	0xFFE
  2216                           tosl	equ	0xFFD
  2217                           stkptr	equ	0xFFC
  2218                           pclatu	equ	0xFFB
  2219                           pclath	equ	0xFFA
  2220                           pcl	equ	0xFF9
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           indf0	equ	0xFEF
  2228                           postinc0	equ	0xFEE
  2229                           postdec0	equ	0xFED
  2230                           preinc0	equ	0xFEC
  2231                           plusw0	equ	0xFEB
  2232                           fsr0h	equ	0xFEA
  2233                           fsr0l	equ	0xFE9
  2234                           wreg	equ	0xFE8
  2235                           indf1	equ	0xFE7
  2236                           postinc1	equ	0xFE6
  2237                           postdec1	equ	0xFE5
  2238                           preinc1	equ	0xFE4
  2239                           plusw1	equ	0xFE3
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           bsr	equ	0xFE0
  2243                           indf2	equ	0xFDF
  2244                           postinc2	equ	0xFDE
  2245                           postdec2	equ	0xFDD
  2246                           preinc2	equ	0xFDC
  2247                           plusw2	equ	0xFDB
  2248                           fsr2h	equ	0xFDA
  2249                           fsr2l	equ	0xFD9
  2250                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    56
    Data        57
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     30      95
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    enable_signal_8bits@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), lcd1$data_pins(COMRAM[8]), led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), relay_initialization@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_8bit_custom_character@chr	PTR unsigned char  size(1) Largest target is 8
		 -> customChar7(CODE[8]), 

    lcd_8bit_custom_character@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_char@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_char_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    lcd_8bits_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[10]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1275$buffer	PTR unsigned char  size(2) Largest target is 0

    S1275$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_custom_character
    _lcd_8bit_send_string_pos->_lcd_8bit_send_string
    _lcd_8bit_send_string_pos->_lcd_8bits_set_cursor
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_custom_character->_lcd_8bit_send_char_pos
    _lcd_8bit_send_char_pos->_lcd_8bits_set_cursor
    _lcd_8bits_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char->_enable_signal_8bits
    _Ecu_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_enable_signal_8bits
    _enable_signal_8bits->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   93022
             _application_initialize
          _lcd_8bit_custom_character
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   24812
                                             18 COMRAM     4     0      4
               _lcd_8bit_send_string
               _lcd_8bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2   11217
                                             15 COMRAM     3     1      2
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_custom_character                            8     3      5   48640
                                             23 COMRAM     7     2      5
                 _lcd_8bit_send_char
             _lcd_8bit_send_char_pos
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_pos                               5     1      4   24560
                                             18 COMRAM     5     1      4
                 _lcd_8bit_send_char
               _lcd_8bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bits_set_cursor                                 4     1      3   13149
                                             15 COMRAM     3     0      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   6     4      2   10951
                                              9 COMRAM     6     4      2
                _enable_signal_8bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   19570
                     _Ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _Ecu_initialize                                       0     0      0   19570
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19570
                                             15 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12471
                                              9 COMRAM     6     4      2
                _enable_signal_8bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _enable_signal_8bits                                  2     1      1    5248
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  2     1      1    6679
                                              8 COMRAM     2     1      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                 8     6      2    5020
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _Ecu_initialize
       _lcd_8bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_8bit_send_command
           _enable_signal_8bits
             _gpio_pin_write_logic
           _gpio_pin_write_logic
   _lcd_8bit_custom_character
     _lcd_8bit_send_char
       _enable_signal_8bits
       _gpio_pin_write_logic
     _lcd_8bit_send_char_pos
       _lcd_8bit_send_char
       _lcd_8bits_set_cursor
         _lcd_8bit_send_command
     _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
     _lcd_8bits_set_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1E      5F       1       74.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      39        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 08 02:35:26 2024

             __end_of_lcd_8bit_send_char 140A                                      l102 131A  
                                    l121 15C0                                      l211 169E  
                                    l116 1408                                      l109 147E  
                                    l141 14F0                                      l134 16D0  
                                    l129 1546                                      l410 1584  
                                    l226 1392                                      l328 16DA  
                                    l376 1158                                      l393 1248  
                                    l476 16E2                                      u920 116E  
                                    u921 116A                                      u950 105C  
                                    u934 1194                                      u951 1058  
                                    u935 1190                                      u960 107C  
                                    u944 11EA                                      u961 1078  
                                    u945 11E6                                      u990 1140  
                                    u974 10A2                                      u991 113A  
                                    u975 109E                                      u984 10F8  
                                    u985 10F4                                      u996 1142  
                                    _ret 005F                      led_initialize@F3062 005E  
              ?_lcd_8bit_send_string_pos 004C                                      wreg 0FE8  
              _lcd_8bit_custom_character 1480                                     l2011 11CC  
           __end_of_lcd_8bit_send_string 1548                                     l2005 115A  
                                   l2101 127A                                     l2031 1084  
                                   l2007 116E                                     l2015 121C  
                                   l2111 12B2                                     l2103 1286  
                                   l2033 10DA                                     l2025 1048  
                                   l2009 1176                                     l2017 1246  
                                   l2121 12F6                                     l2113 12CC  
                                   l2105 1288                                     l2027 105C  
                                   l2051 1692                                     l2043 166A  
                                   l2123 1302                                     l2115 12D2  
                                   l2107 1298                                     l2131 13A8  
                                   l2037 112A                                     l2029 107C  
                                   l2061 1582                                     l2045 167A  
                                   l2125 130E                                     l2117 12DE  
                                   l2109 12A6                                     l2141 13C0  
                                   l2133 13B0                                     l2039 1156  
                                   l2055 1548                                     l2047 167E  
                                   l2071 1432                                     l2119 12EA  
                                   l2143 13EC                                     l2135 13BC  
                                   l2057 155C                                     l2049 168A  
                                   l2081 1464                                     l2065 140A  
                                   l2145 13EE                                     l2129 1394  
                                   l2161 1346                                     l2153 131C  
                                   l2241 16B4                                     l2059 1564  
                                   l2083 1474                                     l2067 141E  
                                   l2091 125E                                     l2235 16D2  
                                   l2147 13FE                                     l2163 1358  
                                   l2155 131C                                     l2251 1498  
                                   l2243 16C4                                     l2077 1436  
                                   l2085 147C                                     l2069 1426  
                                   l2093 1262                                     l2309 16DC  
                                   l2149 1406                                     l2157 1322  
                                   l2173 1586                                     l2261 14CA  
                                   l2253 14AA                                     l2237 16A0  
                                   l2079 1462                                     l2095 1276  
                                   l2159 1334                                     l2167 136A  
                                   l2175 159A                                     l2263 14CC  
                                   l2247 1480                                     l2191 1528  
                                   l2183 14F2                                     l2239 16B0  
                                   l2089 124A                                     l2169 1390  
                                   l2177 15A2                                     l2265 14DC  
                                   l2249 1494                                     l2193 1544  
                                   l2185 1506                                     l2179 15BE  
                                   l2259 14AE                                     l2187 150E  
                                   l2189 1526                                     l2675 15FC  
                                   l2685 1230                                     l2677 1600  
                                   l2679 1614                                     STR_1 1043  
                                   STR_2 1040                                     STR_4 1039  
                                   u1000 167A                                     u1001 1676  
                                   u1010 155C                                     u1011 1558  
                                   u1020 141E                                     u1100 159A  
                                   u1021 141A                                     u1101 1596  
                                   u1110 1506                                     u1111 1502  
                                   u1040 1474                                     u1120 1544  
                                   u1041 1470                                     u1121 1540  
                                   u1034 1450                                     u1050 125E  
                                   u1035 144C                                     u1051 125A  
                                   u1060 1298                                     u1061 1294  
                                   u1070 13A8                                     u1071 13A4  
                                   u1160 16B0                                     u1161 16AC  
                                   u1090 13FE                                     u1170 1494  
                                   u1091 13FA                                     u1171 1490  
                                   u1084 13DA                                     u1180 14DC  
                                   u1085 13D6                                     u1181 14D8  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u1607 129E  
                                   u1617 12B8                                     u1627 12CE  
                                   u1637 168C                                     _lcd1 0030  
                                   _led1 002F                                     _main 15FC  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                ?_lcd_8bit_send_char_pos 004C                                     prodl 0FF3  
                                   start 0000               lcd_8bit_initialize@counter 004C  
          __end_of_lcd_8bit_send_command 1480                             ___param_bank 0000  
                   _gpio_pin_write_logic 115A                                    ?_main 003A  
               ??_application_initialize 004D                      relay_turn_off@F3065 0058  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                lcd_8bits_set_cursor@lcd 0049                                    tablat 0FF5  
         __end_of_lcd_8bit_send_char_pos 15C2                                    status 0FD8  
                        __initialization 1634                             __end_of_main 1634  
                  ?_gpio_pin_write_logic 003A                            _lat_registers 001B  
                                 ??_main 0058                           _Ecu_initialize 16D2  
                          __activetblptr 0002         lcd_8bit_send_string_pos@coloumns 004E  
                       led_turn_on@F3067 005D                 lcd_8bits_set_cursor@Rows 004A  
      lcd_8bit_custom_character@coloumns 0053                     _lcd_8bit_send_string 14F2  
                 __end_of_Ecu_initialize 16DC                                   clear_0 165A  
                                 isa$std 0001              lcd_8bit_send_string_pos@Row 004D  
            lcd_8bit_send_string_pos@lcd 004C              lcd_8bit_send_string_pos@str 004F  
gpio_pin_direction_intialize@_pin_config 003A                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 1660  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 003C  
                         __pcstackCOMRAM 003A                    ?_lcd_8bit_send_string 0049  
                        ?_Ecu_initialize 003A             lcd_8bit_custom_character@Row 0052  
           lcd_8bit_custom_character@chr 0054             lcd_8bit_custom_character@lcd 0051  
                     _lcd_8bit_send_char 1394                      ?_lcd_8bit_send_char 0043  
                 _application_initialize 16DC                               __pnvCOMRAM 005F  
                    _enable_signal_8bits 166A                   lcd_8bit_initialize@lcd 0049  
                 lcd_8bit_initialize@ret 004B        __end_of_lcd_8bit_custom_character 14F2  
                      led_turn_off@F3072 005C                     ??_lcd_8bit_send_char 0045  
                   ?_enable_signal_8bits 0042                            _keypad_values 0001  
                   led_turn_toggle@F3077 005B                           _tris_registers 0025  
           lcd_8bits_set_cursor@coloumns 004B                                  __Hparam 0000  
                                __Lparam 0000                   ??_lcd_8bit_send_string 004B  
                    _gpio_pin_initialize 1548                    _lcd_8bit_send_command 140A  
                           __psmallconst 1000                                  __pcinit 1634  
                                __ramtop 1000                               _customChar 1029  
               _lcd_8bit_send_string_pos 16A0                                  __ptext0 15FC  
                                __ptext1 16A0                                  __ptext2 14F2  
                                __ptext3 1480                                  __ptext4 1586  
                                __ptext5 131C                                  __ptext6 1394  
                                __ptext7 16DC                                  __ptext8 16D2  
                                __ptext9 124A                    ??_enable_signal_8bits 0043  
                   ?_gpio_pin_initialize 0042                     end_of_initialization 1660  
                          __Lmediumconst 0000                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE             __end_of_lcd_8bits_set_cursor 1394  
   __end_of_gpio_pin_direction_intialize 115A             _gpio_pin_direction_intialize 1048  
                  ??_gpio_pin_initialize 0043                         ??_Ecu_initialize 004D  
                     relay_turn_on@F3060 0059                   ?_lcd_8bit_send_command 0043  
                 enable_signal_8bits@lcd 0042                            __pidataCOMRAM 15C2  
                    start_initialization 1634                      _lcd_8bit_initialize 124A  
               ??_lcd_8bit_send_char_pos 0050                lcd_8bit_send_char@counter 0048  
          ?_gpio_pin_direction_intialize 003A                  ?_application_initialize 003A  
                   ?_lcd_8bit_initialize 0049         lcd_8bit_custom_character@counter 0057  
               lcd_8bit_send_command@lcd 0043                 lcd_8bit_send_command@ret 0047  
                            __pbssCOMRAM 0058           __end_of_application_initialize 16E4  
              lcd_8bit_send_char_pos@Row 004D                lcd_8bit_send_char_pos@lcd 004C  
              lcd_8bit_send_char_pos@ret 0050          gpio_pin_direction_intialize@ret 0040  
                   _lcd_8bits_set_cursor 131C                    ??_lcd_8bit_initialize 004A  
             ??_lcd_8bit_send_string_pos 0050          gpio_pin_write_logic@_pin_config 003A  
             ?_lcd_8bit_custom_character 0051                gpio_pin_write_logic@logic 003B  
                            __smallconst 1000                      __end_of_customChar2 1029  
                    __end_of_customChar3 1021                      __end_of_customChar4 1019  
                    __end_of_customChar5 1011                      __end_of_customChar6 1009  
                    __end_of_customChar7 1039           ??_gpio_pin_direction_intialize 003B  
                  ?_lcd_8bits_set_cursor 0049           lcd_8bit_send_char_pos@coloumns 004E  
                lcd_8bit_send_char@_char 0044              lcd_8bit_send_char_pos@_char 004F  
            __end_of_enable_signal_8bits 16A0                   gpio_pin_initialize@ret 0043  
                gpio_pin_write_logic@ret 0041                                copy_data0 1648  
              relay_initialization@F3055 005A                  ??_lcd_8bit_send_command 0045  
                               __Hrparam 0000                   _lcd_8bit_send_char_pos 1586  
                               __Lrparam 0000          lcd_8bit_custom_character@mempos 0055  
            __end_of_gpio_pin_initialize 1586           gpio_pin_initialize@_pin_config 0042  
                            _customChar2 1021                              _customChar3 1019  
                            _customChar4 1011                              _customChar5 1009  
                            _customChar6 1001                              _customChar7 1031  
                               __ptext10 140A                                 __ptext11 166A  
                               __ptext12 1548                                 __ptext13 115A  
                               __ptext14 1048                   ??_lcd_8bits_set_cursor 004C  
                     __end_of_customChar 1031         __end_of_lcd_8bit_send_string_pos 16D2  
                               isa$xinst 0000             __end_of_gpio_pin_write_logic 124A  
                  lcd_8bit_send_char@lcd 0043                    lcd_8bit_send_char@ret 0047  
            ??_lcd_8bit_custom_character 0056                           _port_registers 0011  
                lcd_8bit_send_string@lcd 0049                  lcd_8bit_send_string@ret 004B  
                lcd_8bit_send_string@str 004A              __end_of_lcd_8bit_initialize 131C  
           lcd_8bit_send_command@command 0044             lcd_8bit_send_command@counter 0048  
